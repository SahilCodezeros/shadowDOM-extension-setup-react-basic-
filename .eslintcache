[{"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/Content.js":"1","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/webUserTour.js":"2","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/createModalComponent.js":"3","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/previewModalComponent.js":"4","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/defaultButton.js":"5","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/draggable.js":"6","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/ContinueTourConfirmation.js":"7","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/settingsComponents.js":"8","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/wallet-account.js":"9","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account_creator.js":"10","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account.js":"11","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/confirmPassword.js":"12","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/index.js":"13","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/web.js":"14","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/serialize.js":"15","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/json-rpc-provider.js":"16","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/generated/rpc_error_types.js":"17","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js":"18","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/signup.js":"19","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/forgotPassword.js":"20","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/getBalance.js":"21","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileEdit.js":"22","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userCUSD.js":"23","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/validation.js":"24","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/reportWebVitals.js":"25","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/audAndVidCommon.js":"26","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/axios.js":"27","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/mySubscription.js":"28","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/SortableItem.js":"29","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/main.js":"30","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/mainflip.js":"31","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/myExtensionRootFlip.js":"32","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/videoTour.js":"33","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/CreateNewTrailTab.js":"34","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/near.js":"35","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account_multisig.js":"36","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/index.js":"37","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/enums.js":"38","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/network.js":"39","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/browser_local_storage_key_store.js":"40","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userProfile.js":"41","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileList.js":"42","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/AppUtill.js":"43","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/trailOverlay.js":"44","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/tooltip.js":"45","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/common.js":"46","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/audioTour.js":"47","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/index.js":"48","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/connection.js":"49","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/validators.js":"50","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/index.js":"51","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/keystore.js":"52","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/index.js":"53","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/TrailSettingsModal.js":"54","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/CreateTourConfirmationModal.js":"55","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/sendtx.js":"56","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/stopePlayingMedia.js":"57","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/textEditor.js":"58","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/textEditor.js":"59","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/transaction.js":"60","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/generateKey.js":"61","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/TrailDeleteModal.js":"62","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/common-index.js":"63","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/key_pair.js":"64","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/in_memory_key_store.js":"65","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/errors.js":"66","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/format.js":"67","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/App.js":"68","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/trailitLogoInPreview.js":"69","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/videoTour.js":"70","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/CreateNewTrailModal.js":"71","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/tooltip.js":"72","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/contract.js":"73","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/rpc_errors.js":"74","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/provider.js":"75","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userVerification.js":"76","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/index.js":"77","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileAdd.js":"78","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/wallet/index.js":"79","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/initButtonPosition.js":"80","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/otpVerification.js":"81","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/api/index.js":"82","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/socket.js":"83","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/SendTipForm.js":"84","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/signer.js":"85","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/merge_key_store.js":"86","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userConfirmation.js":"87","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/audioTour.js":"88","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/SendTipModal.js":"89","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/imageResizer.js":"90","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/exponential-backoff.js":"91","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/login.js":"92","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/index.js":"93","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/interceptor.js":"94"},{"size":181931,"mtime":1616571330683,"results":"95","hashOfConfig":"96"},{"size":19870,"mtime":1615296941294,"results":"97","hashOfConfig":"96"},{"size":6557,"mtime":1614347016260,"results":"98","hashOfConfig":"96"},{"size":13106,"mtime":1616472927174,"results":"99","hashOfConfig":"96"},{"size":22250,"mtime":1614750578075,"results":"100","hashOfConfig":"96"},{"size":1351,"mtime":1612252112038,"results":"101","hashOfConfig":"96"},{"size":1934,"mtime":1615951534944,"results":"102","hashOfConfig":"96"},{"size":2394,"mtime":1614347016284,"results":"103","hashOfConfig":"96"},{"size":13274,"mtime":1606982944502,"results":"104","hashOfConfig":"96"},{"size":2500,"mtime":1606982944438,"results":"105","hashOfConfig":"96"},{"size":18770,"mtime":1606982944430,"results":"106","hashOfConfig":"96"},{"size":1709,"mtime":1607059745907,"results":"107","hashOfConfig":"96"},{"size":290,"mtime":1606982944474,"results":"108","hashOfConfig":"96"},{"size":3368,"mtime":1606982944498,"results":"109","hashOfConfig":"96"},{"size":10911,"mtime":1606982944498,"results":"110","hashOfConfig":"96"},{"size":8301,"mtime":1606982944478,"results":"111","hashOfConfig":"96"},{"size":4925,"mtime":1606982944462,"results":"112","hashOfConfig":"96"},{"size":5827,"mtime":1606982944474,"results":"113","hashOfConfig":"96"},{"size":6111,"mtime":1614347016288,"results":"114","hashOfConfig":"96"},{"size":1149,"mtime":1607059816555,"results":"115","hashOfConfig":"96"},{"size":587,"mtime":1611125750192,"results":"116","hashOfConfig":"96"},{"size":11194,"mtime":1615793605796,"results":"117","hashOfConfig":"96"},{"size":4479,"mtime":1614658326770,"results":"118","hashOfConfig":"96"},{"size":649,"mtime":1615885355489,"results":"119","hashOfConfig":"96"},{"size":362,"mtime":1606808398378,"results":"120","hashOfConfig":"96"},{"size":1011,"mtime":1606982944334,"results":"121","hashOfConfig":"96"},{"size":6710,"mtime":1616562451650,"results":"122","hashOfConfig":"96"},{"size":2617,"mtime":1607056311495,"results":"123","hashOfConfig":"96"},{"size":12225,"mtime":1616407582694,"results":"124","hashOfConfig":"96"},{"size":12652,"mtime":1614750564874,"results":"125","hashOfConfig":"96"},{"size":1126,"mtime":1614347016300,"results":"126","hashOfConfig":"96"},{"size":51827,"mtime":1616587897944,"results":"127","hashOfConfig":"96"},{"size":5689,"mtime":1611125750332,"results":"128","hashOfConfig":"96"},{"size":2281,"mtime":1607059703331,"results":"129","hashOfConfig":"96"},{"size":5257,"mtime":1606982944474,"results":"130","hashOfConfig":"96"},{"size":11325,"mtime":1606982944446,"results":"131","hashOfConfig":"96"},{"size":438,"mtime":1606982944490,"results":"132","hashOfConfig":"96"},{"size":477,"mtime":1606982944482,"results":"133","hashOfConfig":"96"},{"size":0,"mtime":1606982944490,"results":"134","hashOfConfig":"96"},{"size":4661,"mtime":1606982944470,"results":"135","hashOfConfig":"96"},{"size":24209,"mtime":1616481710053,"results":"136","hashOfConfig":"96"},{"size":13017,"mtime":1616159257329,"results":"137","hashOfConfig":"96"},{"size":4548,"mtime":1614927379372,"results":"138","hashOfConfig":"96"},{"size":2095,"mtime":1611125750224,"results":"139","hashOfConfig":"96"},{"size":12737,"mtime":1611665110933,"results":"140","hashOfConfig":"96"},{"size":24072,"mtime":1616586992898,"results":"141","hashOfConfig":"96"},{"size":11884,"mtime":1611125750288,"results":"142","hashOfConfig":"96"},{"size":502,"mtime":1606982881257,"results":"143","hashOfConfig":"96"},{"size":1335,"mtime":1606982944450,"results":"144","hashOfConfig":"96"},{"size":2121,"mtime":1606982944502,"results":"145","hashOfConfig":"96"},{"size":428,"mtime":1606982944470,"results":"146","hashOfConfig":"96"},{"size":79,"mtime":1606982944470,"results":"147","hashOfConfig":"96"},{"size":1217,"mtime":1616581513823,"results":"148","hashOfConfig":"96"},{"size":1695,"mtime":1614347016248,"results":"149","hashOfConfig":"96"},{"size":18745,"mtime":1616575791366,"results":"150","hashOfConfig":"96"},{"size":4189,"mtime":1606982944602,"results":"151","hashOfConfig":"96"},{"size":2845,"mtime":1614347016236,"results":"152","hashOfConfig":"96"},{"size":9457,"mtime":1614347016244,"results":"153","hashOfConfig":"96"},{"size":2660,"mtime":1611125750332,"results":"154","hashOfConfig":"96"},{"size":8620,"mtime":1606982944482,"results":"155","hashOfConfig":"96"},{"size":995,"mtime":1611125750176,"results":"156","hashOfConfig":"96"},{"size":2089,"mtime":1616063838429,"results":"157","hashOfConfig":"96"},{"size":827,"mtime":1606982944446,"results":"158","hashOfConfig":"96"},{"size":3856,"mtime":1606982944490,"results":"159","hashOfConfig":"96"},{"size":3609,"mtime":1606982944470,"results":"160","hashOfConfig":"96"},{"size":722,"mtime":1606982944486,"results":"161","hashOfConfig":"96"},{"size":3712,"mtime":1606982944486,"results":"162","hashOfConfig":"96"},{"size":3996,"mtime":1616565931404,"results":"163","hashOfConfig":"96"},{"size":940,"mtime":1611125750224,"results":"164","hashOfConfig":"96"},{"size":16050,"mtime":1615296165191,"results":"165","hashOfConfig":"96"},{"size":4416,"mtime":1616159781833,"results":"166","hashOfConfig":"96"},{"size":1412,"mtime":1616586606506,"results":"167","hashOfConfig":"96"},{"size":3352,"mtime":1606982944450,"results":"168","hashOfConfig":"96"},{"size":2522,"mtime":1606982944490,"results":"169","hashOfConfig":"96"},{"size":1139,"mtime":1606982944478,"results":"170","hashOfConfig":"96"},{"size":1309,"mtime":1607059941672,"results":"171","hashOfConfig":"96"},{"size":256,"mtime":1606982881233,"results":"172","hashOfConfig":"96"},{"size":4931,"mtime":1616417348073,"results":"173","hashOfConfig":"96"},{"size":1037,"mtime":1606982944350,"results":"174","hashOfConfig":"96"},{"size":555,"mtime":1612252112054,"results":"175","hashOfConfig":"96"},{"size":1237,"mtime":1607059848059,"results":"176","hashOfConfig":"96"},{"size":250,"mtime":1606982944342,"results":"177","hashOfConfig":"96"},{"size":158,"mtime":1614347016236,"results":"178","hashOfConfig":"96"},{"size":5130,"mtime":1616126798529,"results":"179","hashOfConfig":"96"},{"size":3148,"mtime":1606982944482,"results":"180","hashOfConfig":"96"},{"size":4026,"mtime":1606982944474,"results":"181","hashOfConfig":"96"},{"size":657,"mtime":1607058123065,"results":"182","hashOfConfig":"96"},{"size":17531,"mtime":1616480867663,"results":"183","hashOfConfig":"96"},{"size":2078,"mtime":1615815079493,"results":"184","hashOfConfig":"96"},{"size":7196,"mtime":1614832317755,"results":"185","hashOfConfig":"96"},{"size":1318,"mtime":1606982944486,"results":"186","hashOfConfig":"96"},{"size":9625,"mtime":1616159257201,"results":"187","hashOfConfig":"96"},{"size":582,"mtime":1606982944342,"results":"188","hashOfConfig":"96"},{"size":1284,"mtime":1616394190830,"results":"189","hashOfConfig":"96"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"193"},"v5ikia",{"filePath":"194","messages":"195","errorCount":0,"warningCount":32,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"197"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"201"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"201"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"213"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"219"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"224","usedDeprecatedRules":"207"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227","usedDeprecatedRules":"210"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"234","usedDeprecatedRules":"193"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"210"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"201"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"245","usedDeprecatedRules":"201"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"197"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"201"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"201"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"210"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"260","usedDeprecatedRules":"261"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"210"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"271","usedDeprecatedRules":"201"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"201"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"201"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"290","usedDeprecatedRules":"201"},{"filePath":"291","messages":"292","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"293","usedDeprecatedRules":"210"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"298","usedDeprecatedRules":"210"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"301","messages":"302","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"303","usedDeprecatedRules":"201"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"210"},{"filePath":"307","messages":"308","errorCount":0,"warningCount":17,"fixableErrorCount":0,"fixableWarningCount":1,"source":"309","usedDeprecatedRules":"201"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"312","messages":"313","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"314","messages":"315","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"316","usedDeprecatedRules":"201"},{"filePath":"317","messages":"318","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"319","messages":"320","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"197"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"325","messages":"326","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"327","usedDeprecatedRules":"197"},{"filePath":"328","messages":"329","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"332","messages":"333","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"193"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"197"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"201"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"354","usedDeprecatedRules":"201"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"357","messages":"358","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"363","usedDeprecatedRules":"364"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"371","usedDeprecatedRules":"279"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"284"},{"filePath":"374","messages":"375","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"376","usedDeprecatedRules":"207"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":"379","usedDeprecatedRules":"210"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"382","messages":"383","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"384","usedDeprecatedRules":"193"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"391","usedDeprecatedRules":"201"},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"394"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"397","usedDeprecatedRules":"213"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"401"},{"filePath":"402","messages":"403","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"404","messages":"405","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"406","usedDeprecatedRules":"407"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"410"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"210"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"415","usedDeprecatedRules":"210"},{"filePath":"416","messages":"417","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"201"},{"filePath":"418","messages":"419","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"420"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"423","usedDeprecatedRules":"279"},{"filePath":"424","messages":"425","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"426","usedDeprecatedRules":"201"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"207"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"193"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435","usedDeprecatedRules":"279"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"438"},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"342"},"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/Content.js",["441","442","443","444","445","446","447","448","449","450","451","452","453","454","455","456","457","458","459","460","461","462","463","464"],"import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"antd\";\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport unique from \"unique-selector\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport WebFont from \"webfontloader\";\nimport Draggable from \"react-draggable\";\n\nimport { socket } from \"./common/socket\";\nimport Tooltip from \"./components/tooltip\";\nimport VideoTour from \"./components/videoTour\";\nimport AudioTour from \"./components/audioTour\";\nimport { sendTransection } from \"./code/sendtx\";\nimport WebUserTour from \"./components/webUserTour\";\nimport MySubscription from \"./components/mySubscription\";\nimport SendTipModal from \"./components/Modal/SendTipModal\";\nimport TrailSetting from \"./components/Modal/TrailSettingsModal\";\nimport { handleFileUpload } from \"./common/audAndVidCommon\";\nimport { initButtonPosition } from \"./common/initButtonPosition\";\nimport CreateNewTrailModal from \"./components/CreateNewTrailModal\";\nimport CreateModalComponent from \"./components/Modal/createModalComponent\";\nimport { queryParentElement } from \"./components/common\";\nimport TrailDeleteModal from \"./components/Modal/TrailDeleteModal\";\nimport PreviewModalComponent from \"./components/Modal/previewModalComponent\";\nimport SortableItem, { SortableContainer } from \"./components/SortableItem\";\nimport {\n  addOverlay,\n  setOverlayHtml,\n  removeOverlay,\n} from \"./common/trailOverlay\";\nimport {\n  addTrailitLogo,\n  removeTrailitLogo,\n} from \"./common/trailitLogoInPreview\";\nimport CreateTourConfirmationModal from \"./components/Modal/CreateTourConfirmationModal\";\nimport {\n  getAllUser,\n  deleteTrail,\n  getUserData,\n  uploadTrails,\n  followTrails,\n  arraySorting,\n  getTrailPublic,\n  getFollowTrails,\n  updateTrailFlag,\n  getUserOneTrail,\n  UpdateTrailData,\n  updateTrailTrack,\n  deleteSingleTrail,\n  getSingleTrailData,\n  getAllNotification,\n  updateNotification,\n  unFollowTrailOfUser,\n  getFollowedOneTrail,\n} from \"./common/axios\";\n\nimport { main1Css, main2Css } from \"./css/main\";\nimport { tooltipCss1 } from \"./css/tooltip\";\nimport { mainFlipCss } from \"./css/mainflip\";\nimport {\n  myExtensionRootFlipCss0,\n  myExtensionRootFlipCss1,\n  myExtensionRootFlipCss2,\n  myExtensionRootFlipCss3,\n  myExtensionRootFlipCss4,\n  myExtensionRootFlipCss5,\n} from \"./css/myExtensionRootFlip\";\nimport {\n  defaultButtonCss1,\n  defaultButtonCss2,\n  defaultButtonCss3,\n} from \"./css/defaultButton\";\n\nimport \"./Content.css\";\nimport { get } from \"./AppUtill\";\nimport { resolve } from \"promise\";\n\n/*global chrome*/\n\nWebFont.load({\n  google: {\n    families: [\"Lato\", \"Raleway:400,500,700\", \"sans-serif\", \"Montserrat\"],\n  },\n  // eslint-disable-next-line no-restricted-globals\n  context: frames[\"text-editor-frame\"],\n});\n\nlet app;\nlet obj = {};\nlet root1 = \"none\";\nlet allTrails = [];\nlet trailWebUserTour = [];\nlet preventToggle = false;\nlet autoLogoutTimeout;\n\nconst resizeScreen = () => {\n  return window.innerWidth <= 760;\n};\n\nif (window.location.href.includes(\"https://www.and.co\")) {\n  document.querySelector(\"html\").style.zoom = \"100%\";\n}\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n      trail_web_user_tour: [],\n      modalSubscription: false,\n      modalCreateNewTrailModal: false,\n      currentUserId: null,\n      followerList: [],\n      closeContinue: false,\n      showSetting: false,\n      followedTrailUserData: null,\n      confirmationModal: {\n        show: false,\n        tourType: \"\",\n      },\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"componentDidMount\");\n\n    autoLogoutTimeout = setTimeout(() => {\n      // Call logout function\n      // this.props.onClickToLogout();\n      console.log(\"Auto Logout\");\n    }, 10000);\n\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"trail_data_id\",\n        \"trail_id\",\n        \"userData\",\n        \"previewUserId\",\n        \"notification\",\n        \"saveSort\",\n        \"tourStep\",\n        \"closeContinue\",\n        \"isPreview\",\n        \"isPreviewSingleTrail\",\n        \"authorData\",\n        \"showSetting\",\n        \"followedTrailUserData\",\n        \"noStepsToWatch\",\n      ],\n      async (items) => {\n        let closeContinue = false;\n\n        if (\n          items.closeContinue &&\n          items.trail_web_user_tour &&\n          items.trail_web_user_tour.length > 0\n        ) {\n          closeContinue = true;\n        }\n\n        this.setState({\n          closeContinue: closeContinue,\n          currentUserId: items.userData._id,\n          followedTrailUserData: items.followedTrailUserData,\n        });\n        socket.on(\"connect\", () => {});\n\n        socket.emit(\"userId\", items.userData._id);\n\n        // socket.on('notification', (data) => {\n        // \t// Get chrome push notification\n        // \tthis.getNewNotification();\n\n        // \t// Get notifiation data from server when socket notificatin listen\n        // \tthis.userNotificaion();\n        // });\n\n        // // Get notifiation data from server when page load\n        // this.userNotificaion();\n\n        if (items.showSetting !== undefined && items.showSetting !== null) {\n          // Set show setting state\n          this.setState({ showSetting: items.showSetting });\n        }\n\n        chrome.storage.onChanged.addListener(async (changes) => {\n          // console.log(\"change1\", changes);\n          //\n          // if (changes.authorData && changes.authorData.userName.newValue) {\n          //   let { data } = await getUserData(\n          //     changes.authorData.newValue.userName\n          //   );\n          //\n\n          //   chrome.storage.local.set({\n          //     authorData: data.response.result.userData,\n          //   });\n          // }\n\n          if (changes.showSetting) {\n            // Set show setting state\n            this.setState({ showSetting: changes.showSetting.newValue });\n          }\n\n          if (\n            (changes.isPreview && changes.isPreview.newValue) ||\n            (changes.isPreviewSingleTrail &&\n              changes.isPreviewSingleTrail.newValue)\n          ) {\n            this.openMenu(\"preview\");\n          }\n\n          if (changes.closeContinue !== undefined) {\n            this.setState({ closeContinue: changes.closeContinue.newValue });\n          }\n\n          if (\n            changes.openButton &&\n            changes.openButton.newValue === \"ManageTrail\"\n          ) {\n            this.props.mainToggle();\n          }\n\n          if (\n            changes.currentTourType &&\n            changes.currentTourType.newValue === \"\" &&\n            changes.tourStep &&\n            changes.tourStep.newValue === \"\" &&\n            changes.tourType &&\n            changes.tourType.newValue === \"\"\n          ) {\n            chrome.storage.local.get(\n              [\n                \"trail_web_user_tour\",\n                \"userData\",\n                \"trail_id\",\n                \"previewUserId\",\n                \"notification\",\n                \"saveSort\",\n                \"tourStep\",\n                \"followedTrailUserData\",\n                \"noStepsToWatch\",\n                \"isPreview\",\n                \"currentTrailsTab\",\n              ],\n              async (items) => {\n                // console.log(\"line 241\");\n                try {\n                  if (\n                    items.currentTrailsTab === \"Followed\" &&\n                    items.followedTrailUserData\n                  ) {\n                    const data = {\n                      ...items,\n                      trail_id: items.trail_id,\n                      tourStep: items.tourStep,\n                      authorData: { ...items.followedTrailUserData },\n                      isPreview: items.isPreview,\n                      noStepsToWatch: items.noStepsToWatch,\n                    };\n\n                    await this.getCurrUserFollowedTrailData(data);\n                  } else {\n                    let data = { ...items };\n                    if (items.followedTrailUserData) {\n                      data = {\n                        ...items,\n                        trail_id: items.trail_id,\n                        tourStep: items.tourStep,\n                        userData: { ...items.followedTrailUserData },\n                        trail_web_user_tour: items.trail_web_user_tour,\n                      };\n                    }\n\n                    // Call common get user data function\n                    await this.getCurrUserDataCommon(data);\n                  }\n                } catch (err) {\n                  console.log(\"err\", err);\n                }\n              }\n            );\n          }\n        });\n\n        if (\n          document.URL.includes(\n            `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trail_data_tour/`\n          ) &&\n          !items.saveSort\n        ) {\n          let previewUserId;\n          const url = new URL(document.URL);\n\n          // Remove notification\n          const data = {\n            // user_id: items.userData._id,\n            updateValue: {\n              flag: \"read\",\n            },\n            updated: new Date().getTime(),\n          };\n\n          try {\n            const notiRes = await updateNotification(data);\n            if (\n              notiRes.data.response &&\n              notiRes.data.response.statusCode === \"200\"\n            ) {\n              // Remove asterisk from trail icon\n              chrome.runtime.sendMessage(\"\", {\n                type: \"badgeText\",\n                badgeText: \"\",\n              });\n            }\n\n            // if (!items.previewUserId) {\n            // \tlesockett url = new URL(document.URL);\n            // \tconst params = new URLSearchParams(url.search.substring(1));\n            // \tpreviewUserId = params.get('user_id');\n            // } else {\n            // \tpreviewUserId = items.previewUserId\n            // }\n          } catch (err) {}\n\n          const params = new URLSearchParams(url.search.substring(1));\n          previewUserId = params.get(\"user_id\");\n          let trailId = params.get(\"trailId\");\n\n          // Get trails of preview user from database\n          let screen = resizeScreen() ? \"mobile\" : \"web\";\n          const res = await getUserOneTrail(trailId, screen);\n          const result = res.data;\n\n          if (\n            result.response &&\n            result.response.statusCode !== 404 &&\n            result.response.result.length > 0\n          ) {\n            result.response.result.forEach((el) => {\n              allTrails.push({\n                userId: previewUserId,\n                trail_data_id: el.trail_data_id,\n                url: el.url,\n                path: el.path,\n                selector: el.selector,\n                class: el.class,\n                title: el.title,\n                description: el.description,\n                web_url: el.web_url,\n                trail_id: el.trail_id,\n                type: el.type,\n                uniqueTarget: el.unique_target,\n                unique_target_one: el.unique_target_one,\n                mobile_media_type: el.mobile_media_type,\n                mobile_title: el.mobile_title,\n                mobile_description: el.mobile_description,\n                mediaType: el.media_type,\n                created: el.created,\n              });\n            });\n\n            // if (allTrails.length > 0) {\n            // \tallTrails.sort((a, b) => {\n            // \t\treturn (+a.created) - (+b.created);\n            // \t});\n            // }\n\n            // Get follow data of user from database\n            const followData = await getFollowTrails();\n            const followRes = followData.data;\n\n            if (\n              followRes.response.statusCode !== 404 ||\n              followRes.response.result !== \"Trailit follow not found\"\n            ) {\n              const follow =\n                followRes.response.result.count.length > 0 ? true : false;\n\n              obj.followingData = {\n                previewUserId,\n                follow,\n              };\n\n              chrome.storage.local.set({\n                followData: {\n                  previewUserId,\n                  follow,\n                },\n              });\n            }\n\n            preventToggle = true;\n            trailWebUserTour = allTrails;\n\n            chrome.storage.local.set({\n              trail_web_user_tour: allTrails,\n              previewUserId,\n            });\n\n            this.openMenu(\"preview\", previewUserId);\n          }\n        } else if (\n          items.userData &&\n          (typeof items.previewUserId === \"undefined\" ||\n            items.previewUserId === \"\") &&\n          !items.saveSort\n        ) {\n          if (preventToggle) {\n            preventToggle = false;\n          }\n\n          // For viewing followed trail data\n          if (items.followedTrailUserData) {\n            const data = {\n              ...items,\n              trail_id: items.trail_id,\n              tourStep: items.tourStep,\n              authorData: { ...items.followedTrailUserData },\n              isPreview: items.isPreview,\n              noStepsToWatch: items.noStepsToWatch,\n            };\n\n            // console.log(\"line 406\");\n\n            await this.getCurrUserFollowedTrailData(data);\n          } else {\n            // For viewing preview trails from web-app or own trails\n            const data = {\n              trail_id: items.trail_id,\n              tourStep: items.tourStep,\n              userData: { ...items.authorData },\n              trail_web_user_tour: items.trail_web_user_tour,\n              noStepsToWatch: items.noStepsToWatch,\n              isPreview: items.isPreview,\n            };\n\n            if (items.isPreview) {\n              // Call get current user data common function\n              await this.getCurrUserDataCommon(data);\n            } else if (items.isPreviewSingleTrail) {\n              data.trail_data_id = items.trail_data_id;\n              await this.getSingleTrail(data);\n            } else {\n              // console.log(\"line 428\");\n              // Call get current user data common function\n              await this.getCurrUserDataCommon(items);\n            }\n          }\n        }\n      }\n    );\n\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"tourStatus\",\n        \"tourType\",\n        \"tourStep\",\n        \"currentTourType\",\n        \"loadingCount\",\n        \"userData\",\n      ],\n      async function (items) {\n        this.setState({ trail_web_user_tour: items.trail_web_user_tour });\n        // trailWebUserTour = items.trail_web_user_tour;\n        this.setState({ menuOpen: true });\n        // Store totalTrails number in localStorage\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALSTORAGE,\n          items.trail_web_user_tour ? this.state.trail_web_user_tour.length : 0\n        );\n\n        if (\n          (items.currentTourType === \"preview\" ||\n            items.currentTourType === \"\") &&\n          items.tourType === \"preview\" &&\n          items.tourStep !== \"\"\n        ) {\n          chrome.storage.local.set({ openButton: \"\", tourType: \"\" });\n        }\n\n        if (items.tourStep !== \"\" && items.currentTourType === \"preview\") {\n          if (items.trail_web_user_tour !== undefined) {\n            chrome.storage.local.set({\n              currentTourType:\n                items.trail_web_user_tour[items.tourStep - 1].type,\n            });\n          }\n        }\n\n        if (\n          (items.currentTourType === \"tooltip\" ||\n            items.currentTourType === \"video\") &&\n          items.tourType === \"preview\"\n        ) {\n          // this.props.downToggleButton(true);\n          // this.props.downToggleButton(true);\n        }\n\n        if (items.trail_web_user_tour !== undefined) {\n          this.setState({ trailList: items.trail_web_user_tour });\n        }\n\n        if (items.tourStatus !== undefined) {\n          this.setState({ tourStatus: items.tourStatus });\n        }\n      }.bind(this)\n    );\n\n    chrome.runtime.onMessage.addListener(this.onHandleSubscription);\n\n    // \t(msg) => {\n    //\n    // \tif(msg.subject === 'DOMObj') {\n    // \t\tchrome.storage.local.get([\"userData\"], async function (items) {\n    // \t\t\tsocket.emit('userId', items.userData._id)\n    // \t\t})\n    // \t\tsocket.on('followerList', data => {\n    //\n    // \t\t\tlet follower = data.map(result => {\n\n    // \t\t\t})\n    // \t\t});\n    // \t\tthis.onToggleSubscription(true);\n    // \t}\n    // });\n  }\n\n  async getCurrUserFollowedTrailData(items) {\n    try {\n      const trail_id = items.trail_id,\n        author_id = items.authorData._id,\n        loggedInUserId = get([\"userData\", \"_id\"], items);\n\n      let continueFlag = false,\n        step,\n        visited;\n\n      // Call get followed one trail function\n      const { data } = await getFollowedOneTrail(\n        trail_id,\n        author_id,\n        loggedInUserId\n      );\n\n      const handleSteps = (result) => {\n        if (get([\"response\", \"result\", \"steps\"], result)) {\n          return result.response.result.steps;\n        } else {\n          return result.response.result || [];\n        }\n      };\n\n      if (\n        data.response &&\n        data.response.statusCode !== 404 &&\n        handleSteps(data).length > 0\n      ) {\n        //checking if visited step is last then start from other non visited step\n        // let check =\n        //   get([\"steps\"], data.response.result, [])[\n        //     get([\"steps\"], data.response.result, []).length - 1\n        //   ].trail_data_id ===\n        //   Number(\n        //     get([\"visitedSteps\"], data.response.result, \"\").split(\",\")[\n        //       get([\"visitedSteps\"], data.response.result, \"\").split(\",\")\n        //         .length - 1\n        //     ]\n        //   );\n\n        let index = get([\"steps\"], data.response.result, []).findIndex(\n          (step) =>\n            !get([\"visitedSteps\"], data.response.result, \"\")\n              .split(\",\")\n              .map((i) => Number(i))\n              .includes(step.trail_data_id)\n        );\n\n        step = index + 1;\n\n        // if (!check) {\n        //   step = stepNumber;\n        // } else {\n        //   let index = get([\"steps\"], data.response.result, []).findIndex(\n        //     (step) =>\n        //       !get([\"visitedSteps\"], data.response.result, \"\")\n        //         .split(\",\")\n        //         .map((i) => i, Number)\n        //         .includes(step)\n        //   );\n\n        //   step = index + 1;\n        // }\n\n        // if (step > 1) {\n        //   continueFlag = true;\n        //   data.response.result.steps[index].flag = \"continue\";\n        // }\n\n        const visitedSteps = get([\"visitedSteps\"], data.response.result, \"\")\n          .split(\",\")\n          .map((item) => Number(item));\n\n        const continueButton =\n          get([\"visitedSteps\"], data.response.result, \"\").split(\"\").length >\n            0 &&\n          !(\n            get([\"steps\"], data.response.result, []).length ===\n            get([\"visitedSteps\"], data.response.result, \"\").split(\",\").length\n          );\n\n        allTrails = handleSteps(data).map((el, i) => {\n          let flag = el.flag === \"continue\" ? \"\" : el.flag;\n\n          if (continueButton && visitedSteps.length - 1 === i) {\n            flag = \"continue\";\n            continueFlag = true;\n          }\n\n          visitedSteps.includes(el.trail_data_id)\n            ? (visited = true)\n            : (visited = false);\n\n          return {\n            userId: author_id,\n            trail_data_id: el.trail_data_id,\n            url: el.url,\n            path: el.path,\n            selector: el.selector,\n            class: el.class,\n            title: el.title,\n            description: el.description,\n            web_url: el.web_url,\n            trail_id: el.trail_id,\n            type: el.type,\n            uniqueTarget: el.unique_target,\n            unique_target_one: el.unique_target_one,\n            mobile_media_type: el.mobile_media_type,\n            mobile_title: el.mobile_title,\n            mobile_description: el.mobile_description,\n            mediaType: el.media_type,\n            created: el.created,\n            sortId: el.trail_sortId ? el.trail_sortId : \"\",\n            flag,\n            visited,\n          };\n        });\n\n        trailWebUserTour = [...allTrails];\n        obj.trailList = [...allTrails];\n      } else {\n        trailWebUserTour = [];\n        allTrails = [];\n      }\n\n      console.log({\n        step,\n        tourStep: items.tourStep,\n        allTrails,\n        trail_id,\n        continueFlag,\n      });\n\n      this.setState({\n        trail_web_user_tour: trailWebUserTour,\n        followedTrailUserData: items.followedTrailUserData\n          ? items.followedTrailUserData\n          : null,\n      });\n\n      const tourStep =\n        items.tourStep && items.tourStep !== \"\" ? items.tourStep : 1;\n\n      chrome.storage.local.set({\n        trail_id,\n        tourStep: tourStep,\n        trail_web_user_tour: allTrails,\n        closeContinue: continueFlag,\n      });\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  }\n\n  async getCurrUserDataCommon(items) {\n    const user_id = items.userData._id;\n    let res,\n      continueFlag = false,\n      trail_id = items.trail_id;\n\n    try {\n      // Get user's trails from database\n      let screen = resizeScreen() ? \"mobile\" : \"web\";\n\n      res = await getUserOneTrail(trail_id, screen);\n\n      trailWebUserTour = items.trail_web_user_tour;\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n\n    // if (items.trail_web_user_tour && items.trail_web_user_tour.length > 0) {\n    // \titems.trail_web_user_tour.forEach(el => {\n    // \t\tif (!el.trail_id) {\n    // \t\t\tallTrails.push(el);\n    // \t\t}\n    // \t});\n    // }\n\n    const result = res.data;\n\n    const handleSteps = (result) => {\n      if (get([\"response\", \"result\", \"steps\"], result)) {\n        return result.response.result.steps;\n      } else {\n        return result.response.result || [];\n      }\n    };\n\n    if (\n      result.response &&\n      result.response.statusCode !== 404 &&\n      handleSteps(result).length > 0\n    ) {\n      allTrails = handleSteps(result).map((el) => {\n        if (el.flag === \"continue\") {\n          continueFlag = true;\n        }\n\n        return {\n          userId: user_id,\n          trail_data_id: el.trail_data_id,\n          url: el.url,\n          path: el.path,\n          selector: el.selector,\n          class: el.class,\n          title: el.title,\n          description: el.description,\n          web_url: el.web_url,\n          trail_id: el.trail_id,\n          type: el.type,\n          uniqueTarget: el.unique_target,\n          unique_target_one: el.unique_target_one,\n          mobile_media_type: el.mobile_media_type,\n          mobile_title: el.mobile_title,\n          mobile_description: el.mobile_description,\n          mediaType: el.media_type,\n          created: el.created,\n          sortId: el.trail_sortId ? el.trail_sortId : \"\",\n          flag: el.flag,\n        };\n      });\n    } else {\n      trailWebUserTour = [];\n      allTrails = [];\n    }\n\n    // if (allTrails.length > 0) {\n    // \tallTrails.sort((a, b) => {\n    // \t\tif (a.sortId !== '') {\n    // \t\t\treturn (+a.sortId) - (+b.sortId);\n    // \t\t} else {\n    // \t\t\treturn (+a.created) - (+b.created);\n    // \t\t}\n    // \t});\n    // }\n\n    trailWebUserTour = allTrails;\n    obj.trailList = allTrails;\n\n    this.setState({\n      trail_web_user_tour: trailWebUserTour,\n      followedTrailUserData: items.followedTrailUserData\n        ? items.followedTrailUserData\n        : null,\n    });\n    chrome.storage.local.set({\n      trail_web_user_tour: allTrails,\n      tourStep: items.tourStep ? items.tourStep : \"\",\n      trail_id,\n      closeContinue: continueFlag,\n    });\n  }\n\n  async getSingleTrail(data) {\n    let res;\n    try {\n      res = await getSingleTrailData(data.trail_id, data.trail_data_id);\n    } catch (err) {}\n    if (\n      res.data &&\n      res.data.response &&\n      res.data.response.statusCode === \"200\"\n    ) {\n      let payload = { ...res.data.response.result };\n\n      let singleTrail = {\n        userId: data.userData.user_id,\n        trail_data_id: payload.trail_data_id,\n        url: payload.url,\n        path: payload.path,\n        selector: payload.selector,\n        class: payload.class,\n        title: payload.title,\n        description: payload.description,\n        web_url: payload.web_url,\n        trail_id: payload.trail_id,\n        type: payload.type,\n        uniqueTarget: payload.unique_target,\n        unique_target_one: payload.unique_target_one,\n        mobile_media_type: payload.mobile_media_type,\n        mobile_title: payload.mobile_title,\n        mobile_description: payload.mobile_description,\n        mediaType: payload.media_type,\n        created: payload.created,\n        sortId: payload.trail_sortId ? payload.trail_sortId : \"\",\n        flag: payload.flag,\n      };\n\n      this.setState({ trail_web_user_tour: [singleTrail] });\n\n      chrome.storage.local.get(\n        [\"trail_id\", \"userData\", \"tourStep\", \"isPreviewSingleTrail\"],\n        (storage) => {\n          if (data.loggedInData) {\n            chrome.storage.local.set({\n              trail_web_user_tour: [payload],\n              tourStep: storage.tourStep ? storage.tourStep : \"\",\n              trail_id: data.trail_id,\n              old_trail_id: storage.trail_id,\n              old_user_data: { ...storage.userData },\n              isPreviewSingleTrail: false,\n              webUrl: \"\",\n              userData: { ...data.loggedInData },\n              authorData: { ...data.userData },\n            });\n          } else {\n            chrome.storage.local.set({\n              tourStep: data.tourStep ? data.tourStep : \"\",\n              trail_id: data.trail_id,\n            });\n          }\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    chrome.storage.local.set({ loadingCount: 0, showSetting: false });\n  }\n\n  onHandleSubscription = async (msObj) => {\n    if (msObj.message === \"urlChanged\") {\n      if (!this.state.menuOpen) {\n        this.setState({ menuOpen: true });\n      }\n    }\n\n    if (msObj.subject === \"updateTimeout\") {\n      // Auto logout function\n      autoLogoutFunction();\n    }\n\n    if (msObj.subject === \"DOMInfo\") {\n      chrome.storage.local.get(\n        [\n          \"userData\",\n          \"trail_id\",\n          \"tourStep\",\n          \"trail_web_user_tour\",\n          \"isPreview\",\n          \"authorData\",\n          \"isPreviewSingleTrail\",\n          \"trail_data_id\",\n          \"noStepsToWatch\",\n          \"followedTrailUserData\",\n        ],\n        async (items) => {\n          // For viewing followed trail data\n          if (items.followedTrailUserData) {\n            const data = {\n              ...items,\n              trail_id: items.trail_id,\n              authorData: { ...items.followedTrailUserData },\n              isPreview: items.isPreview,\n              noStepsToWatch: items.noStepsToWatch,\n            };\n\n            return await this.getCurrUserFollowedTrailData(data);\n          }\n\n          // For viewing preview trail data from web-app or own trails\n          const data = {\n            trail_id: items.trail_id,\n            tourStep: items.tourStep,\n            userData: { ...items.authorData },\n            trail_web_user_tour: items.trail_web_user_tour,\n            noStepsToWatch: items.noStepsToWatch,\n            isPreview: items.isPreview,\n          };\n\n          if (items.isPreview) {\n            // Call get current user data common function\n            await this.getCurrUserDataCommon(data);\n          } else if (items.isPreviewSingleTrail) {\n            data.trail_data_id = items.trail_data_id;\n            await this.getSingleTrail(data);\n          } else {\n            // console.log(\"line 821\");\n            // Call get current user data common function\n            await this.getCurrUserDataCommon(items);\n          }\n        }\n      );\n\n      this.setState({ menuOpen: true });\n    }\n\n    chrome.storage.local.get(\n      [\"closeContinue\"],\n      async function (items) {\n        this.setState({\n          closeContinue:\n            items.closeContinue === undefined ? false : items.closeContinue,\n        });\n      }.bind(this)\n    );\n\n    if (msObj.subject === \"CreateTrail\") {\n      this.onToggleCreateNewTrailModal(true);\n    }\n\n    if (msObj.subject === \"DOMObj\") {\n      let allUserData = await getAllUser();\n      chrome.storage.local.get([\"userData\"], async function (items) {\n        socket.emit(\"userId\", items.userData._id);\n      });\n\n      socket.on(\"followerList\", (data) => {\n        if (allUserData.status === 200) {\n          let follower = data.map((result) => {\n            let findFollower = allUserData.data.data.response.find(\n              (r) => r._id === result\n            );\n            return findFollower.email;\n          });\n          this.setState({ followerList: follower });\n        }\n      });\n\n      this.onToggleSubscription(true);\n    }\n  };\n\n  // Get all notification of user\n  userNotificaion() {\n    chrome.storage.local.get([\"userData\"], async (items) => {\n      // Get notification count from database\n      const data = {\n        // user_id: items.userData._id,\n        flag: \"unread\",\n      };\n\n      try {\n        const res = await getAllNotification(data);\n\n        if (res.data.response && res.data.response.statusCode === \"200\") {\n          // Set count of notification in chrome runtime\n          chrome.runtime.sendMessage(\"\", {\n            type: \"budgeText\",\n            badgeText: `${res.data.response.result.length}`,\n          });\n        }\n      } catch (err) {}\n    });\n  }\n\n  // Get new notification of client from server and send it to chrome notification\n  getNewNotification = () => {\n    chrome.runtime.sendMessage(\"\", {\n      type: \"notification\",\n      options: {\n        title: \"Just wanted to notify you\",\n        message: \"How great it is!\",\n        iconUrl:\n          \"https://ca.slack-edge.com/TC9UZTSLX-UC8TZ2210-f65b94665589-48\",\n        type: \"basic\",\n      },\n    });\n    // chrome.runtime.sendMessage('', {\n    // \ttype: 'notification',\n    // \toptions: {\n    // \t\ttitle: 'Trailit',\n    // \t\tmessage: 'You have got new notification!',\n    // \t\ticonUrl: 'https://ca.slack-edge.com/TC9UZTSLX-UC8TZ2210-f65b94665589-512',\n    // \t\ttype: 'basic'\n    // \t}\n    // });\n  };\n\n  // On media tour tour select\n  onMediaTourSelect = (tourType) => {\n    // Set confirmation modal state\n    this.setState({\n      confirmationModal: {\n        show: true,\n        tourType,\n      },\n    });\n  };\n\n  // On confirmation modal close\n  confirmationModalClose = () => {\n    // Set confirmation modal state\n    this.setState({\n      confirmationModal: {\n        show: false,\n        tourType: \"\",\n      },\n    });\n  };\n\n  // On select tour type click\n  onTourTypeSelect = (tourType, tourStep) => {\n    // Call close confirmation modal\n    this.confirmationModalClose();\n\n    setTimeout(() => {\n      if (tourStep === `${tourType} Modal`) {\n        this.openMenu(\"modal\", undefined, undefined, tourType);\n      } else {\n        this.openMenu(tourType);\n      }\n    }, 400);\n  };\n\n  openMenu = async (type, previewId, closeContinue, stepType) => {\n    let mainObj = {},\n      objStatus = true;\n\n    if (\n      document.URL.includes(\"https://twitter.com\") &&\n      (type === \"video\" || type === \"audio\")\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    } else if (\n      document.URL.includes(\n        `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trail_data_tour/`\n      ) &&\n      previewId !== \"\" &&\n      (type === \"video\" || type === \"audio\" || type === \"tooltip\")\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    } else if (\n      document.URL.includes(\"https://docs.google.com\") &&\n      type === \"tooltip\"\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    }\n\n    switch (type) {\n      case \"tooltip\":\n        mainObj.tourType = \"tooltip\";\n        // this.props.toggle();\n        this.props.mainToggle(true);\n        break;\n      case \"Make Edit\":\n        mainObj.tourType = \"Make Edit\";\n        this.props.mainToggle(true);\n        break;\n      case \"modal\":\n        mainObj.tourType = \"modal\";\n        mainObj.stepType = stepType;\n        chrome.runtime.sendMessage(\"\", {\n          type: \"chromeModal\",\n          status: true,\n        });\n        this.props.mainToggle(true);\n        break;\n      case \"video\":\n        mainObj.tourType = \"video\";\n        // this.props.this.props.mainToggle();\n        this.props.mainToggle(true);\n        break;\n      case \"preview\":\n        mainObj.tourType = \"preview\";\n        objStatus = false;\n        // let { trail_web_user_tour } = this.state;\n        chrome.storage.local.get(\n          [\n            \"trail_web_user_tour\",\n            \"userData\",\n            \"isPreview\",\n            \"continueTourStepId\",\n          ],\n          async function (items) {\n            let trail_web_user_tour = items.trail_web_user_tour;\n\n            if (trail_web_user_tour && trail_web_user_tour.length > 0) {\n              this.setState({ trail_web_user_tour: items.trail_web_user_tour });\n              let tour = {};\n\n              trail_web_user_tour.forEach((el, i) => {\n                if (el.flag === \"continue\" && !items.isPreview) {\n                  tour = {\n                    tourStep: i + 1,\n                    currentTourType: el.type,\n                    tourType: el.tourType,\n                    url: el.url,\n                  };\n                }\n                if (items.isPreview && items.continueTourStepId) {\n                  tour = {\n                    tourStep: items.continueTourStepId + 1,\n                    currentTourType:\n                      trail_web_user_tour[items.continueTourStepId].type,\n                    tourType:\n                      trail_web_user_tour[items.continueTourStepId].tourType,\n                    url: trail_web_user_tour[items.continueTourStepId].url,\n                  };\n                }\n              });\n\n              if (tour.url) {\n                if (closeContinue !== undefined) {\n                  let tourTData =\n                    trail_web_user_tour[\n                      trail_web_user_tour.length === tour.tourStep\n                        ? 0\n                        : tour.tourStep\n                    ];\n                  tour = {\n                    tourStep:\n                      trail_web_user_tour.length === tour.tourStep\n                        ? 1\n                        : tour.tourStep + 1,\n                    currentTourType: tourTData.type,\n                    tourType: \"preview\",\n                    url: tourTData.url,\n                  };\n                }\n              }\n\n              chrome.storage.local.set({\n                openButton: \"CreateTrail\",\n                tourStep: tour.tourStep ? tour.tourStep : 1,\n                currentTourType: tour.currentTourType\n                  ? tour.currentTourType\n                  : trail_web_user_tour[0].type,\n                tourType: tour.tourType ? tour.tourType : \"preview\",\n              });\n\n              // console.log(\"tour\", tour);\n\n              if (\n                tour.url &&\n                tour.url !== document.URL &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"true\" });\n                chrome.runtime.sendMessage(\"\", {\n                  type: \"openInTab\",\n                  url: tour.url,\n                });\n              } else if (\n                !tour.url &&\n                trail_web_user_tour[0].url !== document.URL &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"true\" });\n                chrome.runtime.sendMessage(\"\", {\n                  type: \"openInTab\",\n                  url: trail_web_user_tour[0].url,\n                });\n              } else if (\n                !tour.url &&\n                trail_web_user_tour[0].url === document.URL &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"false\" });\n              } else if (\n                tour.url &&\n                tour.url === document.URL &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"false\" });\n              }\n            } else {\n              if (trail_web_user_tour && trail_web_user_tour.length > 0) {\n                chrome.storage.local.set({\n                  openButton: \"CreateTrail\",\n                  tourStep: 1,\n                  currentTourType: \"preview\",\n                });\n              } else {\n                alert(\"There are no trails, Please create the trails\");\n              }\n            }\n            if (\n              !preventToggle &&\n              trail_web_user_tour &&\n              trail_web_user_tour.length > 0\n            ) {\n              this.props.onChangeTourType(mainObj.tourType);\n              this.props.mainToggle(true);\n            }\n          }.bind(this)\n        );\n\n        // this.setState({ trail_web_user_tour: trailWebUserTour });\n\n        break;\n      case \"\":\n        this.setState({\n          menuOpen: !this.state.menuOpen,\n        });\n        break;\n      case \"audio\":\n        mainObj.tourType = \"audio\";\n        // this.props.toggle();\n        this.props.mainToggle(true);\n        break;\n      default:\n        break;\n    }\n\n    if (mainObj.tourType && objStatus) {\n      if (mainObj.stepType && mainObj.stepType !== \"\") {\n        chrome.storage.local.set({\n          openButton: \"CreateTrail\",\n          currentTourType: \"preview\",\n          stepType: mainObj.stepType,\n          tourType: mainObj.tourType === undefined ? \"\" : mainObj.tourType,\n        });\n      } else {\n        chrome.storage.local.set({\n          openButton: \"CreateTrail\",\n          currentTourType: \"preview\",\n          tourType: mainObj.tourType === undefined ? \"\" : mainObj.tourType,\n        });\n      }\n    }\n\n    if (mainObj.tourType !== \"preview\") {\n      this.props.onChangeTourType(mainObj.tourType);\n    } else {\n    }\n  };\n\n  onToggleSubscription = (modalSubscription) => {\n    this.setState({ modalSubscription });\n  };\n\n  onToggleCreateNewTrailModal = (modalCreateNewTrailModal) => {\n    this.setState({ modalCreateNewTrailModal });\n  };\n\n  onContinueTour = (e) => {\n    this.openMenu(\"preview\", \"\", \"closeContinue\");\n  };\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { currentUserId } = this.state;\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"userData\",\n        \"previewUserId\",\n        \"notification\",\n        \"saveSort\",\n        \"tourStep\",\n        \"closeContinue\",\n      ],\n      async (items) => {\n        if (\n          items.trail_web_user_tour != undefined &&\n          items.trail_web_user_tour.length == 0\n        ) {\n          alert(\"Please create trail\");\n          return null;\n        }\n\n        let trail_web_user_tour = items.trail_web_user_tour;\n\n        const trailId = trail_web_user_tour[0].trail_id;\n        const URL = trail_web_user_tour[0].url;\n        let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n        const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currentUserId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\n        function copyStringToClipboard(str) {\n          // Create new element\n          var el = document.createElement(\"textarea\");\n\n          // Set value (string to be copied)\n          el.value = str;\n\n          // Set non-editable to avoid focus and move outside of view\n          el.setAttribute(\"readonly\", \"\");\n          el.style = { position: \"absolute\", left: \"-9999px\" };\n          document.body.appendChild(el);\n\n          // Select text inside element\n          el.select();\n\n          // Copy text to clipboard\n          document.execCommand(\"copy\");\n\n          // Remove temporary element\n          document.body.removeChild(el);\n        }\n\n        alert(\"Successfully copied\");\n        copyStringToClipboard(trailUrl);\n      }\n    );\n  };\n\n  hideSettingModal() {\n    // Set chrome storage\n    chrome.storage.local.set({ showSetting: false });\n\n    // Set show setting state\n    // this.setState({ showSetting: false });\n  }\n\n  disableTooltipTourButton = () => {\n    if (document.URL === \"https://imgur.com/\") return true;\n    if (document.URL.includes(\"https://www.reddit.com\")) return true;\n    if (document.URL.includes(\"https://twitter.com\")) return true;\n    if (document.URL.includes(\"https://docs.google.com\")) return true;\n\n    return false;\n  };\n\n  disableMediaTourButton = () => {\n    if (document.URL.includes(\"https://twitter.com\")) return true;\n\n    return false;\n  };\n\n  render() {\n    const {\n      menuOpen,\n      showSetting,\n      followerList,\n      closeContinue,\n      modalSubscription,\n      confirmationModal,\n      followedTrailUserData,\n      modalCreateNewTrailModal,\n    } = this.state;\n\n    // if (document.URL.includes(\"https://docs.google.com\")) {\n    //   const tooltipButton = document\n    //     .getElementById(\"extension-div\")\n    //     .shadowRoot.querySelector(\".create_tooltip_button\");\n\n    //   if (tooltipButton) {\n    //     tooltipButton.style.visibility = \"hidden\";\n    //   }\n    // }\n\n    // if (document.URL.includes(\"https://twitter.com\")) {\n    //   const videoButton = document\n    //     .getElementById(\"extension-div\")\n    //     .shadowRoot.querySelector(\".create_video_button\");\n\n    //   if (videoButton) {\n    //     videoButton.style.visibility = \"hidden\";\n    //   }\n\n    //   const audioButton = document\n    //     .getElementById(\"extension-div\")\n    //     .shadowRoot.querySelector(\".create_audio_button\");\n\n    //   if (audioButton) {\n    //     audioButton.style.visibility = \"hidden\";\n    //   }\n    // }\n\n    // Auto logout function\n    autoLogoutFunction();\n\n    return (\n      <>\n        <style>{main1Css}</style>\n        <style>{main2Css}</style>\n        <div id=\"my-extension-root\">\n          {showSetting && (\n            <TrailSetting\n              show={showSetting}\n              hideModal={this.hideSettingModal}\n            />\n          )}\n          {confirmationModal.show && (\n            <CreateTourConfirmationModal\n              data={confirmationModal}\n              // textType=\"text\"\n              onModalClose={this.confirmationModalClose}\n              onTourSelect={this.onTourTypeSelect}\n            />\n          )}\n\n          <div className={`my-extension ${closeContinue && closeContinue}`}>\n            {closeContinue && (\n              <button\n                className=\"trail_continue_btn\"\n                onClick={this.onContinueTour}\n              >\n                Continue...\n              </button>\n            )}\n            <MySubscription\n              open={modalSubscription}\n              toggle={this.onToggleSubscription}\n              followerList={followerList}\n            />\n            <CreateNewTrailModal\n              open={modalCreateNewTrailModal}\n              toggle={this.onToggleCreateNewTrailModal}\n              followerList={followerList}\n            />\n\n            {/* <div className={`wrap open ${menuOpen ? 'createMenu': ''}`}> */}\n            <div className={`wrap open ${menuOpen ? \"createMenu\" : \"\"}`}>\n              {/* Preview Button */}\n              {/* <button className=\"blob\" onClick={e => this.openMenu('preview')} data-title=\"Preview\">\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t<g id=\"Group_471\" data-name=\"Group 471\" transform=\"translate(11703 4613)\">\n\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 101\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(-11703 -4613)\" fill=\"#fff\" />\n\t\t\t\t\t\t\t\t\t\t<g id=\"visibility\" transform=\"translate(-11694 -4688.449)\">\n\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_278\" data-name=\"Group 278\" transform=\"translate(0 90.449)\">\n\t\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_277\" data-name=\"Group 277\" transform=\"translate(0)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_103\" data-name=\"Path 103\" d=\"M28.032,98.985c-2.049-5.106-7.668-8.536-13.983-8.536S2.116,93.879.066,98.985a.915.915,0,0,0,0,.682c2.051,5.105,7.671,8.535,13.983,8.535s11.931-3.43,13.983-8.535A.915.915,0,0,0,28.032,98.985Zm-13.983,7.387c-5.428,0-10.253-2.817-12.141-7.047,1.886-4.23,6.711-7.046,12.141-7.046S24.3,95.1,26.19,99.325C24.3,103.555,19.477,106.372,14.049,106.372Z\" transform=\"translate(0 -90.449)\" fill=\"#fb542b\" className=\"svg_btn\" stroke=\"#fff\" stroke-width=\"0.5\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_280\" data-name=\"Group 280\" transform=\"translate(8.66 93.987)\">\n\t\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_279\" data-name=\"Group 279\" transform=\"translate(0 0)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_104\" data-name=\"Path 104\" d=\"M156.762,152.32a5.338,5.338,0,1,0,5.338,5.338A5.344,5.344,0,0,0,156.762,152.32Zm0,8.846a3.508,3.508,0,1,1,3.508-3.508A3.512,3.512,0,0,1,156.762,161.166Z\" transform=\"translate(-151.424 -152.32)\" fill=\"#ffffff\" className=\"svg_btn\" stroke=\"#fff\" stroke-width=\"0.5\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button> */}\n              <button\n                className=\"blob\"\n                onClick={(e) => this.openMenu(\"preview\")}\n                data-title=\"Preview\"\n              >\n                <svg\n                  width=\"40\"\n                  height=\"30\"\n                  viewBox=\"0 0 40 30\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M20.4531 20.0751C23.3699 20.0751 25.7344 17.7433 25.7344 14.8668C25.7344 11.9903 23.3699 9.65845 20.4531 9.65845C17.5364 9.65845 15.1719 11.9903 15.1719 14.8668C15.1719 17.7433 17.5364 20.0751 20.4531 20.0751Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M39.8757 14.4097C38.3466 10.3186 35.6921 6.78068 32.2403 4.23311C28.7885 1.68554 24.6906 0.240019 20.4531 0.0751953C16.2157 0.240019 12.1178 1.68554 8.66595 4.23311C5.21411 6.78068 2.55963 10.3186 1.03057 14.4097C0.927309 14.7051 0.927309 15.0286 1.03057 15.3241C2.55963 19.4151 5.21411 22.953 8.66595 25.5006C12.1178 28.0482 16.2157 29.4937 20.4531 29.6585C24.6906 29.4937 28.7885 28.0482 32.2403 25.5006C35.6921 22.953 38.3466 19.4151 39.8757 15.3241C39.9789 15.0286 39.9789 14.7051 39.8757 14.4097ZM20.4531 23.6074C18.7818 23.6074 17.1481 23.0948 15.7584 22.1343C14.3688 21.1739 13.2857 19.8088 12.6461 18.2117C12.0065 16.6146 11.8392 14.8572 12.1653 13.1617C12.4913 11.4662 13.2961 9.90876 14.4779 8.68637C15.6597 7.46399 17.1654 6.63153 18.8046 6.29428C20.4438 5.95702 22.1428 6.13012 23.6869 6.79167C25.231 7.45322 26.5507 8.57351 27.4792 10.0109C28.4078 11.4483 28.9034 13.1381 28.9034 14.8669C28.8999 17.1839 28.0085 19.405 26.4246 21.0434C24.8406 22.6818 22.6932 23.6038 20.4531 23.6074Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>Preview</span> */}\n              </button>\n\n              {/* Tooltip */}\n              {/* <button class=\"blob\" onClick={e => this.openMenu('tooltip')} data-title=\"Create Tool Tip\">\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t<g id=\"Group_471\" data-name=\"Group 471\" transform=\"translate(11703 4613)\">\n\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 101\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(-11703 -4613)\" fill=\"#fff\" />\n\t\t\t\t\t\t\t\t\t\t<g id=\"drawing-tablet\" transform=\"translate(-11693.5 -4603)\">\n\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_105\" data-name=\"Path 105\" d=\"M293.045,393.1a.549.549,0,1,0-.549-.549A.549.549,0,0,0,293.045,393.1Zm0,0\" transform=\"translate(-275.972 -370.488)\" fill=\"#ffffff\" className=\"svg_btn2\" stroke=\"#ffffff\" stroke-width=\"0.25\" />\n\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_107\" data-name=\"Path 107\" d=\"M25.853,6.147H24.348l2.4-2.4a2.195,2.195,0,1,0-3.1-3.1l-5.5,5.5H3.244A2.747,2.747,0,0,0,.5,8.89V25.354A2.747,2.747,0,0,0,3.244,28.1h22.61A2.747,2.747,0,0,0,28.6,25.354V8.89a2.747,2.747,0,0,0-2.744-2.744ZM13.314,12.77a1.652,1.652,0,0,1,.4-.643l.022-.022,1.552,1.552-.022.022a1.655,1.655,0,0,1-.644.4l-1.959.653Zm-.379-1.42a2.754,2.754,0,0,0-.663,1.073l-.956,2.868-.709.662a.549.549,0,1,0,.748.8l.724-.675,2.887-.963a2.755,2.755,0,0,0,1.073-.663l3.917-3.918h4.249V23.708H7.085V10.537h6.664Zm3.126,1.53-1.552-1.552,8.357-8.357,1.552,1.552ZM24.419,1.419a1.1,1.1,0,0,1,1.552,1.552l-.776.776L23.643,2.2ZM27.5,25.354A1.648,1.648,0,0,1,25.853,27H3.244A1.648,1.648,0,0,1,1.6,25.354V8.89A1.648,1.648,0,0,1,3.244,7.244h13.8l-2.2,2.195H6.536a.549.549,0,0,0-.549.549V24.256a.549.549,0,0,0,.549.549h18.22a.549.549,0,0,0,.549-.549V9.988a.549.549,0,0,0-.549-.549h-3.7l2.2-2.195h2.6A1.648,1.648,0,0,1,27.5,8.89Zm0,0\" transform=\"translate(0 0)\" fill=\"#ffffff\" className=\"svg_btn2\" stroke=\"#ffffff\" stroke-width=\"0.25\" />\n\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_108\" data-name=\"Path 108\" d=\"M333.041,317.492h3.293a.549.549,0,0,0,.549-.549v-4.39a.549.549,0,1,0-1.1,0v3.841h-2.744a.549.549,0,0,0,0,1.1Zm0,0\" transform=\"translate(-313.773 -294.882)\" fill=\"#ffffff\" className=\"svg_btn2\" stroke=\"#ffffff\" stroke-width=\"0.25\" />\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button> */}\n              <button\n                className=\"blob create_tooltip_button\"\n                onClick={(e) => this.openMenu(\"tooltip\")}\n                data-title=\"Tooltip\"\n                disabled={\n                  this.disableTooltipTourButton() || followedTrailUserData\n                }\n              >\n                <svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M26 13.9998H22V9.99986C22 9.46943 21.7893 8.96073 21.4142 8.58567C21.0391 8.2106 20.5304 7.99989 20 7.99989C19.4696 7.99989 18.9609 8.2106 18.5858 8.58567C18.2107 8.96073 18 9.46943 18 9.99986V13.9998H14C13.4696 13.9998 12.9609 14.2105 12.5858 14.5856C12.2107 14.9607 12 15.4694 12 15.9998C12 16.5302 12.2107 17.0389 12.5858 17.414C12.9609 17.789 13.4696 17.9997 14 17.9997H18V21.9997C18 22.5301 18.2107 23.0388 18.5858 23.4139C18.9609 23.789 19.4696 23.9997 20 23.9997C20.5304 23.9997 21.0391 23.789 21.4142 23.4139C21.7893 23.0388 22 22.5301 22 21.9997V17.9997H26C26.5304 17.9997 27.0391 17.789 27.4142 17.414C27.7893 17.0389 28 16.5302 28 15.9998C28 15.4694 27.7893 14.9607 27.4142 14.5856C27.0391 14.2105 26.5304 13.9998 26 13.9998ZM34 0H6C4.4087 0 2.88258 0.632132 1.75736 1.75733C0.632141 2.88254 0 4.40864 0 5.99992V25.9996C0 27.5909 0.632141 29.117 1.75736 30.2422C2.88258 31.3674 4.4087 31.9996 6 31.9996H29.18L36.58 39.4194C36.7669 39.6048 36.9885 39.7515 37.2322 39.851C37.4759 39.9505 37.7368 40.001 38 39.9994C38.2624 40.0062 38.5226 39.9514 38.76 39.8394C39.1252 39.6894 39.4379 39.4346 39.6586 39.1072C39.8792 38.7797 39.998 38.3943 40 37.9995V5.99992C40 4.40864 39.3679 2.88254 38.2426 1.75733C37.1174 0.632132 35.5913 0 34 0ZM36 33.1795L31.42 28.5796C31.2331 28.3942 31.0115 28.2476 30.7678 28.1481C30.5241 28.0485 30.2632 27.9981 30 27.9996H6C5.46957 27.9996 4.96086 27.7889 4.58579 27.4138C4.21071 27.0388 4 26.5301 4 25.9996V5.99992C4 5.46949 4.21071 4.96079 4.58579 4.58572C4.96086 4.21066 5.46957 3.99994 6 3.99994H34C34.5304 3.99994 35.0391 4.21066 35.4142 4.58572C35.7893 4.96079 36 5.46949 36 5.99992V33.1795Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>ToolTip</span> */}\n              </button>\n\n              {/* Create Modal */}\n              {/* <button class=\"blob\" onClick={e => this.openMenu('modal')} data-title=\"Create Modal\">\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t<g id=\"Group_471\" data-name=\"Group 471\" transform=\"translate(11703 4613)\">\n\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 101\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(-11703 -4613)\" fill=\"#fff\"/>\n\t\t\t\t\t\t\t\t\t\t<g id=\"interface\" transform=\"translate(-11693 -4602)\">\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_1\" data-name=\"Path 1\" d=\"M0,6.186V25.2H27.657V1H0ZM24.2,2.729h1.729V4.457H24.2ZM1.729,6.186h24.2V23.471H1.729Z\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_2\" data-name=\"Path 2\" d=\"M3,6H6.457V7.729H3Z\" transform=\"translate(2.186 3.643)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_3\" data-name=\"Path 3\" d=\"M6,6H18.1V7.729H6Z\" transform=\"translate(4.371 3.643)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_4\" data-name=\"Path 4\" d=\"M3,8H6.457V9.729H3Z\" transform=\"translate(2.186 5.1)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_5\" data-name=\"Path 5\" d=\"M6,8H18.1V9.729H6Z\" transform=\"translate(4.371 5.1)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_6\" data-name=\"Path 6\" d=\"M3,10H6.457v1.729H3Z\" transform=\"translate(2.186 6.557)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path className=\"svg_btn\" id=\"Path_7\" data-name=\"Path 7\" d=\"M6,10H18.1v1.729H6Z\" transform=\"translate(4.371 6.557)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button> */}\n              {/* {!document.URL.includes(\"https://twitter.com\") && ( */}\n              <button\n                className=\"blob create_video_button\"\n                onClick={(e) => this.onMediaTourSelect(\"video\")}\n                data-title=\"Video\"\n                disabled={\n                  this.disableMediaTourButton() || followedTrailUserData\n                }\n              >\n                <svg\n                  width=\"41\"\n                  height=\"29\"\n                  viewBox=\"0 0 41 29\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M18.8779 6.55304H14.8779V12.553H8.87793V16.553H14.8779V22.553H18.8779V16.553H24.8779V12.553H18.8779V6.55304Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M32.8789 4.55298C32.8789 2.34698 31.0849 0.552979 28.8789 0.552979H4.87891C2.67291 0.552979 0.878906 2.34698 0.878906 4.55298V24.553C0.878906 26.759 2.67291 28.553 4.87891 28.553H28.8789C31.0849 28.553 32.8789 26.759 32.8789 24.553V17.887L40.8789 24.553V4.55298L32.8789 11.219V4.55298ZM28.8809 24.553H4.87891V4.55298H28.8789V14.553L28.8809 24.553Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>Video</span> */}\n              </button>\n              {/* )} */}\n\n              <button className=\"menu\" onClick={(e) => this.openMenu(\"\")}>\n                <img\n                  alt=\"tour_menu\"\n                  className=\"trail_plus trail_edit_v2\"\n                  src={require(`./images/trailit_X_button_new.png`)}\n                />\n              </button>\n              {/* {!document.URL.includes(\"https://twitter.com\") && ( */}\n              <React.Fragment>\n                {/* Create Video */}\n                {/* <button className=\"blob\" onClick={(e) => this.openMenu('video')} data-title=\"Create Video\">\n\t\t\t\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_472\" data-name=\"Group 472\" transform=\"translate(-1820 -597)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 70\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(1820 597)\" fill=\"#fff\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t<g id=\"video-camera-side-view-outlined-tool-symbol\" transform=\"translate(1832 502.041)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<g id=\"Group_281\" data-name=\"Group 281\" transform=\"translate(0 111.272)\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_109\" data-name=\"Path 109\" d=\"M15.317,126.681a2.156,2.156,0,0,0,2.2-2.2V113.473a2.156,2.156,0,0,0-2.2-2.2H2.2a2.156,2.156,0,0,0-2.2,2.2V124.48a2.156,2.156,0,0,0,2.2,2.2ZM1.1,124.459V113.493a1.092,1.092,0,0,1,1.113-1.12H15.431a1.092,1.092,0,0,1,1.113,1.12v10.966a1.093,1.093,0,0,1-1.113,1.122H2.213A1.093,1.093,0,0,1,1.1,124.459Z\" transform=\"translate(0 -111.272)\" fill=\"#ffffff\" className=\"svg_btn2\" stroke=\"#ffffff\" stroke-width=\"0.2\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<path id=\"Path_110\" data-name=\"Path 110\" d=\"M475.162,121.072v1.348l5.414,4.261V111.272l-5.414,4.3v1.379l4.313-3.236v10.592Z\" transform=\"translate(-456.362 -111.272)\" fill=\"#ffffff\" className=\"svg_btn2\" stroke=\"#ffffff\" stroke-width=\"0.2\" />\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t</button> */}\n                <button\n                  className=\"blob create_audio_button\"\n                  onClick={(e) => this.onMediaTourSelect(\"audio\")}\n                  data-title=\"Audio\"\n                  disabled={\n                    this.disableMediaTourButton() || followedTrailUserData\n                  }\n                >\n                  <svg\n                    className=\"audio_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g\n                      id=\"Group_471\"\n                      data-name=\"Group 471\"\n                      transform=\"translate(11717 4613)\"\n                    >\n                      <circle\n                        id=\"Ellipse_101\"\n                        data-name=\"Ellipse 101\"\n                        cx=\"24\"\n                        cy=\"24\"\n                        r=\"24\"\n                        transform=\"translate(-11717 -4613)\"\n                        fill=\"#fff\"\n                      />\n                      <g\n                        id=\"audio-interface-speaker-symbol\"\n                        transform=\"translate(-11707 -4671.857)\"\n                      >\n                        <g\n                          id=\"Group_282\"\n                          data-name=\"Group 282\"\n                          transform=\"translate(0 72.857)\"\n                        >\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_111\"\n                            data-name=\"Path 111\"\n                            d=\"M3.9,86.838l9.831,5.992V72.857L3.9,78.849H1.3A1.3,1.3,0,0,0,0,80.181v5.327A1.3,1.3,0,0,0,1.3,86.84H3.9ZM1.248,80.1H3.9l8.586-4.746v14.98L3.9,85.486H1.248Z\"\n                            transform=\"translate(0 -72.857)\"\n                            fill=\"#ffffff\"\n                            className=\"svg_btn\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_112\"\n                            data-name=\"Path 112\"\n                            d=\"M349.714,171.382v1.387a7.074,7.074,0,0,0,0-12.483v1.387s2.5,1.059,2.5,4.855S349.714,171.382,349.714,171.382Z\"\n                            transform=\"translate(-334.734 -156.541)\"\n                            fill=\"#ffffff\"\n                            className=\"svg_btn\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_113\"\n                            data-name=\"Path 113\"\n                            d=\"M524.571,117.829v1.648s3.745-1.8,3.745-8.738S524.571,102,524.571,102v1.62s2.5,1.378,2.5,7.118S524.571,117.829,524.571,117.829Z\"\n                            transform=\"translate(-502.101 -100.752)\"\n                            className=\"svg_btn\"\n                            fill=\"#ffffff\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_114\"\n                            data-name=\"Path 114\"\n                            d=\"M437.143,144.543v1.58s3.745-2.06,3.745-7.49-3.745-7.49-3.745-7.49v1.528s2.5,1.624,2.5,5.962S437.143,144.543,437.143,144.543Z\"\n                            transform=\"translate(-418.418 -128.647)\"\n                            className=\"svg_btn\"\n                            fill=\"#ffffff\"\n                          />\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  {/* <span>Create Audio</span> */}\n                </button>\n              </React.Fragment>\n              {/* )} */}\n              {/* {resizeScreen() && (\n                <button\n                  className=\"blob\"\n                  data-title=\"Make Edit\"\n                  onClick={(e) => this.openMenu(\"Make Edit\")}\n                  disabled={followedTrailUserData}\n                >\n                  <svg\n                    className=\"edit_trail_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g\n                      id=\"Group_471\"\n                      data-name=\"Group 471\"\n                      transform=\"translate(11697 4613)\"\n                    >\n                      <circle\n                        id=\"Ellipse_101\"\n                        data-name=\"Ellipse 101\"\n                        cx=\"24\"\n                        cy=\"24\"\n                        r=\"24\"\n                        transform=\"translate(-11697 -4613)\"\n                        fill=\"#fff\"\n                      />\n                      <g id=\"signs\" transform=\"translate(-11683 -4599)\">\n                        <path\n                          id=\"Path_1\"\n                          className=\"svg_btn2\"\n                          data-name=\"Path 1\"\n                          d=\"M10.143,20.286A10.143,10.143,0,1,1,20.286,10.143,10.154,10.154,0,0,1,10.143,20.286Zm0-19.018a8.875,8.875,0,1,0,8.875,8.875A8.885,8.885,0,0,0,10.143,1.268Zm0,0\"\n                          fill=\"#ffffff\"\n                        />\n                        <path\n                          id=\"Path_2\"\n                          className=\"svg_btn2\"\n                          data-name=\"Path 2\"\n                          d=\"M137.509,241.268h-8.875a.634.634,0,0,1,0-1.268h8.875a.634.634,0,1,1,0,1.268Zm0,0\"\n                          transform=\"translate(-122.929 -230.491)\"\n                          fill=\"#ffffff\"\n                        />\n                        <path\n                          id=\"Path_3\"\n                          className=\"svg_btn2\"\n                          data-name=\"Path 3\"\n                          d=\"M240.634,138.143a.634.634,0,0,1-.634-.634v-8.875a.634.634,0,1,1,1.268,0v8.875A.634.634,0,0,1,240.634,138.143Zm0,0\"\n                          transform=\"translate(-230.491 -122.929)\"\n                          fill=\"#ffffff\"\n                        />\n                      </g>\n                    </g>\n                  </svg>\n                </button>\n              )} */}\n\n              {/* Edit Trail */}\n              {/* <button className=\"blob\" onClick={e => this.openMenu('Make Edit')} data-title=\"Edit Trail\">\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t<g id=\"Group_471\" data-name=\"Group 471\" transform=\"translate(11697 4613)\">\n\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 101\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(-11697 -4613)\" fill=\"#fff\"/>\n\t\t\t\t\t\t\t\t\t\t<g id=\"signs\" transform=\"translate(-11683 -4599)\">\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_1\" className=\"svg_btn2\" data-name=\"Path 1\" d=\"M10.143,20.286A10.143,10.143,0,1,1,20.286,10.143,10.154,10.154,0,0,1,10.143,20.286Zm0-19.018a8.875,8.875,0,1,0,8.875,8.875A8.885,8.885,0,0,0,10.143,1.268Zm0,0\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_2\" className=\"svg_btn2\" data-name=\"Path 2\" d=\"M137.509,241.268h-8.875a.634.634,0,0,1,0-1.268h8.875a.634.634,0,1,1,0,1.268Zm0,0\" transform=\"translate(-122.929 -230.491)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_3\" className=\"svg_btn2\" data-name=\"Path 3\" d=\"M240.634,138.143a.634.634,0,0,1-.634-.634v-8.875a.634.634,0,1,1,1.268,0v8.875A.634.634,0,0,1,240.634,138.143Zm0,0\" transform=\"translate(-230.491 -122.929)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button> */}\n              <button\n                className=\"blob\"\n                data-title=\"Edit\"\n                onClick={(e) => this.openMenu(\"Make Edit\")}\n                disabled={followedTrailUserData}\n              >\n                <svg\n                  width=\"40\"\n                  height=\"29\"\n                  viewBox=\"0 0 40 29\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M0 0V4.12698H24.1631V0H0ZM0 8.25397V12.381H24.1631V8.25397H0ZM36.3252 8.52222C36.0433 8.52222 35.7614 8.64603 35.5399 8.87302L33.5263 10.9365L37.6542 15.1667L39.6678 13.1032C40.1107 12.6698 40.1107 11.9476 39.6678 11.5143L37.0904 8.87302C36.9923 8.76493 36.874 8.67817 36.7426 8.6179C36.6111 8.55763 36.4692 8.52509 36.3252 8.52222ZM32.3584 12.1333L20.1359 24.6381V28.8889H24.2839L36.4863 16.3635L32.3584 12.1333ZM0 16.5079V20.6349H16.1087V16.5079H0Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </button>\n\n              {/* Share Trail Button */}\n              {/* <button className=\"blob\" onClick={this.copyWebApplink} data-title=\"Share Trail\">\n\t\t\t\t\t\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\">\n\t\t\t\t\t\t\t\t\t<g id=\"Group_471\" data-name=\"Group 471\" transform=\"translate(11697 4613)\">\n\t\t\t\t\t\t\t\t\t\t<circle id=\"Ellipse_101\" data-name=\"Ellipse 101\" cx=\"24\" cy=\"24\" r=\"24\" transform=\"translate(-11697 -4613)\" fill=\"#fff\"/>\n\t\t\t\t\t\t\t\t\t\t<g id=\"signs\" transform=\"translate(-11683 -4599)\">\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_1\" className=\"svg_btn2\" data-name=\"Path 1\" d=\"M10.143,20.286A10.143,10.143,0,1,1,20.286,10.143,10.154,10.154,0,0,1,10.143,20.286Zm0-19.018a8.875,8.875,0,1,0,8.875,8.875A8.885,8.885,0,0,0,10.143,1.268Zm0,0\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_2\" className=\"svg_btn2\" data-name=\"Path 2\" d=\"M137.509,241.268h-8.875a.634.634,0,0,1,0-1.268h8.875a.634.634,0,1,1,0,1.268Zm0,0\" transform=\"translate(-122.929 -230.491)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t<path id=\"Path_3\" className=\"svg_btn2\" data-name=\"Path 3\" d=\"M240.634,138.143a.634.634,0,0,1-.634-.634v-8.875a.634.634,0,1,1,1.268,0v8.875A.634.634,0,0,1,240.634,138.143Zm0,0\" transform=\"translate(-230.491 -122.929)\" fill=\"#ffffff\"/>\n\t\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t\t</g>\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button> */}\n              <button\n                className=\"blob\"\n                onClick={this.copyWebApplink}\n                data-title=\"Share\"\n              >\n                <svg\n                  width=\"40\"\n                  height=\"36\"\n                  viewBox=\"0 0 40 36\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.75 0C1.7 0 0 1.70201 0 3.75443V31.2869C0 33.3393 1.7 35.0413 3.75 35.0413H26.25C28.3 35.0413 30 33.3393 30 31.2869V25.0295H25V30.0354H5V5.0059H15V0H3.75ZM30 0V5.0059C19.75 5.0059 11.5 12.715 10.3 22.6767C11.35 18.2715 15.25 15.0177 20 15.0177H30V20.0236L40 10.0118L30 0Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nlet popoverCount = 0;\n\n// function getBase64(img, callback) {\n// \tconst reader = new FileReader();\n// \treader.addEventListener('load', () => callback(reader.result));\n// \treader.readAsDataURL(img);\n// }\n\n// function beforeUpload(file) {\n// \tconst isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png';\n// \tif (!isJpgOrPng) {\n// \t\tmessage.error('You can only upload JPG/PNG file!');\n// \t}\n// \tconst isLt2M = file.size / 1024 / 1024 < 2;\n// \tif (!isLt2M) {\n// \t\tmessage.error('Image must smaller than 2MB!');\n// \t}\n// \treturn isJpgOrPng && isLt2M;\n// }\n\nlet defaultComp;\nlet flipped;\nlet tourUrl;\n\nclass DefaultButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      trailList: [],\n      tourStatus: \"continue\",\n      tourType: \"\",\n      tourStep: \"\",\n      stepType: \"\",\n      currentTourType: \"\",\n      web_url: \"\",\n      tourSide: \"next\",\n      message: \"\",\n      overlay: false,\n      loading: false,\n      fileLoading: false,\n      fileAddStatus: false,\n      title: \"\",\n      currUserId: null,\n      follow: false,\n      publishButtonShow: false,\n      publishLoader: false,\n      count: 0,\n      saveSort: false,\n      fileName: \"\",\n      createModalOpen: false,\n      hideNav: false,\n      rowData: {},\n      MobileTargetNotFound: {},\n      deleteModal: {\n        id: null,\n        title: null,\n        show: false,\n        trail: false,\n      },\n      sendTipModal: false,\n      isLoading: false,\n      sendLoader: false,\n      isSuccess: false,\n      onDone: false,\n      setError: null,\n      isDraggable: false,\n      draggable: true,\n      dragPosition: { x: 0, y: 0 },\n      dynamicPopupButton: true,\n      trailName: \"\",\n      openSidebar: false,\n      currentTrailsTab: \"My Trails\",\n      previewModalRef: false,\n      audioRef: false,\n      videoRef: false,\n      tooltipRef: false,\n    };\n\n    this.previewModalRef = React.createRef();\n\n    this.onDeleteButtonClick = this.onDeleteButtonClick.bind(this);\n  }\n\n  // Hide send tip modal\n  onSendTipModalClose = () => {\n    // Hide send tip modal\n    this.setState({\n      sendTipModal: false,\n      sendLoader: false,\n      isLoading: false,\n    });\n  };\n\n  // Show send tip modal\n  onSendTipModalOpen = () => {\n    // Show send tip modal\n    this.setState({ sendTipModal: true });\n  };\n\n  // Hide delete modal\n  onDeleteModalClose = () => {\n    // Delete modal state to false\n    this.setState({\n      deleteModal: {\n        id: null,\n        show: false,\n        title: null,\n        trail: false,\n      },\n    });\n  };\n\n  // Show delete modal\n  onDeleteModalOpen = (title, id, trail) => {\n    // Delete modal state to true\n    this.setState({\n      deleteModal: {\n        id,\n        title,\n        trail,\n        show: true,\n      },\n    });\n  };\n\n  // On delete button click\n  async onDeleteButtonClick(e) {\n    try {\n      // Set state\n      this.setState({ onDone: true });\n\n      const { id, trail } = this.state.deleteModal;\n\n      if (trail) {\n        // Delete trail by id\n        await deleteSingleTrail(id);\n\n        // Set state\n        this.setState({ onDone: false });\n      } else {\n        // Delete step by id\n        const { data } = await deleteTrail(id);\n\n        if (data.response && data.response.statusCode === \"200\") {\n          chrome.storage.local.get(\n            [\n              \"userData\",\n              \"trail_id\",\n              \"trail_web_user_tour\",\n              \"noStepsToWatch\",\n              \"isPreview\",\n            ],\n            async (items) => {\n              // Call common get user data function\n              await this.getCurrUserDataCommon(items);\n\n              // Set state\n              this.setState({ onDone: false });\n            }\n          );\n        }\n      }\n\n      // Call on delete modal close to hide modal\n      this.onDeleteModalClose();\n    } catch (err) {}\n  }\n\n  async getSingleTrail(data) {\n    let res;\n    try {\n      res = await getSingleTrailData(data.trail_id, data.trail_data_id);\n    } catch (err) {}\n\n    if (\n      res.data &&\n      res.data.response &&\n      res.data.response.statusCode === \"200\"\n    ) {\n      let response = { ...res.data.response.result };\n      let payload = {\n        userId: data.userData.user_id,\n        trail_data_id: response.trail_data_id,\n        url: response.url,\n        path: response.path,\n        selector: response.selector,\n        class: response.class,\n        title: response.title,\n        description: response.description,\n        web_url: response.web_url,\n        trail_id: response.trail_id,\n        type: response.type,\n        uniqueTarget: response.unique_target,\n        unique_target_one: response.unique_target_one,\n        mobile_media_type: response.mobile_media_type,\n        mobile_title: response.mobile_title,\n        mobile_description: response.mobile_description,\n        mediaType: response.media_type,\n        created: response.created,\n        sortId: response.trail_sortId ? response.trail_sortId : \"\",\n        flag: response.flag,\n      };\n\n      chrome.storage.local.get(\n        [\"trail_id\", \"userData\", \"tourStep\", \"isPreviewSingleTrail\"],\n        (storage) => {\n          if (data.loggedInData) {\n            chrome.storage.local.set({\n              trail_web_user_tour: [payload],\n              tourStep: storage.tourStep ? storage.tourStep : \"\",\n              trail_id: data.trail_id,\n              old_trail_id: storage.trail_id,\n              old_user_data: { ...storage.userData },\n              isPreviewSingleTrail: false,\n              trail_data_id: data.trail_data_id,\n              webUrl: \"\",\n              userData: { ...data.loggedInData },\n              authorData: { ...data.userData },\n            });\n          } else {\n            chrome.storage.local.set({\n              tourStep: data.tourStep ? data.tourStep : \"\",\n              trail_id: data.trail_id,\n            });\n          }\n        }\n      );\n\n      return payload;\n    }\n  }\n\n  async getCurrUserDataCommon(items) {\n    const user_id = items.userData._id;\n    let res,\n      continueFlag = false,\n      trail_id = items.trail_id;\n\n    try {\n      // Get user's trails from database\n      let screen = resizeScreen() ? \"mobile\" : \"web\";\n\n      res = await getUserOneTrail(trail_id, screen);\n\n      trailWebUserTour = items.trail_web_user_tour;\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n\n    // if (items.trail_web_user_tour && items.trail_web_user_tour.length > 0) {\n    // \titems.trail_web_user_tour.forEach(el => {\n    // \t\tif (!el.trail_id) {\n    // \t\t\tallTrails.push(el);\n    // \t\t}\n    // \t});\n    // }\n    const handleSteps = (result) => {\n      if (get([\"response\", \"result\", \"steps\"], result)) {\n        return result.response.result.steps;\n      } else {\n        return result.response.result || [];\n      }\n    };\n\n    const result = res.data;\n\n    if (\n      result.response &&\n      result.response.statusCode !== 404 &&\n      handleSteps(result).length > 0\n    ) {\n      allTrails = handleSteps(result).map((el) => {\n        if (el.flag === \"continue\") {\n          continueFlag = true;\n        }\n\n        return {\n          userId: user_id,\n          trail_data_id: el.trail_data_id,\n          url: el.url,\n          path: el.path,\n          selector: el.selector,\n          class: el.class,\n          title: el.title,\n          description: el.description,\n          web_url: el.web_url,\n          trail_id: el.trail_id,\n          type: el.type,\n          uniqueTarget: el.unique_target,\n          unique_target_one: el.unique_target_one,\n          mobile_media_type: el.mobile_media_type,\n          mobile_title: el.mobile_title,\n          mobile_description: el.mobile_description,\n          mediaType: el.media_type,\n          created: el.created,\n          sortId: el.trail_sortId ? el.trail_sortId : \"\",\n          flag: el.flag,\n        };\n      });\n    } else {\n      trailWebUserTour = [];\n      allTrails = [];\n    }\n\n    // if (allTrails.length > 0) {\n    // \tallTrails.sort((a, b) => {\n    // \t\tif (a.sortId !== '') {\n    // \t\t\treturn (+a.sortId) - (+b.sortId);\n    // \t\t} else {\n    // \t\t\treturn (+a.created) - (+b.created);\n    // \t\t}\n    // \t});\n    // }\n\n    trailWebUserTour = allTrails;\n    obj.trailList = allTrails;\n\n    this.setState({ trail_web_user_tour: trailWebUserTour });\n\n    chrome.storage.local.get(\n      [\"trail_id\", \"userData\", \"tourStep\", \"isPreview\"],\n      (storage) => {\n        if (items.loggedInData) {\n          chrome.storage.local.set({\n            trail_web_user_tour: allTrails,\n            tourStep: storage.tourStep ? storage.tourStep : \"\",\n            trail_id,\n            old_trail_id: storage.trail_id,\n            isPreview: false,\n            isGuest: false,\n            continueTourStepId: \"\",\n            old_user_data: { ...storage.userData },\n            webUrl: \"\",\n            userData: { ...items.loggedInData },\n            authorData: { ...items.userData },\n            noStepsToWatch: items.noStepsToWatch,\n          });\n        } else {\n          chrome.storage.local.set({\n            trail_web_user_tour: allTrails,\n            tourStep: items.tourStep ? items.tourStep : \"\",\n            trail_id,\n            closeContinue: continueFlag,\n          });\n        }\n      }\n    );\n  }\n\n  async handlePreviewFromWeb(msg) {\n    if (msg.message === \"preview_all\") {\n      // Call common get user data function\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"continue_preview\") {\n      // Call common get user data function\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          continueTourStepId: msg.payload.tourStep,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"preview_single\") {\n      await this.getSingleTrail({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_data_id: msg.payload.trail_data_id,\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\", \"userData\"], (items) => {\n        chrome.storage.local.set({\n          isPreviewSingleTrail: true,\n          isPreview: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"preview_without_login\") {\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n        noStepsToWatch: msg.payload.noStepsToWatch,\n        isPreview: true,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n          isGuest: true,\n        });\n      });\n    }\n  }\n\n  cleanupStorage = () => {\n    const { currentTourType, tourType, stepType } = this.state;\n\n    if (\n      currentTourType === \"preview\" &&\n      (tourType === \"audio\" ||\n        tourType === \"video\" ||\n        tourType === \"Make Edit\" ||\n        tourType === \"tooltip\")\n    ) {\n      chrome.storage.local.set({ tourType: \"\", currentTourType: \"\" });\n    }\n\n    if (\n      currentTourType === \"preview\" &&\n      tourType === \"modal\" &&\n      (stepType === \"audio\" || stepType === \"video\")\n    ) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        currentTourType: \"\",\n        stepType: \"\",\n      });\n    }\n\n    // Remove beforeunload event listener\n    window.removeEventListener(\"beforeunload\", this.cleanupStorage);\n  };\n\n  componentDidMount() {\n    // window.onload=function(){\n    // \tsetTimeout(function(){\n    // \t\tscrollTo(0,-1);\n    // \t},0);\n    // }\n\n    const { currentTourType, tourType } = this.state;\n\n    chrome.runtime.onMessage.addListener(this.handlePreviewFromWeb.bind(this));\n\n    window.addEventListener(\"resize\", this.resize);\n    this.resize();\n\n    this.setState({ overlay: true });\n    this.onChromeStorageChange();\n    this.onCreateTooltipHandle();\n\n    window.addEventListener(\n      \"load\",\n      () => {\n        this.setState({ overlay: false });\n        this.onCreateTooltipHandle();\n      },\n      false\n    );\n\n    chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\n    chrome.storage.onChanged.addListener(async (changes) => {\n      console.log(\"changes2\", changes);\n      if (\n        changes.trailDeleteModal &&\n        changes.trailDeleteModal.newValue &&\n        changes.trailDeleteModal.newValue.value === \"open\"\n      ) {\n        const title = changes.trailDeleteModal.newValue.title;\n        const id = changes.trailDeleteModal.newValue.id;\n        // Call delete modal open function\n        this.onDeleteModalOpen(title, id, true);\n      }\n\n      if (\n        changes.trailDeleteModal &&\n        changes.trailDeleteModal.newValue &&\n        changes.trailDeleteModal.newValue.value === \"close\"\n      ) {\n        // Call delete modal close function\n        this.onDeleteModalClose();\n      }\n\n      if (changes.currentTrailsTab && changes.currentTrailsTab.newValue) {\n        // Set current trail tab state\n        this.setState({ currentTrailsTab: changes.currentTrailsTab.newValue });\n      }\n\n      //\n      //\n      if (changes.tourType && changes.tourType.newValue === \"\") {\n        // Set side bar state\n        this.setState({ openSidebar: false, open: false });\n      }\n\n      if (\n        changes.tourType &&\n        (changes.tourType.newValue === \"video\" ||\n          changes.tourType.newValue === \"audio\" ||\n          changes.tourType.newValue === \"Make Edit\")\n      ) {\n        //\n        // Set side bar state\n        this.setState({ openSidebar: true, open: true });\n      }\n\n      if (changes.trail_name) {\n        // Set state\n        this.setState({ trailName: changes.trail_name.newValue });\n      }\n\n      if (changes.isDraggable) {\n        // Set is draggable state\n        this.setState({ isDraggable: changes.isDraggable.newValue });\n      }\n\n      if (\n        (changes.tourType && changes.tourType.newValue === \"preview\") ||\n        (changes.currentTourType &&\n          changes.currentTourType.newValue === \"preview\") ||\n        (changes.tourStep && changes.tourStep.newValue === 1)\n      ) {\n        this.onChromeStorageChange();\n        this.setState({ overlay: false });\n      } else if (\n        changes.trail_web_user_tour &&\n        changes.trail_web_user_tour.newValue &&\n        changes.trail_web_user_tour.oldValue &&\n        (changes.trail_web_user_tour.newValue.length > 0 ||\n          changes.trail_web_user_tour.newValue.length !==\n            changes.trail_web_user_tour.oldValue.length)\n      ) {\n        this.onChromeStorageChange();\n        this.setState({ overlay: false });\n      }\n      //  else if (\n      // \tchanges.trail_web_user_tour &&\n      // \tchanges.trail_web_user_tour.newValue.length !== changes.trail_web_user_tour.oldValue.length\n      // ) {\n      // \tthis.onChromeStorageChange();\n      // \tthis.setState({ overlay: false });\n      // }\n\n      if (changes.openButton && changes.openButton.newValue === \"CreateTrail\") {\n        this.onChromeStorageChange();\n      }\n\n      // if (\n      //   changes.currentTourType &&\n      //   changes.currentTourType.newValue === \"preview\" &&\n      //   changes.tourType &&\n      //   (changes.tourType.newValue === \"audio\" ||\n      //     changes.tourType.newValue === \"video\")\n      // ) {\n      //   if (changes.tourType && changes.tourType.newValue === \"tooltip\") {\n      //     this.setState({ open: false });\n      //   } else {\n      //     this.setState({ open: true });\n      //   }\n      // }\n\n      // // For my extenstion root div draggable functionality\n      // if (\n      //   changes.tourType &&\n      //   changes.tourType.newValue === \"Make Edit\" &&\n      //   changes.currentTourType &&\n      //   changes.currentTourType.newValue === \"preview\"\n      // ) {\n      //\n      //   // Set draggable state\n      //   this.setState({ isDraggable: false });\n      // } else {\n      //   chrome.storage.local.get([\"isDraggable\"], (items) => {\n      //     if (items.isDraggable !== undefined && items.isDraggable !== null) {\n      //\n      //       // Set draggable state\n      //       this.setState({ isDraggable: items.isDraggable });\n      //     }\n      //   });\n      // }\n\n      // if (\n      //   changes.tourType &&\n      //   (changes.tourType.newValue === \"Make Edit\" ||\n      //     changes.tourType.newValue === \"preview\") &&\n      //   changes.currentTourType &&\n      //   (changes.currentTourType.newValue === \"preview\" ||\n      //     changes.currentTourType.newValue === \"video\" ||\n      //     changes.currentTourType.newValue === \"audio\")\n      // ) {\n      //\n      //   // Set draggable state\n      //   this.setState({ isDraggable: false, dragPosition: { x: 0, y: 0 } });\n      // } else {\n      //   chrome.storage.local.get([\"isDraggable\"], (items) => {\n      //     if (items.isDraggable !== undefined && items.isDraggable !== null) {\n      //\n      //       // Set draggable state\n      //       this.setState({\n      //         isDraggable: items.isDraggable,\n      //         dragPosition: { x: 0, y: 0 },\n      //       });\n      //     }\n      //   });\n      // }\n\n      // if (changes.tourStep && changes.tourStep.newValue && changes.tourStep.newValue > 0) {\n      // \t// this.setLoadingState(false);\n\n      // \t// Add trailit logo when trail menu open\n      // \tthis.addTrailitLogo();\n\n      // } else {\n      // \tif (changes.currentTourType && changes.currentTourType.newValue === '') {\n      // \t\t// Remove trailit logo function\n      // \t\tthis.removeTrailitLogo();\n      // \t}\n      // }\n\n      if (\n        changes.tourType &&\n        (changes.tourType.newValue === \"tooltip\" ||\n          changes.tourType.newValue === \"audio\" ||\n          changes.tourType.newValue === \"video\" ||\n          changes.tourType.newValue === \"modal\") &&\n        changes.currentTourType &&\n        changes.currentTourType.newValue === \"preview\"\n      ) {\n        // this.setLoadingState(false);\n\n        // Add trailit logo when trail menu open\n        addTrailitLogo();\n      } else {\n        if (\n          changes.currentTourType &&\n          changes.currentTourType.newValue === \"\"\n        ) {\n          // Remove trailit logo function\n          removeTrailitLogo();\n        }\n      }\n\n      //\n\n      // if (\n      //   changes.tourType &&\n      //   (changes.tourType.newValue === \"audio\" ||\n      //     changes.tourType.newValue === \"video\" ||\n      //     changes.tourType.newValue === \"Make Edit\")\n      // ) {\n      //   const sidepopup = document\n      //     .getElementById(\"extension-div\")\n      //     .shadowRoot.querySelector(\".sidepopup\");\n      //\n      //   if (sidepopup) {\n      //     // Add white background\n      //     sidepopup.style.background = \"#ffffff\";\n      //   }\n      // } else {\n      //   const sidepopup = document\n      //     .getElementById(\"extension-div\")\n      //     .shadowRoot.querySelector(\".sidepopup\");\n      //   if (sidepopup) {\n      //     // Add white background\n      //     sidepopup.style.background = \"transparent\";\n      //   }\n      // }\n    });\n\n    chrome.storage.local.get(\n      [\"isPreview\", \"isPreviewSingleTrail\", \"isDraggable\"],\n      (items) => {\n        if (items.isPreview || items.isPreviewSingleTrail) {\n          this.setState({ dynamicPopupButton: false });\n        }\n\n        if (items.isDraggable !== undefined && items.isDraggable !== null) {\n          // Set draggable state\n          this.setState({\n            isDraggable: items.isDraggable,\n          });\n        }\n      }\n    );\n\n    // Cleanup function\n    window.addEventListener(\"beforeunload\", this.cleanupStorage);\n  }\n\n  handleMessage(msg) {\n    // Handle received messages\n    // if (msg.target === 'app') {\n    //  if (msg.type === 'setMessage') {\n    if (msg.message === \"chrome_modal\") {\n      this.onToggleCreateModal(true);\n    }\n    this.setState({ message: msg.body });\n    //  }\n    // }\n  }\n\n  componentWillUnmount() {\n    // Remove listener when this component unmounts\n    window.removeEventListener(\"resize\", this.resize);\n    chrome.runtime.onMessage.removeListener(this.handleMessage);\n  }\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { trailList, currUserId } = this.state;\n\n    if (trailList.length == 0) {\n      alert(\"Please create trail\");\n      return null;\n    }\n\n    const trailId = trailList[trailList.length - 1].trail_id;\n    const URL = trailList[0].url;\n    let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n    const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currUserId}&trailId=${trailId}&trailPreview=true&tourStep=1`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  followTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    followTrails(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"201\") {\n          throw new Error(\"Error while following trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({\n          followData: { previewUserId, follow: true },\n        });\n        this.setState({ follow: true });\n      })\n      .catch((err) => {});\n  };\n\n  onCreateTooltipHandle = () => {\n    // to handle border add on mousover event\n    // document.querySelector('.a4bIc .gLFyf.gsfi').style.background = 'green';\n    document.querySelector(\"body\").addEventListener(\"mouseover\", (e) => {\n      chrome.storage.local.get(\n        [\n          \"tourStatus\",\n          \"tourType\",\n          \"tourStep\",\n          \"currentTourType\",\n          \"closeContinue\",\n        ],\n        function (items) {\n          //\n          if (\n            items.tourType !== undefined &&\n            this.state.tourType !== items.tourType\n          ) {\n            if (items.tourType === \"preview\") {\n              if (this.state.trailList.length > 0) {\n                let tourStape = items.tourStep === \"\" ? 1 : items.tourStep;\n                this.setState({\n                  tourStep: tourStape,\n                  tourType: items.tourType,\n                  currentTourType: this.state.trailList[tourStape - 1].type,\n                });\n              } else {\n                this.setState({ tourType: items.tourType });\n              }\n            }\n            //  else {\n            //   if (items.tourType === \"tooltip\") {\n            //     this.setState({\n            //       tourType: items.tourType,\n            //       open: false,\n            //       openSidebar: false,\n            //     });\n            //   } else if (items.tourType === \"Make Edit\") {\n            //\n            //     this.setState({\n            //       tourType: items.tourType,\n            //       // open: true,\n            //       // openSidebar: true,\n            //     });\n            //   } else {\n            //     this.setState({ tourType: items.tourType });\n            //   }\n            // }\n          }\n        }.bind(this)\n      );\n\n      const trailOverlay = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".trail_overlay\");\n      if (!trailOverlay) {\n        if (\n          this.state.tourStatus === \"continue\" &&\n          (this.state.tourType === \"tooltip\" ||\n            (this.state.tourType === \"Make Edit\" &&\n              !_.isEmpty(this.state.rowData)))\n        ) {\n          // let parentElement = queryParentElement(e.target, '.sidepanal');\n          let parentElement = queryParentElement(e.target, \"#extension-div\");\n          let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n          let getClass =\n            parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n          let getClass1 =\n            parentElement1 == null ? \"\" : parentElement1.getAttribute(\"class\");\n\n          if (root1 === \"block\" && getClass === \"\" && getClass1 === \"\") {\n            e.target.classList.add(\"trail_select_bx\");\n          }\n        }\n      }\n    });\n\n    // to handle on click event to add tooltip\n    document.querySelector(\"body\").addEventListener(\n      \"click\",\n      (e) => {\n        e.target.classList.remove(\"trail_select_bx\");\n        let uniqueTarget = $.trim(unique(e.target));\n\n        if (\n          this.state.tourStatus === \"continue\" &&\n          (this.state.tourType === \"tooltip\" ||\n            this.state.tourType === \"Make Edit\")\n        ) {\n          if (\n            this.state.tourType === \"tooltip\" ||\n            (this.state.tourType === \"Make Edit\" &&\n              !_.isEmpty(this.state.rowData))\n          ) {\n            // let parentElement = queryParentElement(e.target, '.sidepanal');\n            let parentElement = queryParentElement(e.target, \"#extension-div\");\n            let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n            let getClass =\n              parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n            let getClass1 =\n              parentElement1 == null\n                ? \"\"\n                : parentElement1.getAttribute(\"class\");\n            let getClass2;\n\n            const trailOverlay = document\n              .getElementById(\"extension-div\")\n              .shadowRoot.querySelector(\".trail_overlay\");\n            if (trailOverlay) {\n              getClass2 = trailOverlay.getAttribute(\"class\");\n            }\n            // let root1 = ReactDOM.findDOMNode(this).parentNode.style.display;\n\n            if (\n              root1 === \"block\" &&\n              getClass === \"\" &&\n              getClass1 === \"\" &&\n              getClass2 === undefined\n            ) {\n              e.preventDefault();\n              e.stopPropagation();\n              e.target.classList.add(\"trail_web_user\");\n              e.target.classList.add(\"trail_tour_tooltip\");\n              let original = document.querySelector(uniqueTarget);\n              let bounding = original.getBoundingClientRect();\n              let offset = $(uniqueTarget).offset();\n              let leftPosition = offset.left;\n              let topPosition = offset.top;\n              var docHeight = document.documentElement.scrollHeight;\n              $(\".trail_tour_tooltip\").prepend(\n                \"<span class='trail_user_tooltip trail_tour_ToolTipExtend'></span>\"\n              );\n              let node = document.querySelector(\".trail_user_tooltip\");\n\n              let elementIndex = Array.from(\n                e.target.parentElement.children\n              ).indexOf(e.target);\n\n              // Call add overlay function\n              addOverlay();\n\n              // $('body').append(\"<div class='trail_overlay'></div>\");\n              // let bodyElement = $(unique(getScrollParent(document.querySelector(uniqueTarget)))).scrollHeight;\n\n              // Call set overlay html function\n              setOverlayHtml(\n                window,\n                docHeight,\n                topPosition,\n                bounding,\n                leftPosition\n              );\n\n              const updateOverlay = () => {\n                if (\n                  root1 === \"block\" &&\n                  getClass === \"\" &&\n                  getClass1 === \"\" &&\n                  getClass2 === undefined\n                ) {\n                  let docHeight = document.documentElement.scrollHeight;\n                  let bounding = original.getBoundingClientRect();\n                  let offset = $(uniqueTarget).offset();\n                  let leftPosition = offset.left;\n                  let topPosition = offset.top;\n\n                  // Call add overlay function\n                  addOverlay();\n\n                  // Call set overlay html function\n                  setOverlayHtml(\n                    window,\n                    docHeight,\n                    topPosition,\n                    bounding,\n                    leftPosition\n                  );\n                }\n              };\n\n              window.addEventListener(\"resize\", () => {\n                // Update overlay\n                updateOverlay();\n              });\n\n              // document.onchange = () => {\n              //\n              //   // Update overlay\n              //   updateOverlay();\n              // };\n\n              // $(\".trail_overlay\").append(`\n              // \t<svg height=\"100%\" width=\"100%\">\n              // \t\t<polygon points=\"0,0 ${window.innerWidth},0 ${window.innerWidth},${docHeight} 0,${docHeight} 0,${topPosition + bounding.height + 10} ${leftPosition + bounding.width + 10},${topPosition + bounding.height + 10} ${leftPosition + bounding.width + 10},${topPosition - 10} ${leftPosition - 10},${topPosition - 10} ${leftPosition - 10},${topPosition + bounding.height + 10} 0,${topPosition + bounding.height + 10}\" style=\"fill:rgba(0,0,0,0.8);\"/>\n              // \t\tSorry, your browser does not support inline SVG.\n              // \t</svg>`\n              // );\n\n              // document.querySelector(\"body\").classList.add('trail_body');\n              // $(\".trail_overlay\")\n              // \t.height(docHeight)\n              // \t.css({\n              // \t\t'position': 'absolute',\n              // \t\t'top': 0,\n              // \t\t'left': 0,\n              // \t\t'width': '100%',\n              // \t\t'z-index': 99999999\n              // \t});\n\n              ReactDOM.render(\n                <Tooltip\n                  uniqueTarget={uniqueTarget}\n                  target={e.target}\n                  elementIndex={elementIndex}\n                  path={e.path}\n                  type={this.state.tourType}\n                  rowData={this.state.rowData}\n                  count={popoverCount}\n                  onSave={\n                    this.state.tourType === \"Make Edit\"\n                      ? this.onUpdateTrail\n                      : this.onSaveTrail\n                  }\n                  onCancel={this.onCancelTooltip}\n                  onHandleChange={this.handleChange}\n                />,\n                node\n              );\n              popoverCount++;\n            }\n          }\n        }\n      },\n      true\n    );\n\n    // to handle border remove on mousout event\n    document.querySelector(\"body\").addEventListener(\"mouseout\", (e) => {\n      e.preventDefault();\n      if (\n        this.state.tourStatus === \"continue\" &&\n        (this.state.tourType === \"tooltip\" ||\n          this.state.tourType === \"Make Edit\")\n      ) {\n        // let parentElement = queryParentElement(e.target, '.sidepanal');\n        let parentElement = queryParentElement(e.target, \"#extension-div\");\n        let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n        let getClass =\n          parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n        let getClass1 =\n          parentElement1 == null ? \"\" : parentElement1.getAttribute(\"class\");\n        // let root1 = ReactDOM.findDOMNode(this).parentNode.style.display;\n        if (root1 === \"block\" && getClass === \"\" && getClass1 === \"\") {\n          e.target.classList.remove(\"trail_select_bx\");\n        }\n      }\n    });\n  };\n\n  resize = () => {\n    this.setState({ hideNav: window.innerWidth <= 760 });\n  };\n\n  onNotFoundTarget = (data) => {\n    this.setState({ MobileTargetNotFound: data });\n    chrome.storage.local.set({ MobileTargetNotFound: data });\n  };\n\n  onChromeStorageChange = () => {\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"tourStatus\",\n        \"tourType\",\n        \"stepType\",\n        \"tourStep\",\n        \"currentTourType\",\n        \"userData\",\n        \"previewUserId\",\n        \"followData\",\n        \"saveSort\",\n        \"loading\",\n        \"MobileTargetNotFound\",\n        \"isDraggable\",\n        \"trail_name\",\n        \"currentTrailsTab\",\n      ],\n      async function (items) {\n        if (items.currentTrailsTab) {\n          obj.currentTrailsTab = items.currentTrailsTab;\n        }\n\n        if (items.trail_name) {\n          obj.trail_name = items.trail_name;\n        }\n\n        if (items.followData) {\n          obj.followingData = items.followData;\n        }\n\n        if (items.isDraggable !== undefined && items.isDraggable !== null) {\n          obj.isDraggable = items.isDraggable;\n        }\n\n        if (items.previewUserId && items.previewUserId !== \"\") {\n          obj.previewUserId = items.previewUserId;\n        } else {\n          obj.previewUserId = undefined;\n        }\n\n        if (items.trail_web_user_tour) {\n          obj.trailList = items.trail_web_user_tour;\n        }\n\n        if (items.tourStatus !== undefined) {\n          obj.tourStatus = items.tourStatus;\n        }\n\n        if (items.tourType !== undefined) {\n          obj.tourType = items.tourType;\n          // if(items.tourType === 'modal') {\n          // \tthis.onToggleCreateModal(true);\n\n          // }\n        }\n\n        if (items.currentTourType !== undefined) {\n          obj.currentTourType = items.currentTourType;\n          // if (obj.currentTourType == 'tooltip' || obj.currentTourType == 'video' || obj.currentTourType == 'audio') {\n        }\n\n        if (\n          items.currentTourType === \"tooltip\" ||\n          items.tourType === \"tooltip\"\n        ) {\n          this.setState({ open: false, openSidebar: false });\n        }\n\n        //\n\n        if (\n          items.currentTourType === \"Make Edit\" ||\n          items.tourType === \"Make Edit\" ||\n          items.tourType === \"video\" ||\n          items.tourType === \"audio\"\n        ) {\n          //\n          // this.setState({ open: true, openSidebar: true });\n        }\n\n        if (\n          items.MobileTargetNotFound != undefined &&\n          !_.isEmpty(items.MobileTargetNotFound)\n        ) {\n          this.setState({ MobileTargetNotFound: items.MobileTargetNotFound });\n        } else {\n          this.setState({ MobileTargetNotFound: {} });\n        }\n\n        if (items.tourStep !== undefined) {\n          obj.tourStep = items.tourStep;\n        }\n\n        if (items.stepType !== undefined) {\n          obj.stepType = items.stepType;\n        }\n\n        if (items.userData && items.userData._id !== undefined) {\n          obj.currUserId = items.userData._id;\n        }\n\n        if (\n          (obj.currentTourType === \"video\" ||\n            obj.currentTourType === \"audio\") &&\n          obj.tourType === \"preview\"\n        ) {\n          let myExtensionDefaultroot = $(\"#my-extension-defaultroot\").css(\n            \"display\"\n          );\n          let myExtensionRoot = $(\"#my-extension-root\").css(\"display\");\n\n          if (myExtensionRoot === \"none\" && myExtensionDefaultroot === \"none\") {\n            if (obj.trailList[obj.tourStep - 1].url === document.URL) {\n              $(\"#my-extension-defaultroot\").css(\"display\", \"block\");\n            }\n          }\n        }\n\n        if (items.loading !== undefined && items.loading === \"false\") {\n          obj.loading = false;\n        }\n\n        if (items.loading !== undefined && items.loading === \"true\") {\n          obj.loading = true;\n        }\n\n        this.setState({\n          trailList: obj.trailList ? obj.trailList : [],\n          tourStatus: obj.tourStatus ? obj.tourStatus : \"continue\",\n          tourType: obj.tourType ? obj.tourType : \"\",\n          currentTourType: obj.currentTourType ? obj.currentTourType : \"\",\n          tourStep: obj.tourStep ? obj.tourStep : \"\",\n          stepType: obj.stepType ? obj.stepType : \"\",\n          currUserId: obj.currUserId ? obj.currUserId : null,\n          follow: obj.followingData ? obj.followingData.follow : false,\n          count: this.state.count++,\n          saveSort: items.saveSort ? items.saveSort : false,\n          loading: obj.loading ? obj.loading : false,\n          isDraggable: obj.isDraggable ? obj.isDraggable : false,\n          trailName: obj.trail_name ? obj.trail_name : \"\",\n          currentTrailsTab: obj.currentTrailsTab\n            ? obj.currentTrailsTab\n            : \"My Trails\",\n          // publishButtonShow: localStorageCount && +localStorageCount !== trailListCount\n        });\n\n        // this.setState({...this.state, obj}, () => {\n        //\n        // });\n      }.bind(this)\n    );\n  };\n\n  /**\n   * on cancel tooltip data\n   */\n  onCancelTooltip = (target, count) => {\n    // Call init button position function\n    initButtonPosition();\n\n    $(\".trail_tour_tooltip\").parents().css(\"z-index\", \"\");\n    target.classList.remove(\"trail_web_user\");\n    target.classList.remove(`trail_tour_tooltip`);\n    // trail_user_tooltip1\n    // trail_tooltip\n    // $('.trail_tooltip').remove();\n\n    // Call remove overlay function\n    removeOverlay();\n\n    // $('.trail_overlay').remove();\n    $(`.trail_user_tooltip`).remove();\n    $(`.trail_tour_ToolTipExtend`).remove();\n\n    chrome.storage.local.set({\n      tourType: \"\",\n      currentTourType: \"\",\n      tourStep: \"\",\n    });\n    this.setState({\n      web_url: \"\",\n      tourType: \"\",\n      currentTourType: \"\",\n      tourStep: \"\",\n      overlay: false,\n      rowData: {},\n      draggable: false,\n      open: false,\n    });\n    this.props.mainToggle();\n    this.props.onChangeTourType(\"\");\n  };\n\n  /**\n   * on click to Update tour\n   */\n  onUpdateTrail = async (data) => {\n    // Call init button position function\n    initButtonPosition();\n\n    let res = await UpdateTrailData(data);\n    if (res.status === 200) {\n      let resultData = res.data.response[0];\n      resultData.uniqueTarget = resultData.unique_target;\n      resultData.mediaType = resultData.media_type;\n      let rowInd = this.state.trailList.findIndex(\n        (r) => r.trail_data_id == resultData.trail_data_id\n      );\n      this.state.trailList[rowInd] = resultData;\n      let rows = this.state.trailList;\n      chrome.storage.local.set({ trail_web_user_tour: rows });\n      this.setState({ trailList: rows, draggable: false });\n    }\n\n    // chrome.storage.local.set({ trail_web_user_tour: newDataArray });\n    // this.setState({ trailList: newDataArray });\n    this.onCancelTooltip();\n    // this.setState({ trailList: trailData, web_url: '', fileAddStatus: false, fileName: '' });\n  };\n\n  /**\n   * on click to save tour in local system\n   */\n  onSaveTrail = async (data) => {\n    let trailData = [];\n    let obj = {};\n    let responsive = \"web\";\n    chrome.storage.local.get(\n      [\"trail_web_user_tour\", \"userData\", \"trail_id\"],\n      function (items) {\n        const trail_id = items.trail_id;\n        if (items.trail_web_user_tour !== undefined) {\n          trailData = items.trail_web_user_tour;\n        }\n\n        let timeStamp = new Date().getTime();\n\n        // This if check work on tooltip audio video upload\n        if (data.type === \"tooltip\" && data.mediaType !== \"text\") {\n          obj = {\n            trail_id,\n            userId: items.userData._id,\n            url: data.url,\n            path: data.path,\n            selector: data.selector,\n            class: data.class,\n            title: data.title,\n            web_url: data.web_url,\n            type: data.type,\n            responsive,\n            uniqueTarget: data.uniqueTarget,\n            mediaType: data.mediaType,\n            created: timeStamp,\n            trailIndex: items.trail_web_user_tour.length + 1,\n            flag: \"\",\n          };\n\n          trailData.push(obj);\n        } else if (\n          this.state.tourType === \"video\" ||\n          this.state.tourType === \"audio\"\n        ) {\n          obj = {\n            trail_id,\n            userId: items.userData._id,\n            url: document.URL,\n            path: \"\",\n            selector: \"\",\n            class: \"\",\n            responsive,\n            title: this.state.title,\n            web_url: this.state.web_url,\n            type: this.state.tourType,\n            mediaType: this.state.tourType,\n            created: timeStamp,\n            trailIndex: items.trail_web_user_tour.length + 1,\n            flag: \"\",\n          };\n\n          trailData.push(obj);\n        } else if (data.type === \"modal\" && data.mediaType === \"modal\") {\n          obj = {\n            trail_id,\n            userId: items.userData._id,\n            url: data.url,\n            path: \"\",\n            selector: \"\",\n            class: \"\",\n            responsive,\n            title: data.title,\n            description: data.description,\n            web_url: \"\",\n            type: data.type,\n            uniqueTarget: \"\",\n            mediaType: data.mediaType,\n            created: timeStamp,\n            trailIndex: items.trail_web_user_tour.length + 1,\n            flag: \"\",\n          };\n\n          trailData.push(obj);\n        } else {\n          obj = {\n            ...data,\n            trail_id,\n            responsive,\n            userId: items.userData._id,\n            created: timeStamp,\n            // web_url: '',\n            trailIndex: items.trail_web_user_tour.length + 1,\n            flag: \"\",\n          };\n\n          trailData.push(obj);\n        }\n\n        this.setState({\n          trailList: trailData,\n          web_url: \"\",\n          fileAddStatus: false,\n          fileName: \"\",\n          open: false,\n          draggable: false,\n        });\n        chrome.storage.local.set({\n          trail_web_user_tour: trailData,\n          tourType: \"\",\n        });\n\n        // Call init button position function\n        initButtonPosition();\n\n        // Save trail into database\n        this.publishTrails(obj);\n      }.bind(this)\n    );\n\n    // this.props.this.props,mainToggle();\n    this.props.onChangeTourType(\"\");\n    this.props.mainToggle();\n  };\n\n  /**\n   * on click to submit tour into the database\n   */\n  onClickToSubmitTour = () => {\n    chrome.storage.local.set({ tourStatus: \"done\" });\n    this.setState({ tourStatus: \"done\" });\n  };\n\n  /**\n   * on clear tour\n   */\n  onClearToggle = async () => {\n    let userId;\n    let isPreview, isPreviewSingleTrail;\n    let followedTrailUserData;\n\n    // new Promise((resolve, reject) => {\n    //   chrome.storage.local.get(\n    //     [\n    //       \"previewUserId\",\n    //       \"trail_web_user_tour\",\n    //       \"userData\",\n    //       \"isPreview\",\n    //       \"isPreviewSingleTrail\",\n    //       \"followedTrailUserData\",\n    //     ],\n    //     function (items) {\n    //\n    //       userId = items.userData._id;\n    //       isPreview = items.isPreview;\n    //       isPreviewSingleTrail = items.isPreviewSingleTrail;\n    //       followedTrailUserData = items.followedTrailUserData;\n\n    //       if (items.previewUserId !== \"\" || items.previewUserId !== undefined) {\n    //         const userTrails = items.trail_web_user_tour.filter((el) => {\n    //           if (el.userId !== items.previewUserId) {\n    //             return el;\n    //           }\n    //         });\n\n    //         chrome.storage.local.set({\n    //           previewUserId: \"\",\n    //           trail_web_user_tour: userTrails,\n    //         });\n    //       }\n    //     }\n    //   );\n    // });\n\n    // Call init button position function\n    initButtonPosition();\n\n    try {\n      const trail = this.state.trailList[this.state.tourStep - 1];\n      chrome.storage.local.get(\n        [\n          \"webUrl\",\n          \"userData\",\n          \"isPreview\",\n          \"old_trail_id\",\n          \"old_user_data\",\n          \"previewUserId\",\n          \"trail_web_user_tour\",\n          \"tourStep\",\n          \"isPreviewSingleTrail\",\n          \"followedTrailUserData\",\n          \"isGuest\",\n          \"currentTrailsTab\",\n        ],\n        async (items) => {\n          // Update trail flag if user not viewing followed trail preview\n          if (\n            !items.followedTrailUserData &&\n            !items.isPreview &&\n            !items.isPreviewSingleTrail\n          ) {\n            const data = {\n              trail_data_id: trail.trail_data_id,\n              flag: \"\",\n            };\n\n            // Call update trail api to add flag into table\n            await updateTrailFlag(data);\n          }\n\n          if (items.previewUserId !== \"\" || items.previewUserId !== undefined) {\n            const userTrails = items.trail_web_user_tour.filter((el) => {\n              if (el.userId !== items.previewUserId) {\n                return el;\n              }\n            });\n\n            chrome.storage.local.set({\n              previewUserId: \"\",\n              trail_web_user_tour: userTrails,\n            });\n          }\n\n          if (items.isPreview || items.isPreviewSingleTrail) {\n            // const trackData = {\n            //   user_id: items.userData._id,\n            //   trail_id: trail.trail_id,\n            //   steps_visited: trail.trail_data_id,\n            // };\n\n            // // Call update track data function\n            // await updateTrailTrack(trackData);\n\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            this.props.onChangeTourType(\"\");\n            this.props.mainToggle();\n\n            if (items.isGuest) {\n              window.location.href = items.webUrl + \"#signin-to-continue\";\n            } else {\n              window.location.href = items.webUrl.split(\"#\")[0];\n            }\n\n            chrome.storage.local.set({\n              isPreview: false,\n              isGuest: false,\n              isPreviewSingleTrail: false,\n              continueTourStepId: \"\",\n              tourType: \"\",\n              currentTourType: \"\",\n              trail_id: items.old_trail_id,\n              trail_data_id: \"\",\n              guest_id: \"\",\n              trail_web_user_tour: [],\n              noStepsToWatch: \"\",\n              userData: { ...items.old_user_data },\n            });\n          } else if (\n            items.followedTrailUserData &&\n            items.currentTrailsTab === \"Followed\"\n          ) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            // chrome.storage.local.set({\n            //   tourStep: \"\",\n            //   tourType: \"\",\n            //   currentTourType: \"\",\n            // });\n          }\n\n          console.log(\"after update\");\n\n          chrome.storage.local.set({\n            tourType: \"\",\n            currentTourType: \"\",\n            tourStep: \"\",\n          });\n\n          this.setState({\n            web_url: \"\",\n            tourType: \"\",\n            currentTourType: \"\",\n            tourStep: \"\",\n            overlay: false,\n            loading: false,\n            draggable: false,\n          });\n\n          this.props.onChangeTourType(\"\");\n          this.props.mainToggle();\n        }\n      );\n\n      // // Update step data when guest visit trail\n      // if (isPreview || isPreviewSingleTrail) {\n\n      // }\n\n      // Call back arrow click handler function\n      // Remove overlay and other added element\n      $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\n      $(`.trail_tour_ToolTipExtend`).remove();\n      $(\".trail_tooltip_done\").remove();\n      // $(\".trail_web_user_tour\").removeAttr(\"trail_web_user_tour\");\n      $(\".trail_web_user_tour\").removeClass(\"trail_web_user_tour\");\n      $(`traiil_stop${this.state.tourStep}`).removeAttr(\n        `traiil_stop${this.state.tourStep}`\n      );\n\n      // Call remove overlay function\n      removeOverlay();\n    } catch (err) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        currentTourType: \"\",\n        tourStep: \"\",\n      });\n\n      this.setState({\n        web_url: \"\",\n        tourType: \"\",\n        currentTourType: \"\",\n        tourStep: \"\",\n        overlay: false,\n        loading: false,\n        draggable: false,\n      });\n\n      this.props.onChangeTourType(\"\");\n      this.props.mainToggle();\n    }\n  };\n\n  openPopup = () => {\n    // Set state\n    this.setState({\n      open: !this.state.open,\n      openSidebar: !this.state.openSidebar,\n    });\n  };\n\n  /**\n   * on change input value\n   */\n  onChangeToInput = (e) => {\n    e.stopPropagation();\n\n    // Set state\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  /**\n   * tour step and type manage\n   * tourStep -> step\n   * tourType -> type\n   */\n  // tourManage = (step, type, tourSide) => {\n  //   chrome.storage.local.get([\"isPreview\", \"userData\"], async (items) => {\n  //     const trail = this.state.trailList[this.state.tourStep - 1];\n  //     // Update step data when guest visit trail\n  //     if (items.isPreview) {\n  //       const trackData = {\n  //         trail_id: trail.trail_id,\n  //         user_id: items.userData._id,\n  //         steps_visited: trail.trail_data_id,\n  //       };\n\n  //       // Call update track data function\n  //       await updateTrailTrack(trackData);\n  //     }\n  //   });\n  //   chrome.storage.local.set({ currentTourType: type, tourStep: step });\n  //   this.setState({ currentTourType: type, tourStep: step, tourSide });\n  // };\n\n  updateUserTrailTrack = async (items) => {\n    try {\n      const trail = items.trail_web_user_tour[items.tourStep - 1];\n\n      const trackData = {\n        trail_id: trail.trail_id,\n        user_id: items.userData._id,\n        steps_visited: trail.trail_data_id,\n      };\n\n      // Call update track data function\n      await updateTrailTrack(trackData);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  tourManage = (step, type, tourSide) => {\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(\n        [\n          \"isPreview\",\n          \"userData\",\n          \"isPreviewSingleTrail\",\n          \"currentTrailsTab\",\n          \"followedTrailUserData\",\n          \"trail_web_user_tour\",\n          \"tourStep\",\n        ],\n        async (items) => {\n          // Update step data when guest visit trail\n          if (items.isPreview || items.isPreviewSingleTrail) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          } else if (\n            items.currentTrailsTab === \"Followed\" &&\n            items.followedTrailUserData\n          ) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          } else {\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          }\n        }\n      );\n    });\n  };\n\n  /**\n   * on trail video trail next, previos manage\n   * @step tourStep\n   */\n  onTourVideoTrail = (step) => {\n    if (this.state.trailList[step - 1]) {\n      let type = this.state.trailList[step - 1].type;\n      chrome.storage.local.set({ currentTourType: type, tourStep: step });\n      this.setState({ currentTourType: type, tourStep: step });\n      if (this.state.trailList[step - 1].url !== document.URL) {\n        window.location.href = this.state.trailList[step - 1].url;\n      }\n    }\n  };\n\n  uploadFile = (file) => {\n    this.setState({ fileLoading: true });\n\n    handleFileUpload(file)\n      .then((response) => {\n        return response;\n      })\n      .then((res) => {\n        return res.data;\n      })\n      .then((data) => {\n        this.setState({\n          showPreview: true,\n          fileLoading: false,\n          fileName: file.name,\n          web_url: data.response.result.fileUrl,\n          fileAddStatus: true,\n        });\n      })\n      .catch((err) => {\n        this.setState({ fileLoading: false });\n      });\n  };\n\n  handleChange = (e) => {\n    const { tourType } = this.state;\n    const file = e.target.files[0];\n    const fileType = file.type.split(\"/\");\n    e.target.value = null;\n\n    if (tourType === \"audio\" && fileType[1] === \"mp4\") {\n      // Upload file function\n      this.uploadFile(file);\n    } else if (tourType !== fileType[0]) {\n      // Return alert\n      return alert(`Please upload ${tourType} file!`);\n    } else if (tourType === \"video\" && fileType[1] === \"x-matroska\") {\n      // Return alert\n      return alert(\"MKV format suport coming soon.\");\n    } else {\n      // Upload file function\n      this.uploadFile(file);\n    }\n  };\n\n  /**\n   * It will invoked on step drag and drop.\n   */\n  onSectionDragAndDrop = async ({ oldIndex, newIndex }) => {\n    // this.props.onDashboardSectionSort(\n    // \tarrayMove(this.state.trailList, oldIndex, newIndex).map(r => ({ id: r.id })),\n    // \tthis.props.usersData._id\n    // );\n\n    const sorted = arrayMove(this.state.trailList, oldIndex, newIndex);\n\n    this.setState({ trail_web_user_tour: sorted, trailList: sorted });\n    chrome.storage.local.set({ trail_web_user_tour: sorted });\n\n    // Update sorted array in database\n    const res = await arraySorting(sorted);\n\n    if (!res.data.response || !res.data.response.result) {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  saveSortedTrails = async (e) => {\n    e.preventDefault();\n\n    // Update sorted array in database\n    const res = await arraySorting(this.state.trailList);\n\n    if (!res.data.response || !res.data.response.result) {\n      alert(\"Something went wrong!\");\n    }\n\n    this.setState({ saveSort: false });\n    chrome.storage.local.set({ saveSort: false });\n  };\n\n  // Save trails into database\n  publishTrails = async (data) => {\n    try {\n      const res = await uploadTrails(data);\n      this.setState({ publishLoader: false });\n      if (!res.data.response) {\n        throw new Error(\"Saving trails failed!\");\n      }\n\n      /// const result = res.data.response.result.map(el => {\n      // \treturn {\n      // \t\ttrail_data_id: el.trail_data_id,\n      // \t\turl: el.url,\n      // \t\tpath: el.path,\n      // \t\tselector: el.selector,\n      // \t\tclass: el.class,\n      // \t\ttitle: el.title,\n      // \t\tdescription: el.description,\n      // \t\tweb_url: el.web_url,\n      // \t\ttrail_id: el.trail_id,\n      // \t\ttype: el.type,\n      // \t\tuniqueTarget: el.unique_target,\n      // \t\tmediaType: el.media_type,\n      // \t\tcreated: el.created,\n      // \t\ttrailIndex: el.trailIndex\n      // \t}\n      // });\n\n      // let newArray = [];\n\n      // this.state.trailList.forEach(el => {\n      // \tif (el.trail_id) {\n      // \t\tnewArray.push(el);\n      // \t}\n      // });\n\n      // newArray = newArray.concat(result);\n\n      // newArray.sort((a, b) => {\n      // \treturn (+a.trailIndex) - (+b.trailIndex);\n      // });\n\n      chrome.storage.local.get(\n        [\"trail_id\"],\n        async function (items) {\n          // Get all trail from database\n          let screen = resizeScreen() ? \"mobile\" : \"web\";\n          const allDataRes = await getUserOneTrail(items.trail_id, screen);\n          const newDataArray = allDataRes.data.response.result.map((el) => {\n            return {\n              userId: this.state.currUserId,\n              trail_data_id: el.trail_data_id,\n              url: el.url,\n              path: el.path,\n              selector: el.selector,\n              class: el.class,\n              title: el.title,\n              description: el.description,\n              web_url: el.web_url,\n              trail_id: el.trail_id,\n              type: el.type,\n              uniqueTarget: el.unique_target,\n              unique_target_one: el.unique_target_one,\n              mobile_media_type: el.mobile_media_type,\n              mobile_title: el.mobile_title,\n              mobile_description: el.mobile_description,\n              mediaType: el.media_type,\n              created: el.created,\n              trailIndex: el.trailIndex,\n            };\n          });\n\n          chrome.storage.local.set({ trail_web_user_tour: newDataArray });\n          this.setState({ trailList: newDataArray });\n        }.bind(this)\n      );\n    } catch (err) {\n      this.setState({ publishLoader: false });\n    }\n  };\n\n  tooltipShareBtn = (e) => {\n    const { trailList } = this.state;\n    const trailDataId = trailList[trailList.length - 1].trail_data_id;\n    const trailId = trailList[trailList.length - 1].trail_id;\n    const trailUrl = `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trail_data_tour/${trailDataId}?trailId=${trailId}&user_id=${this.state.currUserId}`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { trailList, currUserId } = this.state;\n\n    if (trailList.length == 0) {\n      alert(\"Please create trail\");\n      return null;\n    }\n\n    const trailId = trailList[trailList.length - 1].trail_id;\n    const URL = trailList[0].url;\n    let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n    const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currUserId}&trailId=${trailId}&trailPreview=true&tourStep=1`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  followTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    followTrails(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"201\") {\n          throw new Error(\"Error while following trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({\n          followData: { previewUserId, follow: true },\n        });\n        this.setState({ follow: true });\n      })\n      .catch((err) => {});\n  };\n\n  unFollowTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    unFollowTrailOfUser(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"200\") {\n          throw new Error(\"Error while unfollowing trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({ followData: {} });\n        this.setState({ follow: false });\n      })\n      .catch((err) => {});\n  };\n\n  // Send notification to follower when publish button clicked\n  sendNotification = (e) => {\n    e.preventDefault();\n    this.setState({ publishLoader: true });\n\n    // Socket notification\n    socket.emit(\"sendNotification\", this.state.currUserId);\n\n    setTimeout(() => {\n      this.setState({ publishLoader: false });\n    }, 1000);\n\n    localStorage.setItem(\n      process.env.REACT_APP_LOCALSTORAGE,\n      this.state.trailList.length\n    );\n  };\n\n  // Save last show preview trail\n  onBackArrowClickHandler = async (e, close) => {\n    chrome.storage.local.get(\n      [\n        \"isPreview\",\n        \"userData\",\n        \"webUrl\",\n        \"old_trail_id\",\n        \"old_user_data\",\n        \"isPreviewSingleTrail\",\n        \"isGuest\",\n        \"followedTrailUserData\",\n        \"currentTrailsTab\",\n        \"trail_web_user_tour\",\n        \"tourStep\",\n      ],\n      async (items) => {\n        const trail = this.state.trailList[this.state.tourStep - 1];\n\n        // Update step data when guest visit trail\n        if (\n          (items.isPreview || items.isPreviewSingleTrail) &&\n          this.state.tourType === \"preview\"\n        ) {\n          // const trackData = {\n          //   trail_id: trail.trail_id,\n          //   user_id: items.userData._id,\n          //   steps_visited: trail.trail_data_id,\n          // };\n\n          // // Call update track data function\n          // await updateTrailTrack(trackData);\n\n          // Call update track data function\n          await this.updateUserTrailTrack(items);\n\n          this.props.onChangeTourType(\"\");\n          this.props.mainToggle();\n\n          if (items.isGuest) {\n            let url = items.webUrl + \"#signin-to-continue\";\n            window.location.href = url;\n          } else {\n            window.location.href = items.webUrl.split(\"#\")[0];\n          }\n\n          chrome.storage.local.set({\n            isPreview: false,\n            isGuest: false,\n            isPreviewSingleTrail: false,\n            tourType: \"\",\n            currentTourType: \"\",\n            continueTourStepId: \"\",\n            trail_id: items.old_trail_id,\n            trail_data_id: \"\",\n            guest_id: \"\",\n            trail_web_user_tour: [],\n            noStepsToWatch: \"\",\n\n            userData: { ...items.old_user_data },\n          });\n        } else if (\n          items.followedTrailUserData &&\n          items.currentTrailsTab === \"Followed\"\n        ) {\n          // Call update track data function\n          await this.updateUserTrailTrack(items);\n        }\n      }\n    );\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // if (close === undefined) {\n    //   chrome.storage.local.set({ closeContinue: false });\n    // }\n\n    // Call init button position function\n    initButtonPosition();\n\n    if (!this.state.onDone) {\n      // Set onDone state\n      this.setState({ onDone: true });\n    }\n\n    const removeThisElements = () => {\n      // Remove overlay and other added element\n      $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\n      $(`.trail_tour_ToolTipExtend`).remove();\n      $(\".trail_tooltip_done\").remove();\n      $(\".trail_web_user_tour\").removeClass(\"trail_web_user_tour\");\n      // $(\".trail_web_user_tour\").removeAttr(\"trail_web_user_tour\");\n      $(`traiil_stop${this.state.tourStep}`).removeAttr(\n        `traiil_stop${this.state.tourStep}`\n      );\n      $(\".trail_select_bx\").removeClass(\"trail_select_bx\");\n\n      const tooltip = shadowRoot.querySelector(\".trail_tooltip\");\n      if (tooltip) {\n        tooltip.parentNode.removeChild(tooltip);\n      }\n\n      // Call remove overlay function\n      removeOverlay();\n    };\n\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(\n        [\n          \"previewUserId\",\n          \"isPreview\",\n          \"isPreviewSingleTrail\",\n          \"followedTrailUserData\",\n        ],\n        async (items) => {\n          if (\n            (!items.previewUserId || items.previewUserId === \"\") &&\n            !items.followedTrailUserData\n          ) {\n            const { currentTourType, tourType } = this.state;\n\n            if (\n              (currentTourType === \"tooltip\" ||\n                currentTourType === \"audio\" ||\n                currentTourType === \"video\" ||\n                currentTourType === \"modal\") &&\n              tourType === \"preview\"\n            ) {\n              if (this.state.trailList.length > 0) {\n                if (!items.isPreview || !items.isPreviewSingleTrail) {\n                  try {\n                    const data = {\n                      trail_data_id: this.state.trailList[\n                        this.state.tourStep - 1\n                      ].trail_data_id,\n                      flag: \"continue\",\n                    };\n\n                    // Call update trail api to add flag into table\n                    await updateTrailFlag(data);\n                  } catch (err) {}\n                }\n\n                // Remove elements\n                await removeThisElements();\n\n                // Call toggle function\n                chrome.storage.local.set({\n                  tourType: \"\",\n                  currentTourType: \"\",\n                  tourStep: \"\",\n                });\n                this.setState({\n                  web_url: \"\",\n                  tourType: \"\",\n                  currentTourType: \"\",\n                  tourStep: \"\",\n                  overlay: false,\n                  loading: false,\n                  open: false,\n                  openSidebar: false,\n                  draggable: false,\n                });\n                this.props.onChangeTourType(\"\");\n                this.props.mainToggle();\n              }\n\n              // // Remove elements\n              // await removeThisElements();\n            } else if (currentTourType === \"preview\" && tourType === \"modal\") {\n              this.props.mainToggle();\n              this.props.onChangeTourType(\"\");\n              this.setState({\n                web_url: \"\",\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                overlay: false,\n                createModalOpen: false,\n                loading: false,\n                stepType: \"\",\n                open: false,\n                openSidebar: false,\n                draggable: false,\n              });\n              chrome.storage.local.set({\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                stepType: \"\",\n              });\n            } else {\n              // Remove elements\n              await removeThisElements();\n              //\n\n              this.props.mainToggle();\n              this.props.onChangeTourType(\"\");\n              this.setState({\n                web_url: \"\",\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                overlay: false,\n                fileName: \"\",\n                loading: false,\n                stepType: \"\",\n                open: false,\n                openSidebar: false,\n                draggable: false,\n              });\n            }\n\n            chrome.storage.local.set({\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n              stepType: \"\",\n            });\n\n            if (this.state.deleteModal.show) {\n              // Hide delete modal\n              this.onDeleteModalClose();\n            }\n\n            if (this.state.onDone) {\n              // Set onDone state\n              this.setState({ onDone: false });\n            }\n\n            resolve();\n          } else {\n            // Remove elements\n            await removeThisElements();\n            this.props.mainToggle();\n            this.props.onChangeTourType(\"\");\n            chrome.storage.local.set({\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n            });\n            this.setState({\n              web_url: \"\",\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n              overlay: false,\n              loading: false,\n              open: false,\n              openSidebar: false,\n              draggable: false,\n            });\n\n            if (this.state.onDone) {\n              // Set onDone state\n              this.setState({ onDone: false });\n            }\n\n            resolve();\n          }\n        }\n      );\n    });\n  };\n\n  onToggleCreateModal = (status) => {\n    if (!status) {\n      // Call init button position function\n      initButtonPosition();\n    }\n\n    if (!status) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        stepType: \"\",\n        currentTourType: \"\",\n        tourStep: \"\",\n      });\n      this.setState({\n        web_url: \"\",\n        tourType: \"\",\n        stepType: \"\",\n        open: false,\n        currentTourType: \"\",\n        tourStep: \"\",\n        overlay: false,\n        createModalOpen: status,\n        draggable: false,\n      });\n      this.props.mainToggle();\n      this.props.onChangeTourType(\"\");\n    } else {\n      this.setState({ createModalOpen: status });\n    }\n\n    // ReactDOM.render(\n    // \t<CreateModalComponent\n    // \t\topen={status}\n    // \t\ttoggle={this.onToggleCreateModal}\n    // \t\tonSave={this.onSaveTrail}\n    // \t/>\n    // , document.querySelector('body'));\n  };\n\n  onNextClick = () => {\n    console.log(\"this.previewModalRef\", this.previewModalRef);\n  };\n\n  onCloseTooltipHandle = async (e) => {\n    // Call init button position function\n    initButtonPosition();\n\n    // Hide continue button\n    chrome.storage.local.set({ closeContinue: false });\n\n    // Set onDone state\n    this.setState({ onDone: true });\n\n    const { trailList, tourStep } = this.state;\n\n    if (trailList.length > 0 && trailList.length === tourStep) {\n      // Call clear toggle function\n      await this.onClearToggle();\n    } else {\n      chrome.storage.local.get(\n        [\"isPreview\", \"isPreviewSingleTrail\", \"followedTrailUserData\"],\n        (items) => {\n          if (\n            !items.isPreview &&\n            !items.isPreviewSingleTrail &&\n            !items.followedTrailUserData\n          ) {\n            chrome.storage.local.set({ closeContinue: true });\n          }\n        }\n      );\n      // Show continue button\n\n      // Call back arrow click handler function\n      await this.onBackArrowClickHandler(e, \"close\");\n    }\n\n    // Set onDone state\n    this.setState({ onDone: false, draggable: false });\n  };\n\n  setLoadingState = (query) => {\n    this.setState({ loading: query });\n  };\n\n  onClickToGetRow = (e, result, tourStep) => {\n    e.preventDefault();\n    this.setState({ MobileTargetNotFound: {} });\n    chrome.storage.local.set({ MobileTargetNotFound: {} });\n    this.setState({ rowData: result, tourStep, open: false });\n  };\n\n  // addTrailitLogo = () => {\n  // \tconst extensionDiv = document.getElementById('extension-div').shadowRoot;\n  // \tconst image = extensionDiv.querySelector('.trailit_logoLeftBottom');\n  // \t// <img src={require('/images/trailit_logo.png')} className=\"trailit_logoLeftBottom\" alt=\"..\"/>\n  // \tif (extensionDiv && !image) {\n  // \t\tconst element = document.createElement('img');\n  // \t\telement.src = \"https://trailit.co/wp-content/uploads/2020/04/logo.png\";\n  // \t\telement.className = 'trailit_logoLeftBottom';\n  // \t\telement.alt = 'logo_image_in_preview';\n\n  // \t\t// Append element in body\n  // \t\textensionDiv.appendChild(element);\n  // \t}\n  // };\n\n  // removeTrailitLogo = () => {\n  // \tconst image = document.getElementById('extension-div').shadowRoot.querySelector('.trailit_logoLeftBottom');\n\n  // \tif (image) {\n  // \t\t// Remove image from perent node\n  // \t\timage.parentNode.removeChild(image);\n  // \t}\n  // };\n\n  // Send tip function\n  sendTip = async (toAddress, amount) => {\n    this.setState({ sendLoader: true });\n\n    // const { privateKey } = this.state;\n    const privateKey = undefined; // Need to send private key but for demos hard code in code\n    sendTransection(privateKey, toAddress, amount)\n      .then((res) => {\n        if (res && res.code && res.code === 400) {\n          throw new Error(res.err);\n        }\n\n        // Set is success state\n        this.setState({ isSuccess: true });\n\n        setTimeout(() => {\n          // Hide modal\n          this.onSendTipModalClose();\n\n          // Set is success state\n          this.setState({ isSuccess: false });\n        }, 5000);\n      })\n      .catch((err) => {\n        this.setState({ setError: err.message });\n\n        setTimeout(() => {\n          // Hide modal\n          this.onSendTipModalClose();\n\n          // Set is success state\n          this.setState({ setError: false });\n        }, 5000);\n      });\n    // await wallet.transfer(this.state.toAddress, this.state.amount);\n    // let balance = await wallet.balance();\n    // this.setState({\n    //   toAddress: \"\",\n    //   amount: \"\",\n    //   balance,\n    //   sendLoader: false,\n    // });\n  };\n\n  dragStop(data) {\n    const position = document\n      .getElementById(\"extension-div\")\n      .shadowRoot.getElementById(\"my-extension-defaultroot\");\n    //\n    //\n    //\n    //\n  }\n\n  audioToggler = () => {\n    // Set state\n    this.setState({\n      audioRef: !this.state.audioRef,\n    });\n  };\n\n  videoToggler = () => {\n    // Set state\n    this.setState({\n      videoRef: !this.state.videoRef,\n    });\n  };\n\n  modelToggler = () => {\n    // Set state\n    this.setState({\n      previewModalRef: !this.state.previewModalRef,\n    });\n  };\n\n  webTourToggler = () => {\n    // Set state\n    this.setState({\n      tooltipRef: !this.state.tooltipRef,\n    });\n  };\n\n  render() {\n    let {\n      open,\n      trailList,\n      tourStatus,\n      tourType,\n      tourStep,\n      currentTourType,\n      web_url,\n      overlay,\n      follow,\n      fileName,\n      fileLoading,\n      createModalOpen,\n      stepType,\n      onDone,\n      isDraggable,\n      trailName,\n      openSidebar,\n      currentTrailsTab,\n    } = this.state;\n\n    // Auto logout function\n    autoLogoutFunction();\n\n    // console.log(\"tourType\", tourType);\n    // console.log(\"tourStep\", tourStep);\n    // console.log(\"currentTourType\", currentTourType);\n    // console.log(\"currentTrailsTab\", currentTrailsTab);\n\n    const localStorageCount = localStorage.getItem(\n      process.env.REACT_APP_LOCALSTORAGE\n    );\n    const stateCount = trailList.length;\n\n    if (web_url !== \"\") {\n      this.setState({ fileAddStatus: true });\n    }\n\n    tourUrl = false;\n\n    if (tourStep !== \"\" && stateCount > 0) {\n      tourUrl = trailList[tourStep - 1].url === document.URL;\n      // if(trailList[tourStep - 1].url !== document.URL) {\n      // \twindow.location.href = trailList[tourStep - 1].url;\n      // }\n    }\n\n    // let openPopup = openSidebar;\n\n    // if (\n    //   openSidebar &&\n    //   (tourType === \"audio\" || tourType === \"video\" || tourType === \"Make Edit\")\n    // ) {\n    //   openPopup = true;\n    // } else {\n    //   openPopup = false;\n    // }\n    // console.log(\"openPopup\", openPopup);\n\n    //\n    //\n\n    // const sidepopup = document\n    //   .getElementById(\"extension-div\")\n    //   .shadowRoot.querySelector(\".sidepopup\");\n    // if (sidepopup) {\n    //   if (\n    //     tourType === \"audio\" ||\n    //     tourType === \"video\" ||\n    //     tourType === \"Make Edit\"\n    //   ) {\n    //     // Add white background\n    //     sidepopup.style.background = \"white\";\n    //   } else if (\n    //     tourType === \"modal\" ||\n    //     tourType === \"tooltip\" ||\n    //     tourType === \"preview\"\n    //   ) {\n    //\n    //     // Add transparent background\n    //     sidepopup.style.background = \"transparent\";\n    //   }\n    // }\n\n    if (!openSidebar && flipped && defaultComp) {\n      const flipId = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.getElementById(\"my-extension-root-flip\");\n      flipId.setAttribute(\"class\", \"trail_flip_box\");\n    } else if (openSidebar || !flipped) {\n      const trailFlipBox = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".trail_flip_box\");\n      if (trailFlipBox) {\n        trailFlipBox.removeAttribute(\"class\");\n      }\n    }\n\n    // if (loading) {\n    // \tReactDOM.render(\n    // \t\t<TooltipOverlay data={trailList} toggle={this.onClearToggle} tourStep={tourStep} tour={this.tourManage} tourSide={this.state.tourSide} />,\n    // \t\tdocument.body.appendChild(document.createElement('div'))\n    // \t);\n    // }\n\n    $(() => {\n      const modalDiv = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".tr_modal\");\n\n      if (modalDiv) {\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\n            \"class\",\n            \"trial_modal_show trial_create_modal_main\"\n          );\n        }\n\n        const modal = document\n          .getElementById(\"extension-div\")\n          .shadowRoot.querySelector(\".trial_create_modal_main .modal\");\n\n        if (modal && resizeScreen()) {\n          modal.style.height = \"75%\";\n        }\n      }\n\n      // if (tourType && tourType !== '') {\n      // \tdocument.getElementById('extension-div').shadowRoot.getElementById('my-extension-defaultroot').style.position = 'relative';\n      // }\n    });\n\n    if (\n      (currentTourType === \"tooltip\" ||\n        currentTourType === \"audio\" ||\n        currentTourType === \"video\" ||\n        currentTourType === \"modal\" ||\n        currentTourType === \"Make Edit\" ||\n        currentTourType === \"\") &&\n      (tourType === \"preview\" || tourType === \"\") &&\n      (tourUrl || !tourUrl)\n    ) {\n      chrome.storage.local.set({ loading: \"false\" });\n      this.setLoadingState(false);\n\n      // // Add trailit logo when trail menu open\n      // this.addTrailitLogo();\n    }\n\n    //\n    //\n\n    // if (!draggable) {\n    //   //\n    //   const menuButton = document\n    //     .getElementById(\"extension-div\")\n    //     .shadowRoot.getElementById(\"my-extension-defaultroot\");\n\n    //   if (menuButton) {\n    //     // menuButton.style.transform = 'translate(0px, 0px)';\n    //   }\n    // }\n\n    // if ((currentTourType === 'preview' && (currentTourType !== 'video' && currentTourType !== 'audio')) &&\n    // \t(tourType !== 'Make Edit' && tourType !== 'video' && tourType !== 'audio')\n    // ) {\n    // \tconst menuButton = document.getElementById('extension-div').shadowRoot.getElementById('my-extension-defaultroot');\n    // \tif (menuButton) {\n\n    // \t\t// Make X button draggable\n    // \t\tdragElement(menuButton);\n\n    // \t} else {\n    // \t\t// Make X button not draggable\n    // \t\tdragElement('');\n    // \t}\n\n    // } else {\n    // \t// Make X button not draggable\n    // \tdragElement('');\n    // }\n\n    let mediaType = \"\";\n    if (\n      tourStatus !== \"preview\" &&\n      (tourType === \"audio\" || tourType === \"video\")\n    ) {\n      if (tourType === \"video\") {\n        mediaType = \"video/*, .mkv, .mov\";\n      } else if (tourType === \"audio\") {\n        mediaType = \"audio/*\";\n      }\n    }\n\n    let sideBar = (\n      <div>\n        <div className=\"first_step\">\n          <div className=\"hdr\">\n            <div className=\"titleBack\">\n              <button\n                disabled={onDone}\n                className=\"trail_builder-back-button\"\n                onClick={this.onBackArrowClickHandler}\n                onTouchEnd={this.onBackArrowClickHandler}\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"7.734\"\n                  height=\"13.404\"\n                  viewBox=\"0 0 7.734 13.404\"\n                >\n                  <g id=\"left-arrow\" transform=\"translate(0.557 0.557)\">\n                    <path\n                      id=\"Path_2\"\n                      data-name=\"Path 2\"\n                      d=\"M39.276,18.719a.437.437,0,0,0,.617,0,.437.437,0,0,0,0-.617l-5.428-5.428,5.428-5.428a.437.437,0,0,0-.617-.617l-5.748,5.737a.437.437,0,0,0,0,.617Z\"\n                      transform=\"translate(-33.4 -6.5)\"\n                      fill=\"#289728\"\n                      stroke=\"#fb542b\"\n                      stroke-linecap=\"round\"\n                      stroke-linejoin=\"round\"\n                      stroke-width=\"1\"\n                    />\n                  </g>\n                </svg>\n              </button>\n              <span>Trail Builder</span>\n            </div>\n            {obj.previewUserId && obj.previewUserId !== \"\" && (\n              <div className=\"optionBtn\">\n                {follow ? (\n                  <Button type=\"primary\" onClick={this.unFollowTrail}>\n                    Unfollow\n                  </Button>\n                ) : (\n                  <Button type=\"primary\" onClick={this.followTrail}>\n                    Follow\n                  </Button>\n                )}\n              </div>\n            )}\n          </div>\n          <div id=\"scroll\" className=\"sidepopcontent scrollbar\">\n            {tourType === \"audio\" || tourType === \"video\" ? (\n              <h4 className=\"title my-4\">Upload Media</h4>\n            ) : (\n              // <h4 className=\"title my-4\">Trail It, Curated Guided Tour</h4>\n              <h4 className=\"title my-4\">{trailName}</h4>\n            )}\n            <div className=\"pl-4 trail_video_frm\">\n              {tourStatus !== \"preview\" && tourType === \"video\" && (\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  onChange={this.onChangeToInput}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  placeholder=\"Enter Video title\"\n                  className=\"ant-input mb-2\"\n                  autoComplete=\"off\"\n                />\n              )}\n              {tourStatus !== \"preview\" && tourType === \"video\" && (\n                <input\n                  type=\"text\"\n                  name=\"web_url\"\n                  value={fileName}\n                  onChange={this.onChangeToInput}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  placeholder=\"Add Video URL\"\n                  className=\"ant-input mb-2\"\n                  autoComplete=\"off\"\n                />\n              )}\n              {tourStatus !== \"preview\" && tourType === \"video\" && (\n                <div className=\"upload_bx\">\n                  <div className=\"ant-upload\">\n                    <p className=\"ant-upload-drag-icon\">\n                      {fileLoading && (\n                        <div class=\"trial_spinner\">\n                          <img\n                            alt=\"ring1\"\n                            class=\"ring1\"\n                            src={require(`./images/loding1.png`)}\n                          />\n                          <img\n                            alt=\"ring2\"\n                            class=\"ring2\"\n                            src={require(`./images/loding2.png`)}\n                          />\n                        </div>\n                      )}\n                      {!fileLoading && <CloudUploadOutlined />}\n                    </p>\n                    <p className=\"ant-upload-text\">\n                      {fileLoading ? \"Uploading\" : \"Upload\"} Video\n                    </p>\n                  </div>\n                  <input\n                    type=\"file\"\n                    name=\"media\"\n                    accept={mediaType}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              )}\n              {tourStatus !== \"preview\" && tourType === \"video\" && (\n                <button\n                  disabled={fileLoading}\n                  onClick={this.onSaveTrail}\n                  value=\"ADD\"\n                  className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n                >\n                  ADD STEP\n                </button>\n              )}\n              {tourStatus === \"preview\" && tourType === \"video\" && (\n                <input\n                  type=\"submit\"\n                  onClick={() => this.onTourVideoTrail(this.state.tourStep - 1)}\n                  value=\"Previous\"\n                  className=\"ant-btn ant-btn-primary\"\n                />\n              )}\n              {tourStatus === \"preview\" && tourType === \"video\" && (\n                <input\n                  type=\"submit\"\n                  onClick={() => this.onTourVideoTrail(this.state.tourStep + 1)}\n                  value=\"Next\"\n                  className=\"ant-btn ant-btn-primary\"\n                />\n              )}\n              {tourStatus !== \"preview\" && tourType === \"audio\" && (\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  placeholder=\"Enter Audio Title\"\n                  className=\"ant-input mb-2\"\n                  onChange={this.onChangeToInput}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  autoComplete=\"off\"\n                />\n              )}\n              {tourStatus !== \"preview\" && tourType === \"audio\" && (\n                <input\n                  type=\"text\"\n                  name=\"web_url\"\n                  value={fileName}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  onChange={this.onChangeToInput}\n                  placeholder=\"Add Audio URL\"\n                  className=\"ant-input mb-2\"\n                  autoComplete=\"off\"\n                />\n              )}\n              {tourStatus !== \"preview\" && tourType === \"audio\" && (\n                <div className=\"upload_bx\">\n                  <div className=\"ant-upload\">\n                    <p className=\"ant-upload-drag-icon\">\n                      {fileLoading && (\n                        <div class=\"trial_spinner\">\n                          <img\n                            class=\"ring1\"\n                            src={require(`./images/loding1.png`)}\n                          />\n                          <img\n                            class=\"ring2\"\n                            src={require(`./images/loding2.png`)}\n                          />\n                        </div>\n                      )}\n                      {!fileLoading && <CloudUploadOutlined />}\n                    </p>\n                    <p className=\"ant-upload-text\">\n                      {fileLoading ? \"Uploading\" : \"Upload\"} Audio\n                    </p>\n                  </div>\n                  <input\n                    type=\"file\"\n                    name=\"media\"\n                    accept={mediaType}\n                    onChange={this.handleChange}\n                  />\n                </div>\n              )}\n              {tourStatus !== \"preview\" && tourType === \"audio\" && (\n                <button\n                  disabled={fileLoading}\n                  onClick={this.onSaveTrail}\n                  value=\"ADD\"\n                  className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n                >\n                  ADD STEP\n                </button>\n              )}\n              {tourStatus === \"preview\" && tourType === \"audio\" && (\n                <input\n                  type=\"submit\"\n                  onClick={() => this.onTourVideoTrail(this.state.tourStep - 1)}\n                  value=\"Previous\"\n                  className=\"ant-btn ant-btn-primary\"\n                />\n              )}\n              {tourStatus === \"preview\" && tourType === \"audio\" && (\n                <input\n                  type=\"submit\"\n                  onClick={() => this.onTourVideoTrail(this.state.tourStep + 1)}\n                  value=\"Next\"\n                  className=\"ant-btn ant-btn-primary\"\n                />\n              )}\n            </div>\n            {tourType !== \"audio\" && tourType !== \"video\" && (\n              <form className=\"flow tr_side_form\" id=\"\">\n                <SortableContainer\n                  onSortEnd={this.onSectionDragAndDrop}\n                  // useDragHandle\n                  pressDelay={200}\n                >\n                  {this.state.trailList.map((result, index) => (\n                    <SortableItem\n                      key={`item-${index}`}\n                      tourType={this.state.tourType}\n                      onClick={this.onClickToGetRow}\n                      index={index}\n                      i={index}\n                      tourStep={tourStep}\n                      result={result}\n                      isDeleteModalOpen={this.state.deleteModal.show}\n                      onDeleteModalOpen={this.onDeleteModalOpen}\n                      MobileTargetNotFound={this.state.MobileTargetNotFound}\n                      currentTrailsTab={currentTrailsTab}\n                    />\n                  ))}\n                </SortableContainer>\n              </form>\n            )}\n            <div>\n              {tourType !== \"audio\" &&\n                tourType !== \"video\" &&\n                this.state.saveSort && (\n                  <div className=\"trailButtonsWrapper\">\n                    <Button type=\"primary\" onClick={this.saveSortedTrails}>\n                      Save\n                    </Button>\n                  </div>\n                )}\n              {tourType !== \"audio\" &&\n                tourType !== \"video\" &&\n                this.state.trailList.length > 0 && (\n                  <div className=\"trailButtonsWrapper\">\n                    <Button type=\"primary\" onClick={this.tooltipShareBtn}>\n                      Share\n                    </Button>\n                  </div>\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n    if (tourType === \"preview\") {\n      sideBar = (\n        <form className=\"flow tr_side_form\" id=\"\">\n          <SortableContainer\n            onSortEnd={this.onSectionDragAndDrop}\n            // useDragHandle\n            pressDelay={200}\n          >\n            {this.state.trailList.map((result, index) => (\n              <SortableItem\n                currentTrailsTab={currentTrailsTab}\n                key={`item-${index}`}\n                tourType={this.state.tourType}\n                onClick={this.onClickToGetRow}\n                index={index}\n                i={index}\n                tourStep={tourStep}\n                result={result}\n                isDeleteModalOpen={this.state.deleteModal.show}\n                onDeleteModalOpen={this.onDeleteModalOpen}\n                MobileTargetNotFound={this.state.MobileTargetNotFound}\n              />\n            ))}\n          </SortableContainer>\n        </form>\n      );\n    }\n\n    let componentData = (\n      <div id=\"my-extension-defaultroot\">\n        {/* Delete modal */}\n        {this.state.deleteModal.show && (\n          <TrailDeleteModal\n            onDone={onDone}\n            deleteModal={this.state.deleteModal}\n            onDeleteModalClose={this.onDeleteModalClose}\n            onDeleteButtonClick={this.onDeleteButtonClick}\n          />\n        )}\n\n        {/* Send tip modal */}\n        {this.state.sendTipModal && (\n          <SendTipModal\n            sendTip={this.sendTip}\n            setError={this.state.setError}\n            isSuccess={this.state.isSuccess}\n            isLoading={this.state.isSuccess}\n            sendLoader={this.state.sendLoader}\n            sendTipModal={this.state.sendTipModal}\n            onSendTipModalClose={this.onSendTipModalClose}\n          />\n        )}\n\n        <div className=\"sidepanal adadad trail_sidepanel_overlay\">\n          {createModalOpen && (\n            <CreateModalComponent\n              stepType={stepType}\n              open={createModalOpen}\n              screenSize={resizeScreen}\n              toggle={this.onToggleCreateModal}\n              closeButtonHandler={this.onBackArrowClickHandler}\n              onSave={this.onSaveTrail}\n            />\n          )}\n          <div>\n            {/* {currentTourType === 'tooltip' && tourType === 'preview' && !overlay && tourStep!=='' && tourUrl && <TooltipOverlay data={trailList} toggle={this.onClearToggle} tourStep={tourStep} tour={this.tourManage} tourSide={this.state.tourSide} />} */}\n            {/* <TooltipOverlay data={trailList} toggle={this.onClearToggle} tourStep={tourStep} tour={this.tourManage} tourSide={this.state.tourSide} /> */}\n            {currentTourType === \"tooltip\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <WebUserTour\n                  tooltipRef={this.state.tooltipRef}\n                  tooltipToggle={this.webTourToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                  onNotFoundTarget={this.onNotFoundTarget}\n                  onSendTipModalOpen={this.onSendTipModalOpen}\n                  onChangeTourType={this.props.onChangeTourType}\n                  mainToggle={this.props.mainToggle}\n                />\n              )}\n            {currentTourType === \"video\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <VideoTour\n                  videoRef={this.state.videoRef}\n                  videoToggle={this.videoToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                />\n              )}\n            {currentTourType === \"audio\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <AudioTour\n                  audioRef={this.state.audioRef}\n                  audioToggle={this.audioToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                />\n              )}\n            {currentTourType === \"modal\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <PreviewModalComponent\n                  ref={this.previewModalRef}\n                  onNextClick={this.onNextClick}\n                  previewModalRef={this.state.previewModalRef}\n                  previewModalToggle={this.modelToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                  onSendTipModalOpen={this.onSendTipModalOpen}\n                />\n              )}\n            {/* <img src={require('./images/trailit_logo.png')} className=\"trailit_logoLeftBottom\" alt=\"..\"/> */}\n          </div>\n          <div\n            className={`sidepopup ${\n              openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n            } ${\n              tourType === \"audio\" ||\n              tourType === \"video\" ||\n              tourType === \"Make Edit\"\n                ? \"white_background\"\n                : \"transparent_background\"\n            }`}\n          >\n            <div className=\"space\"></div>\n            {/* <div className=\"preview\">.\n              Preview\n            </div>\n            <div className=\"createToolTip\">.\n              Create Tool Tip\n            </div> */}\n\n            {sideBar}\n\n            {/* <div className=\"audio\">.\n          Create Audio\n        </div>\n        <div className=\"savedTrails\">.\n          Saved Trails\n        </div> */}\n            <div className=\"space\"></div>\n          </div>\n          {this.state.dynamicPopupButton && (\n            <button className=\"menu pop\" onClick={this.openPopup}>\n              <img alt=\"\" src={require(\"./images/trailit_X_button_new.png\")} />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n\n    if (\n      isDraggable &&\n      tourType !== \"Make Edit\" &&\n      currentTourType !== \"audio\" &&\n      currentTourType !== \"video\"\n    ) {\n      componentData = (\n        <Draggable\n          disabled={!isDraggable}\n          // onStart={ (data) => {\n          // \t//\n          // } }\n          // onDrag={ (data) => {\n          // \t//\n          // } }\n          // onStop={(data) => {\n          //\n\n          // \tthis.dragStop(data);\n          // \t// this.setState({ dragPosition: { x: data.x, y: data.y } });\n          // }}\n          position={null}\n          // // defaultPosition={ { x: 0, y: 0 } }\n        >\n          <div>\n            <div id=\"my-extension-defaultroot\">\n              {/* Delete modal */}\n              {this.state.deleteModal.show && (\n                <TrailDeleteModal\n                  onDone={onDone}\n                  deleteModal={this.state.deleteModal}\n                  onDeleteModalClose={this.onDeleteModalClose}\n                  onDeleteButtonClick={this.onDeleteButtonClick}\n                />\n              )}\n\n              {/* Send tip modal */}\n              {this.state.sendTipModal && (\n                <SendTipModal\n                  sendTip={this.sendTip}\n                  setError={this.state.setError}\n                  isSuccess={this.state.isSuccess}\n                  isLoading={this.state.isSuccess}\n                  sendLoader={this.state.sendLoader}\n                  sendTipModal={this.state.sendTipModal}\n                  onSendTipModalClose={this.onSendTipModalClose}\n                />\n              )}\n\n              <div className=\"sidepanal adadad trail_sidepanel_overlay\">\n                {createModalOpen && (\n                  <CreateModalComponent\n                    stepType={stepType}\n                    open={createModalOpen}\n                    screenSize={resizeScreen}\n                    toggle={this.onToggleCreateModal}\n                    closeButtonHandler={this.onBackArrowClickHandler}\n                    onSave={this.onSaveTrail}\n                  />\n                )}\n                <div>\n                  {/* {currentTourType === 'tooltip' && tourType === 'preview' && !overlay && tourStep!=='' && tourUrl && <TooltipOverlay data={trailList} toggle={this.onClearToggle} tourStep={tourStep} tour={this.tourManage} tourSide={this.state.tourSide} />} */}\n                  {/* <TooltipOverlay data={trailList} toggle={this.onClearToggle} tourStep={tourStep} tour={this.tourManage} tourSide={this.state.tourSide} /> */}\n                  {currentTourType === \"tooltip\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <WebUserTour\n                        tooltipRef={this.state.tooltipRef}\n                        tooltipToggle={this.webTourToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                        onNotFoundTarget={this.onNotFoundTarget}\n                        onSendTipModalOpen={this.onSendTipModalOpen}\n                        onChangeTourType={this.props.onChangeTourType}\n                        mainToggle={this.props.mainToggle}\n                      />\n                    )}\n                  {currentTourType === \"video\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <VideoTour\n                        videoRef={this.state.videoRef}\n                        videoToggle={this.videoToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                      />\n                    )}\n                  {currentTourType === \"audio\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <AudioTour\n                        audioRef={this.state.audioRef}\n                        audioToggle={this.audioToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                      />\n                    )}\n                  {currentTourType === \"modal\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <PreviewModalComponent\n                        previewModalRef={this.state.previewModalRef}\n                        previewModalToggle={this.modelToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                        onSendTipModalOpen={this.onSendTipModalOpen}\n                      />\n                    )}\n                  {/* <img src={require('./images/trailit_logo.png')} className=\"trailit_logoLeftBottom\" alt=\"..\"/> */}\n                </div>\n                <div\n                  className={`sidepopup ${\n                    openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n                  } ${\n                    tourType === \"audio\" ||\n                    tourType === \"video\" ||\n                    tourType === \"Make Edit\"\n                      ? \"white_background\"\n                      : \"transparent_background\"\n                  }`}\n                >\n                  <div className=\"space\"></div>\n                  {/* <div className=\"preview\">.\n                Preview\n              </div>\n              <div className=\"createToolTip\">.\n                Create Tool Tip\n              </div> */}\n\n                  {sideBar}\n\n                  {/* <div className=\"audio\">.\n            Create Audio\n          </div>\n          <div className=\"savedTrails\">.\n            Saved Trails\n          </div> */}\n                  <div className=\"space\"></div>\n                </div>\n                {this.state.dynamicPopupButton && (\n                  <button\n                    onTouchEnd={this.openPopup}\n                    className=\"menu pop\"\n                    onClick={this.openPopup}\n                  >\n                    <img\n                      alt=\"\"\n                      src={require(\"./images/trailit_X_button_new.png\")}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </Draggable>\n      );\n    }\n\n    return (\n      <>\n        <style>{defaultButtonCss1}</style>\n        <style>{defaultButtonCss2}</style>\n        <style>{defaultButtonCss3}</style>\n\n        {componentData}\n      </>\n    );\n  }\n}\n\n// app = document.createElement('div');\n// app.id = 'my-extension-root-flip';\n// app.href = chrome.extension.getURL('/static/css/content.css');\n\n// document.body.appendChild(app);\n\n// extension-test(content.js)\nconst extensionTestID = \"extension-div\";\nlet extensionTest = document.getElementById(extensionTestID);\n\nif (!extensionTest) {\n  extensionTest = document.createElement(\"div\");\n  extensionTest.setAttribute(\"id\", extensionTestID);\n  window.document.body.append(extensionTest);\n  extensionTest.attachShadow({ mode: \"open\" });\n}\n\n// Select our shadow host\nlet extensionRoot = document.getElementById(\"extension-div\");\nif (extensionRoot) {\n  // Create the shadow root\n  const shadowRoot = extensionRoot.shadowRoot;\n\n  if (shadowRoot) {\n    app = shadowRoot.getElementById(\"my-extension-root-flip\");\n    if (!app) {\n      // Create a div element\n      app = document.createElement(\"div\");\n      app.setAttribute(\"id\", \"my-extension-root-flip\");\n\n      const modalOpen = document.createElement(\"div\");\n      modalOpen.setAttribute(\"class\", \"modal-open\");\n\n      const style0 = document.createElement(\"style\");\n      style0.textContent = myExtensionRootFlipCss0;\n\n      const style1 = document.createElement(\"style\");\n      style1.textContent = myExtensionRootFlipCss1;\n\n      const style2 = document.createElement(\"style\");\n      style2.textContent = myExtensionRootFlipCss2;\n\n      const style3 = document.createElement(\"style\");\n      style3.textContent = myExtensionRootFlipCss3;\n\n      const style4 = document.createElement(\"style\");\n      style4.textContent = myExtensionRootFlipCss4;\n\n      const style5 = document.createElement(\"style\");\n      style5.textContent = myExtensionRootFlipCss5;\n\n      const tooltipStyle1 = document.createElement(\"style\");\n      tooltipStyle1.textContent = tooltipCss1;\n\n      // Append div to shadow DOM\n      shadowRoot.appendChild(app);\n      extensionRoot.shadowRoot.appendChild(app);\n      extensionRoot.shadowRoot.appendChild(style1);\n      extensionRoot.shadowRoot.appendChild(style2);\n      extensionRoot.shadowRoot.appendChild(style3);\n      extensionRoot.shadowRoot.appendChild(style4);\n      extensionRoot.shadowRoot.appendChild(style5);\n      extensionRoot.shadowRoot.appendChild(tooltipStyle1);\n      shadowRoot.appendChild(modalOpen);\n    }\n  }\n}\n\nclass MainFlip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainComponent: false,\n      defaultComponent: false,\n      isFlipped: false,\n      tourType: \"\",\n    };\n\n    this.onStorageHandleChange = this.onStorageHandleChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\n      \"visibilitychange\",\n      function () {\n        if (document.hidden) {\n          //...\n        }\n      },\n      false\n    );\n\n    chrome.storage.local.get(\n      [\"openButton\", \"tourType\"],\n      function (items) {\n        this.onChangeTourType(items.tourType);\n        if (items.tourType !== \"preview\") {\n          this.setState({\n            defaultComponent: false,\n            mainComponent: false,\n            isFlipped: false,\n          });\n        } else {\n          toggle();\n          this.setState({\n            defaultComponent: true,\n            mainComponent: false,\n            isFlipped: true,\n          });\n        }\n      }.bind(this)\n    );\n  }\n\n  onStorageHandleChange = (changes) => {\n    if (\n      changes.newValue.tourType !== undefined &&\n      changes.newValue.tourType === \"\"\n    ) {\n      this.setState({ isFlipped: false });\n    } else if (\n      changes.newValue.tourType !== undefined &&\n      changes.newValue.tourType !== \"\"\n    ) {\n      this.setState({ isFlipped: true });\n    }\n  };\n\n  mainToggle = (isTrue) => {\n    if (this.state.mainComponent || isTrue) {\n      root1 = \"block\";\n      this.setState({\n        defaultComponent: true,\n        mainComponent: false,\n        isFlipped: true,\n      });\n    } else {\n      root1 = \"none\";\n      this.setState({\n        defaultComponent: false,\n        mainComponent: true,\n        isFlipped: false,\n      });\n    }\n  };\n\n  downToggleButton = (status) => {\n    if (status) {\n      root1 = \"block\";\n      this.setState({ defaultComponent: true, mainComponent: false });\n    } else {\n      root1 = \"none\";\n      this.setState({ defaultComponent: false, mainComponent: true });\n    }\n  };\n\n  onChangeTourType = (type) => {\n    if (type === \"\" || type === undefined) {\n      this.setState({ isFlipped: false, tourType: \"\" });\n    } else {\n      this.setState({ isFlipped: true, tourType: type });\n    }\n  };\n\n  render() {\n    const { defaultComponent, mainComponent, isFlipped, tourType } = this.state;\n    defaultComp = defaultComponent;\n    flipped = isFlipped;\n\n    return (\n      <React.Fragment>\n        <style>{mainFlipCss}</style>\n        <div className={`trail_card ${isFlipped ? \"trail_flipped\" : \"\"}`}>\n          <div className={\"trail_card__face trail_card__face--front\"}>\n            <Main\n              mainToggle={this.mainToggle}\n              onChangeTourType={this.onChangeTourType}\n              downToggleButton={this.downToggleButton}\n            />\n          </div>\n          <div className={\"trail_card__face trail_card__face--back\"}>\n            <DefaultButton\n              mainToggle={this.mainToggle}\n              onChangeTourType={this.onChangeTourType}\n              downToggleButton={this.downToggleButton}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nchrome.storage.local.get([\"isAuth\", \"authToken\", \"userData\"], function (items) {\n  if (items.isAuth) {\n    ReactDOM.render(<MainFlip />, app);\n    // ReactDOM.render(<Main />, app);\n    // ReactDOM.render(<DefaultButton />, appd);\n  }\n});\n\napp.style.display = \"none\";\n\n// app = document.createElement('div');\n// app.id = 'my-extension-root';\n// app.href = chrome.extension.getURL('/static/css/content.css');\n// appd = document.createElement('div');\n// appd.id = 'my-extension-defaultroot';\n// appd.href = chrome.extension.getURL('/static/css/content.css');\n\n// document.body.appendChild(app);\n// document.body.appendChild(appd);\n// chrome.storage.local.get(['isAuth', 'authToken', 'userData'], function (items) {\n// \tif (items.isAuth) {\n// \t\tReactDOM.render(<Main />, app);\n// \t\tReactDOM.render(<DefaultButton />, appd);\n// \t}\n// });\n// appd.style.display = 'none';\nchrome.runtime.onConnect.addListener((port) => {\n  port.onMessage.addListener((msgObj, sender, sendResponse) => {\n    if (msgObj.message === \"check_login_status\") {\n      chrome.storage.local.get([\"isAuth\"], (items) => {\n        if (items.isAuth) {\n          port.postMessage({ response: true });\n        } else {\n          port.postMessage({ response: false });\n        }\n      });\n    }\n  });\n});\n\nchrome.runtime.onMessage.addListener((msgObj, sender, sendResponse) => {\n  if (msgObj.status === \"logout\") {\n    app.style.display = \"none\";\n    // appd.style.display = 'none';\n  } else {\n    if (\n      msgObj.subject !== \"updateTimeout\" &&\n      msgObj.subject !== \"DOMObj\" &&\n      msgObj !== \"chrome_modal\" &&\n      msgObj.subject !== \"CreateTrail\" &&\n      msgObj.message !== \"urlChanged\"\n    ) {\n      setTimeout(() => {\n        // to handle open tab in entire tab\n        chrome.storage.local.get([\"openButton\", \"tourType\"], function (items) {\n          // if(items.openButton === 'CreateTrail') {\n          // \tappd.style.display = 'block';\n          // } else {\n          if (app.style.display === \"none\") {\n            // this.props.toggle();\n            app.style.display = \"block\";\n            // toggle()\n          }\n          // }\n        });\n      });\n    }\n  }\n});\n\nconst toggle = () => {\n  if (app.style.display === \"none\") {\n    app.style.display = \"block\";\n    // appd.style.display = 'none';\n  } else {\n    app.style.display = \"none\";\n    // appd.style.display = 'block';\n  }\n};\n\n// const downToggleButton = (status) => {\n// \tif (status) {\n// \t\tappd.style.display = 'block';\n// \t} else {\n// \t\tappd.style.display = 'none';\n// \t}\n// }\n\nconst autoLogoutFunction = () => {\n  // // Clear auto logout timeout\n  // clearTimeout(autoLogoutTimeout);\n\n  // autoLogoutTimeout = setTimeout(() => {\n  //   chrome.storage.local.get(\n  //     [\"openButton\", \"tourType\", \"isAuth\"],\n  //     function (items) {\n  //       console.log(\"items\", items);\n\n  //       if (items.isAuth) {\n  //         // this.onClickToRedirect(\"login\");\n  //         chrome.runtime.sendMessage(\"\", { type: \"logout\" });\n  //         chrome.runtime.sendMessage({ badgeText: `` });\n  //         chrome.storage.local.set({\n  //           trail_web_user_tour: [],\n  //           notification: true,\n  //           closeContinue: false,\n  //         });\n  //         chrome.storage.local.clear();\n  //       }\n  //     }\n  //   );\n  // }, 1800000);\n\n  // Clear interval\n  clearInterval(autoLogoutTimeout);\n\n  // Update auto logout time in localstorage\n  window.localStorage.setItem(\"add-on-auto-lgout-tm\", Date.now() + 1800000); // 10000\n\n  autoLogoutTimeout = setInterval(() => {\n    chrome.storage.local.get([\"isAuth\"], function (items) {\n      const logoutTime = parseInt(\n        window.localStorage.getItem(\"add-on-auto-lgout-tm\")\n      );\n\n      if (items.isAuth && logoutTime < Date.now()) {\n        chrome.runtime.sendMessage(\"\", { type: \"logout\" });\n        chrome.runtime.sendMessage({ badgeText: `` });\n        chrome.storage.local.set({\n          trail_web_user_tour: [],\n          notification: true,\n          closeContinue: false,\n        });\n        chrome.storage.local.clear();\n      }\n    });\n  }, 5000);\n};\n",["465","466"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/webUserTour.js",["467","468","469","470","471","472","473","474","475","476","477","478","479","480","481","482","483","484","485","486","487","488","489","490","491","492","493","494","495","496","497","498"],"import React from \"react\";\r\nimport Tour from \"react-user-tour\";\r\nimport { Button, notification } from \"antd\";\r\nimport { CloseOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport unique from \"unique-selector\";\r\nimport $ from \"jquery\";\r\n\r\nimport AudioTour from \"./audioTour\";\r\nimport { urlStingCheck, getScrollParent } from \"./common\";\r\nimport { stopMediaPlaying } from \"../common/stopePlayingMedia\";\r\nimport {\r\n  addOverlay,\r\n  setOverlayHtml,\r\n  removeOverlay,\r\n} from \"../common/trailOverlay\";\r\nimport {\r\n  addTrailitLogo,\r\n  removeTrailitLogo,\r\n} from \"../common/trailitLogoInPreview\";\r\nimport ContinueTourConfirmation from \"./Modal/ContinueTourConfirmation\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\nfunction getWindowRelativeOffset(parentWindow, elem) {\r\n  var offset = {\r\n    left: 0,\r\n    top: 0,\r\n  };\r\n\r\n  // relative to the target field's document\r\n  offset.left = elem.getBoundingClientRect().left;\r\n  offset.top = elem.getBoundingClientRect().top;\r\n\r\n  // now we will calculate according to the current document, this current\r\n  // document might be same as the document of target field or it may be\r\n  // parent of the document of the target field\r\n\r\n  var childWindow = elem.document.frames.window;\r\n\r\n  while (childWindow != parentWindow) {\r\n    offset.left =\r\n      offset.left + childWindow.frameElement.getBoundingClientRect().left;\r\n    offset.top =\r\n      offset.top + childWindow.frameElement.getBoundingClientRect().top;\r\n    childWindow = childWindow.parent;\r\n  }\r\n\r\n  return offset;\r\n}\r\n\r\nlet countN = 0;\r\n\r\nclass WebUserTour extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTourActive: true,\r\n      tourStep: 1,\r\n      tourSteps: {},\r\n      tourContent: [],\r\n      uniqueTargetStatus: false,\r\n      curentTour: {},\r\n    };\r\n  }\r\n\r\n  handleWithoutLogin = (event, tourSide, type, currentStep) => {\r\n    chrome.storage.local.get([\"isGuest\"], (items) => {\r\n      if (currentStep % 3 === 0 && tourSide === \"next\" && items.isGuest) {\r\n        this.props.tooltipToggle();\r\n      } else {\r\n        this.onClickToManagePopoverButton(event, tourSide);\r\n      }\r\n    });\r\n  };\r\n\r\n  continueTrailWithoutLogin = (event, tourSide) => {\r\n    this.onClickToManagePopoverButton(event, tourSide);\r\n    this.props.tooltipToggle();\r\n  };\r\n  toSignInWithoutLogin = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  componentDidMount() {\r\n    let { tourStep } = this.state;\r\n    this.createPopOver(tourStep);\r\n\r\n    window.addEventListener(\"load\", this.handleLoad);\r\n\r\n    chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n    this.getWebUserTour(\"\", this.props.data[tourStep - 1], tourStep);\r\n\r\n    if (\r\n      this.props.data[tourStep - 1].mediaType &&\r\n      (this.props.data[tourStep - 1].mediaType === \"video\" ||\r\n        this.props.data[tourStep - 1].mediaType === \"audio\")\r\n    ) {\r\n      if (document.readyState === \"complete\") {\r\n        $(document).ready(() => {\r\n          // Stop playing websites audio or video\r\n          stopMediaPlaying();\r\n        });\r\n      } else if (\r\n        document.readyState === \"interactive\" &&\r\n        document.URL.includes(\"https://www.youtube.com/\")\r\n      ) {\r\n        $(document).ready(() => {\r\n          // Stop playing websites audio or video\r\n          stopMediaPlaying();\r\n        });\r\n      } else {\r\n        document.body.onload = function () {\r\n          // Stop playing websites audio or video\r\n          stopMediaPlaying();\r\n        };\r\n      }\r\n\r\n      // Add logo\r\n      this.addLogo();\r\n\r\n      setTimeout(() => {\r\n        document.querySelectorAll(\"video\").forEach((res) => {\r\n          if (res.className !== \"preview-video\") {\r\n            res.pause();\r\n          }\r\n        });\r\n      }, 2000);\r\n    }\r\n\r\n    window.addEventListener(\"resize\", () => {\r\n      const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\r\n\r\n      if (!shadowRoot.querySelector(\".trail_tooltip_done\")) return;\r\n\r\n      this.getWebUserTour(\"\", this.props.data[tourStep - 1], tourStep);\r\n    });\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    // Call add logo function\r\n    this.addLogo();\r\n  }\r\n\r\n  handleLoad = (e) => {\r\n    // alert(\"GGGGGGGGGGGGGGGGGGGGGGG\");\r\n  };\r\n\r\n  addLogo = () => {\r\n    // Add trailit logo\r\n    addTrailitLogo();\r\n  };\r\n\r\n  handleMessage(msg) {\r\n    let { tourStep } = this.state;\r\n\r\n    setTimeout(() => {\r\n      chrome.storage.local.get(\r\n        [\r\n          \"trail_web_user_tour\",\r\n          \"tourStatus\",\r\n          \"tourType\",\r\n          \"tourStep\",\r\n          \"currentTourType\",\r\n        ],\r\n        function (items) {\r\n          this.createPopOver(items.tourStep);\r\n          this.getWebUserTour(\r\n            \"\",\r\n            this.props.data[items.tourStep - 1],\r\n            items.tourStep\r\n          );\r\n        }\r\n      );\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove listener when this component unmounts\r\n    chrome.runtime.onMessage.removeListener(this.handleMessage);\r\n\r\n    // Remove trailit log\r\n    removeTrailitLogo();\r\n\r\n    this.setState({ isTourActive: false });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      tourStep: props.tourStep,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * create popover based on their url\r\n   */\r\n  createPopOver = (step) => {\r\n    const { tourSteps, tourStep } = this.state;\r\n\r\n    let content = this.props.data\r\n      .map((res, index) => {\r\n        let unqTarget = res.uniqueTarget;\r\n\r\n        if (resizeScreen()) {\r\n          if (res.unique_target_one != \"\") {\r\n            unqTarget = res.unique_target_one;\r\n          }\r\n        }\r\n\r\n        if (\r\n          res.url == this.props.data[step - 1].url &&\r\n          res.type == \"tooltip\" &&\r\n          document.querySelector(unqTarget) != null\r\n        ) {\r\n          tourSteps[`step${index + 1}`] = false;\r\n          res[\"step\"] = index + 1;\r\n          return res;\r\n        }\r\n      })\r\n      .filter((r) => r != undefined);\r\n\r\n    this.setState({ tourContent: content, tourSteps });\r\n  };\r\n\r\n  /**\r\n   * get currentweb user tour\r\n   */\r\n  getWebUserTour = (event, data, step) => {\r\n    let checkFirstStep = true;\r\n    let { tourSteps, tourStep } = this.state;\r\n    let activeWeb = data;\r\n    let unqTarget = this.props.data[step - 1].uniqueTarget;\r\n\r\n    if (resizeScreen()) {\r\n      if (this.props.data[step - 1].unique_target_one != \"\") {\r\n        unqTarget = this.props.data[step - 1].unique_target_one;\r\n      }\r\n    }\r\n\r\n    if (document.querySelector(unqTarget) == null) {\r\n      let a = () => {\r\n        if (resizeScreen()) {\r\n          countN++;\r\n\r\n          if (countN == 4) {\r\n            alert(\"Your target not found!!\");\r\n            clearInt();\r\n            this.onButtonCloseHandler(event);\r\n            this.props.onNotFoundTarget({\r\n              trail_data_id: this.props.data[step - 1].trail_data_id,\r\n            });\r\n            countN = 0;\r\n          }\r\n        }\r\n\r\n        if (document.querySelector(unqTarget) != null) {\r\n          countN = 0;\r\n          clearInt();\r\n          this.createPopOver(step);\r\n          this.getWebUserTour(event, data, step);\r\n        }\r\n      };\r\n\r\n      const interval = setInterval(a, 1000);\r\n\r\n      function clearInt() {\r\n        clearInterval(interval);\r\n      }\r\n    } else {\r\n      document.querySelector(unqTarget).classList.add(\"trail_web_user_tour\");\r\n\r\n      // Call Add overlay function\r\n      addOverlay();\r\n\r\n      let targetElement = \"html, body\";\r\n      var docHeight = document.documentElement.scrollHeight;\r\n      let original = document.querySelector(unqTarget);\r\n      let bounding = original.getBoundingClientRect();\r\n      let offset = $(unqTarget).offset();\r\n\r\n      let leftPosition = offset.left;\r\n      let topPosition = offset.top;\r\n\r\n      setTimeout(() => {\r\n        if ($(unqTarget).offset() !== undefined) {\r\n          if (topPosition !== $(unqTarget).offset().top) {\r\n            // Call remove overlay function\r\n            removeOverlay();\r\n\r\n            // shadowRoot.querySelector('.trail_overlay').remove();\r\n            this.createPopOver(step);\r\n            this.getWebUserTour(event, data, step);\r\n          }\r\n        }\r\n      }, 1000);\r\n\r\n      // Call set overlay html function\r\n      setOverlayHtml(\r\n        window,\r\n        docHeight,\r\n        topPosition,\r\n        bounding,\r\n        leftPosition,\r\n        \"webUserTour\"\r\n      );\r\n\r\n      if (event != \"\") {\r\n        event.preventDefault();\r\n      }\r\n\r\n      const y =\r\n        document.querySelector(unqTarget).getBoundingClientRect().top +\r\n        document.querySelector(targetElement).scrollTop +\r\n        bounding.height -\r\n        300;\r\n      $(targetElement).stop().animate(\r\n        {\r\n          scrollTop: y,\r\n        },\r\n        1000\r\n      );\r\n\r\n      window.addEventListener(\"load\", () => {\r\n        setTimeout(() => {\r\n          $(targetElement).stop().animate(\r\n            {\r\n              scrollTop: y,\r\n            },\r\n            1000\r\n          );\r\n        }, 2000);\r\n      });\r\n\r\n      let content = this.props.data\r\n        .map((res, index) => {\r\n          if (res.url == document.URL) {\r\n            tourSteps[`step${index + 1}`] = false;\r\n            res[\"step\"] = index + 1;\r\n            return res;\r\n          }\r\n        })\r\n        .filter((r) => r != undefined);\r\n\r\n      activeWeb = {\r\n        ...activeWeb,\r\n        uniqueTarget: unqTarget,\r\n      };\r\n\r\n      tourSteps[`step${step}`] = true;\r\n      this.setState({\r\n        curentTour: activeWeb,\r\n        uniqueTargetStatus: true,\r\n        tourStep: step,\r\n        tourSteps,\r\n      });\r\n    }\r\n    // }\r\n  };\r\n\r\n  /**\r\n   * Manage popover web user tour button\r\n   * @data tooltip data\r\n   * @step tooltip current step\r\n   */\r\n  onClickToManagePopoverButton = async (event, tourSide) => {\r\n    let step =\r\n      tourSide === \"prev\" ? this.props.tourStep - 1 : this.props.tourStep + 1;\r\n\r\n    removeOverlay();\r\n\r\n    // document.getElementById('extension-div').shadowRoot.querySelector('.trail_overlay').remove();\r\n    $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\r\n    // $('.trail_web_user_tour').parent().parent().removeAttr('style');\r\n    $(\".trail_web_user_tour\").removeAttr(\"trail_web_user_tour\");\r\n    // $(`traiil_stop${this.state.tourStep}`).removeAttr(`traiil_stop${this.state.tourStep}`);\r\n\r\n    let { tourSteps, tourStep, tourContent } = this.state;\r\n    let unqTarget = this.props.data[tourStep - 1].uniqueTarget;\r\n\r\n    if (resizeScreen()) {\r\n      if (this.props.data[tourStep - 1].unique_target_one != \"\") {\r\n        unqTarget = this.props.data[tourStep - 1].unique_target_one;\r\n      }\r\n    }\r\n\r\n    document.querySelector(unqTarget).classList.remove(\"trail_web_user_tour\");\r\n    if (this.props.data[step - 1].url === document.URL) {\r\n      let type = this.props.data[step - 1].type;\r\n\r\n      if (type === \"tooltip\") {\r\n        this.createPopOver(step);\r\n        this.getWebUserTour(event, this.props.data[step - 1], step);\r\n        this.props.tour(step, type, tourSide);\r\n      } else {\r\n        this.setState({ tourStep: step - 1 });\r\n        this.props.tour(step, type, tourSide);\r\n      }\r\n    } else {\r\n      // Set loading true to show overlay\r\n      this.props.setLoadingState(true);\r\n      let type = this.props.data[step - 1].type;\r\n      await this.props.tour(step, type, tourSide);\r\n      // chrome.runtime.sendMessage({type: \"notification\", options: {\r\n      //     url: this.props.data[step - 1].url\r\n      // }});\r\n\r\n      window.location.href = this.props.data[step - 1].url;\r\n      setTimeout(() => {\r\n        this.createPopOver(step);\r\n        this.getWebUserTour(event, this.props.data[step - 1], step);\r\n      }, 2000);\r\n    }\r\n\r\n    // Call remove overlay function\r\n  };\r\n\r\n  onClickToDoneTour = (data, step) => {\r\n    let { tourSteps, tourStep } = this.state;\r\n\r\n    Object.keys(tourSteps).map((r, i) => {\r\n      tourSteps[r] = false;\r\n    });\r\n\r\n    this.setState({ tourSteps, tourStep: 1 });\r\n\r\n    this.props.toggle({ removePreviewTrails: true });\r\n  };\r\n\r\n  onLoadedEvent = (e) => {\r\n    let { uniqueTarget } = this.props.data[this.state.tourStep - 1];\r\n    let targetElement = \"html, body\";\r\n    let bounding = document.querySelector(uniqueTarget).getBoundingClientRect();\r\n    const y =\r\n      document.querySelector(uniqueTarget).getBoundingClientRect().top +\r\n      document.querySelector(targetElement).scrollTop +\r\n      bounding.height -\r\n      300;\r\n    $(targetElement).stop().animate(\r\n      {\r\n        scrollTop: y,\r\n      },\r\n      1000\r\n    );\r\n  };\r\n\r\n  onButtonCloseHandler = async (e) => {\r\n    let res = await this.props.closeButtonHandler(e);\r\n\r\n    return res;\r\n  };\r\n\r\n  render() {\r\n    const { tourSteps, tourStep, tourContent, uniqueTargetStatus } = this.state;\r\n    let preview = null;\r\n    let mediaTypeStatus;\r\n\r\n    if (\r\n      resizeScreen() &&\r\n      this.props.data[tourStep - 1].unique_target_one != \"\"\r\n    ) {\r\n      mediaTypeStatus = this.props.data[tourStep - 1].mobile_media_type;\r\n    } else {\r\n      mediaTypeStatus = this.props.data[tourStep - 1].mediaType;\r\n    }\r\n\r\n    if (mediaTypeStatus && mediaTypeStatus === \"video\") {\r\n      preview = (\r\n        <div className=\"tr_preview_video_bx\">\r\n          <video\r\n            className=\"preview-video\"\r\n            disablePictureInPicture\r\n            controlsList=\"nodownload\"\r\n            controls\r\n            onLoadedData={(e) => this.onLoadedEvent(e)}\r\n            allow=\"autoplay\"\r\n            autoPlay={true}\r\n          >\r\n            <source src={this.props.data[tourStep - 1].web_url} />\r\n          </video>\r\n        </div>\r\n      );\r\n    } else if (mediaTypeStatus && mediaTypeStatus === \"audio\") {\r\n      preview = (\r\n        <AudioTour\r\n          data={this.props.data}\r\n          toggle={this.props.toggle}\r\n          tourStep={this.props.tourStep}\r\n          tour={this.props.tour}\r\n          previewInTooltip\r\n        />\r\n      );\r\n    } else if (mediaTypeStatus && mediaTypeStatus === \"image\") {\r\n      preview = (\r\n        <div className=\"tr_preview_picture_bx\">\r\n          <img\r\n            className=\"preview-picture\"\r\n            src={this.props.data[tourStep - 1].web_url}\r\n            alt=\"preview-img\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.tooltipRef && (\r\n          <ContinueTourConfirmation\r\n            open={this.props.tooltipRef}\r\n            toggle={this.props.tooltipToggle}\r\n            continueTrail={this.continueTrailWithoutLogin}\r\n            toSignIn={this.toSignInWithoutLogin}\r\n          />\r\n        )}\r\n        {uniqueTargetStatus &&\r\n          this.props.data[tourStep - 1].url === document.URL && (\r\n            <React.Fragment>\r\n              {tourContent.map((res, index) => {\r\n                let unTarget = resizeScreen()\r\n                  ? res.unique_target_one != \"\"\r\n                    ? res.unique_target_one\r\n                    : res.uniqueTarget\r\n                  : res.uniqueTarget;\r\n                let title, description;\r\n\r\n                if (resizeScreen() && res.unique_target_one != \"\") {\r\n                  title = res.mobile_title;\r\n                  description = res.mobile_description;\r\n                } else {\r\n                  title = res.title;\r\n                  description = res.description;\r\n                }\r\n\r\n                return (\r\n                  <Popover\r\n                    target={unTarget}\r\n                    container={\r\n                      document.getElementById(\"extension-div\").shadowRoot\r\n                    }\r\n                    className={`trail_tooltip_done ${\r\n                      mediaTypeStatus && mediaTypeStatus === \"text\"\r\n                        ? \"trail_text_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"video\")\r\n                        ? \"tr_video_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"image\")\r\n                        ? \"tr_picture_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"audio\")\r\n                        ? \"tr_audio_only\"\r\n                        : \"\"\r\n                    } ${resizeScreen() && \"mobile_preview_popover\"}`}\r\n                    placement=\"top\"\r\n                    isOpen={tourSteps[`step${res.step}`]}\r\n                  >\r\n                    {/* <button> */}\r\n                    <img\r\n                      alt=\"..\"\r\n                      className=\"trailit_IconRightBottom\"\r\n                      src={require(`../images/trailit_icon1.png`)}\r\n                      onClick={(e) => {\r\n                        // Call send tip open modal function\r\n                        this.props.onSendTipModalOpen();\r\n                      }}\r\n                    />\r\n                    {/* </button> */}\r\n                    <div className=\"trail_preview_bx\">\r\n                      <PopoverHeader className=\"top\">{title}</PopoverHeader>\r\n                      <PopoverBody>\r\n                        {\r\n                          <span\r\n                            dangerouslySetInnerHTML={{ __html: description }}\r\n                          ></span>\r\n                        }\r\n                        {preview}\r\n                      </PopoverBody>\r\n                      <PopoverHeader className=\"bottom\">\r\n                        {res.title}\r\n                      </PopoverHeader>\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                      {this.props.data.length > 0 && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"trial_button_close\"\r\n                          onClick={this.onButtonCloseHandler}\r\n                        >\r\n                          <CloseOutlined type=\"close\" />\r\n                        </Button>\r\n                      )}\r\n                      {1 < tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"prev\"\r\n                          onClick={(e) =>\r\n                            this.onClickToManagePopoverButton(e, \"prev\")\r\n                          }\r\n                        >\r\n                          <LeftOutlined type=\"left\" />\r\n                        </Button>\r\n                      )}\r\n                      {this.props.data.length > tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"next\"\r\n                          onClick={(e) => {\r\n                            this.handleWithoutLogin(\r\n                              e,\r\n                              \"next\",\r\n                              this.props.data[this.props.tourStep - 1].type,\r\n                              this.props.tourStep\r\n                            );\r\n                          }}\r\n                        >\r\n                          <RightOutlined type=\"right\" />\r\n                        </Button>\r\n                      )}\r\n                      {this.props.data.length === tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"next\"\r\n                          onClick={() => this.onClickToDoneTour(res, tourStep)}\r\n                        >\r\n                          <RightOutlined type=\"right\" />\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </Popover>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebUserTour;\r\n",["499","500"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/createModalComponent.js",["501","502","503","504","505"],"import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Form, Input } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport $ from \"jquery\";\r\n\r\nimport {\r\n  commonTypeSelectonButton,\r\n  commonInitialRenderFunction,\r\n  commonTooltipFormFunction,\r\n  handleFileChange,\r\n  commonFileUploadFunction,\r\n} from \"../common\";\r\n\r\nlet modalOpen;\r\n\r\nclass CreateModalComponent extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      web_url: \"\",\r\n      trailStatus: \"text\",\r\n      fileName: \"\",\r\n      fileLoading: false,\r\n      showPreview: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.scrollTo(0, 0);\r\n    const scrollTop = $(window).scrollTop();\r\n    $(\"html, body\").animate({ scrollTop: scrollTop });\r\n\r\n    // Set trail status state\r\n    this.setState({ trailStatus: this.props.stepType });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.stepType !== this.props.stepType) {\r\n      // Set trail status state\r\n      this.setState({ trailStatus: this.props.stepType });\r\n    }\r\n  }\r\n\r\n  onChangeToInput = (e) => {\r\n    e.stopPropagation();\r\n\r\n    // this.setState({ [e.target.name]: e.target.value });\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  onTitleChangeHandler = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  onDescriptionChangeHandler = (value) => {\r\n    this.setState({ description: value });\r\n  };\r\n\r\n  onAddStep = (values) => {\r\n    let obj;\r\n    const { trailStatus, title, web_url, description } = this.state;\r\n\r\n    if (trailStatus === \"text\") {\r\n      // this.props.form.validateFields((err, values) => {\r\n      //     if (err || values.title === '' || (!description || description === '')) {\r\n      //         return;\r\n      //     }\r\n\r\n      obj = {\r\n        url: document.URL,\r\n        type: \"modal\",\r\n        mediaType: \"modal\",\r\n        title: values.title,\r\n        description,\r\n      };\r\n      // });\r\n    } else {\r\n      if (this.state.title === \"\" && this.state.web_url === \"\") {\r\n        return;\r\n      }\r\n\r\n      obj = {\r\n        url: document.URL,\r\n        type: \"modal\",\r\n        mediaType: trailStatus,\r\n        title,\r\n        web_url,\r\n      };\r\n    }\r\n\r\n    this.props.onSave(obj);\r\n    this.toggle();\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      web_url: \"\",\r\n      fileName: \"\",\r\n      trailStatus: \"text\",\r\n    });\r\n\r\n    this.props.toggle(false);\r\n  };\r\n\r\n  onSelectOption = (status) => {\r\n    this.setState({ trailStatus: status });\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ fileLoading: true });\r\n\r\n    commonFileUploadFunction(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          showPreview: true,\r\n          fileLoading: false,\r\n          fileName: file.name,\r\n          web_url: data.response.result.fileUrl,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ fileLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { trailStatus } = this.state;\r\n\r\n    // Call common hadler file change function in common file\r\n    handleFileChange(e, trailStatus, this.uploadFile);\r\n  };\r\n\r\n  selectedTooltipForm = (mediaType) => {\r\n    const { trailStatus, title, fileName, fileLoading } = this.state;\r\n\r\n    // Common tooltip form function imported from common file\r\n    return commonTooltipFormFunction(\r\n      trailStatus,\r\n      title,\r\n      fileName,\r\n      fileLoading,\r\n      this.toggle,\r\n      this.onAddStep,\r\n      this.onChangeToInput,\r\n      this.handleChange,\r\n      mediaType\r\n    );\r\n  };\r\n\r\n  onButtonCloseHandler = async (e) => {\r\n    // Call parent component function to close tooltip preview\r\n    await this.props.closeButtonHandler(e);\r\n  };\r\n\r\n  render() {\r\n    modalOpen = this.props.open;\r\n    const { title, description, fileName, fileLoading } = this.state;\r\n    let tourType = \"modal\";\r\n\r\n    let tooltipForm = commonInitialRenderFunction(\r\n      this.state.trailStatus,\r\n      title,\r\n      description,\r\n      this.onTitleChangeHandler,\r\n      this.onDescriptionChangeHandler,\r\n      this.toggle,\r\n      this.onAddStep,\r\n      this.selectedTooltipForm\r\n    );\r\n\r\n    const { trailStatus } = this.state;\r\n\r\n    if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.getElementById(\"my-extension-root-flip\").style.display ===\r\n      \"none\"\r\n    ) {\r\n      modalOpen = false;\r\n    } else if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.getElementById(\"my-extension-root-flip\").style.display ===\r\n      \"block\"\r\n    ) {\r\n      modalOpen = true;\r\n    }\r\n\r\n    $(document).ready(() => {\r\n      const modalDiv = document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\".trail_create_modal\");\r\n      if (modalDiv) {\r\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\r\n            \"class\",\r\n            \"trial_modal_show trial_create_modal_main\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    let headerTitle = \"\";\r\n\r\n    if (trailStatus === \"video\") {\r\n      headerTitle = \"Video\";\r\n    } else if (trailStatus === \"audio\") {\r\n      headerTitle = \"Audio\";\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          centered={true}\r\n          isOpen={modalOpen}\r\n          toggle={this.onButtonCloseHandler}\r\n          className={`tr_modal trail_create_modal ${\r\n            this.props.screenSize() && \"responsive_modal\"\r\n          }`}\r\n          container={document\r\n            .getElementById(\"extension-div\")\r\n            .shadowRoot.querySelector(\".modal-open\")}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggle}\r\n            className=\"tr_modal_trail_modal_header\"\r\n          >\r\n            Create {headerTitle} Modal\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {commonTypeSelectonButton(\r\n              trailStatus,\r\n              this.onSelectOption,\r\n              tooltipForm,\r\n              fileName,\r\n              fileLoading,\r\n              tourType\r\n            )}\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateModalComponent;\r\n",["506","507"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/previewModalComponent.js",["508","509","510","511","512","513","514"],"import React from \"react\";\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { CloseOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport $ from \"jquery\";\r\n\r\nimport AudioTour from \"../audioTour\";\r\nimport { stopMediaPlaying } from \"../../common/stopePlayingMedia\";\r\nimport {\r\n  addTrailitLogo,\r\n  removeTrailitLogo,\r\n} from \"../../common/trailitLogoInPreview\";\r\nimport ContinueTourConfirmation from \"./ContinueTourConfirmation\";\r\n\r\nconst chrome = window.chrome;\r\nclass PreviewModalComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      open: true,\r\n      autoPlay: true,\r\n    };\r\n  }\r\n\r\n  handleWithoutLogin = (event, tourSide, type, currentStep) => {\r\n    chrome.storage.local.get([\"isGuest\"], (items) => {\r\n      if (currentStep % 3 === 0 && tourSide === \"next\" && items.isGuest) {\r\n        this.props.previewModalToggle();\r\n      } else {\r\n        this.onClickToManagePopoverButton(event, tourSide);\r\n      }\r\n    });\r\n  };\r\n\r\n  continueTrailWithoutLogin = (event, tourSide) => {\r\n    this.onClickToManagePopoverButton(event, tourSide);\r\n    this.props.previewModalToggle();\r\n  };\r\n\r\n  toSignInWithoutLogin = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const scrollTop = $(window).scrollTop();\r\n    $(\"html, body\").animate({ scrollTop: scrollTop });\r\n\r\n    if (this.props.data[this.props.tourStep - 1].url !== document.URL) {\r\n      window.location.href = this.props.data[this.props.tourStep - 1].url;\r\n    }\r\n\r\n    // this.setState({ autoPlay: true });\r\n\r\n    // setTimeout(() => {\r\n    //     document.querySelectorAll('video').forEach(res => {\r\n    //         console.log('res', res);\r\n    //         if(res.className !== \"preview-video\") {\r\n    //             res.pause()\r\n    //         }\r\n    //     })\r\n    // }, 1000);\r\n\r\n    // chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n    //     console.log('items', items);\r\n    //     if(items && (!items.AutoPlayMediaToggle || items.AutoPlayMediaToggle)) {\r\n    //         autoplay = items.AutoPlayMediaToggle;\r\n    //         this.setState({ autoPlay: items.AutoPlayMediaToggle });\r\n    //     }\r\n\r\n    // });\r\n\r\n    // Add modal class to dom\r\n    this.addModalClass();\r\n\r\n    // if (document.readyState === 'loading') {\r\n    //     console.log('state loading');\r\n    // } else if (document.readyState === 'complete') {\r\n    //     console.log('state complete');\r\n    // }\r\n\r\n    if (document.readyState === \"complete\") {\r\n      $(document).ready(() => {\r\n        // Call toggle website media\r\n        this.toggleWebSitesMedia();\r\n      });\r\n    } else if (\r\n      document.readyState === \"interactive\" &&\r\n      document.URL.includes(\"https://www.youtube.com/\")\r\n    ) {\r\n      // document.body.onload = function () { https://www.dailymotion.com/\r\n      //     console.log('body is loaded!!!!');\r\n      //     // Call toggle website media\r\n      //     this.toggleWebSitesMedia();\r\n      // };\r\n      $(document).ready(() => {\r\n        // Call toggle website media\r\n        this.toggleWebSitesMedia();\r\n      });\r\n    } else if (document.URL.includes(\"https://twitter.com/\")) {\r\n      $(document).ready(() => {\r\n        // Call toggle website media\r\n        this.toggleWebSitesMedia();\r\n      });\r\n    } else {\r\n      $(window).on(\"load\", () => {\r\n        // Call toggle website media\r\n        this.toggleWebSitesMedia();\r\n      });\r\n\r\n      // document.body.onload = async function () {\r\n      //     console.log('in body onload');\r\n      //     // Call toggle website media\r\n      //     await this.toggleWebSitesMedia();\r\n      // };\r\n    }\r\n\r\n    // Add trailit logo\r\n    addTrailitLogo();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n    //     if(prevState.autoPlay !== items.AutoPlayMediaToggle) {\r\n    //         this.setState({ autoPlay: items.AutoPlayMediaToggle });\r\n    //     }\r\n    // });\r\n\r\n    // this.setState({ autoPlay: true });\r\n\r\n    // Add modal class to dom\r\n    this.addModalClass();\r\n\r\n    // Call toggle website media\r\n    this.toggleWebSitesMedia();\r\n  }\r\n\r\n  /**\r\n   * Manage popover web user tour button\r\n   * @data tooltip data\r\n   * @step tooltip current step\r\n   */\r\n  onClickToManagePopoverButton = async (event, tourSide) => {\r\n    let { tourStep } = this.props;\r\n    let step = tourSide === \"prev\" ? tourStep - 1 : tourStep + 1;\r\n\r\n    this.props.onNextClick();\r\n\r\n    await this.toggle();\r\n\r\n    // console.log(\"this.props.data[step - 1]ccccc\", this.props.data[step - 1])\r\n    if (this.props.data[step - 1].url === document.URL) {\r\n      let type = this.props.data[step - 1].type;\r\n      this.props.tour(step, type, tourSide);\r\n    } else {\r\n      // Set loading true to show overlay\r\n      this.props.setLoadingState(true);\r\n\r\n      let type = this.props.data[step - 1].type;\r\n      await this.props.tour(step, type, tourSide);\r\n      window.location.href = this.props.data[step - 1].url;\r\n    }\r\n    // if(document.querySelector('#my-extension-root-flip').classList.value ===\"\") {\r\n    //     document.querySelector('#my-extension-root-flip').classList.remove('trail_flip_box');\r\n    // }\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  onClickToDoneTour = (data, step) => {\r\n    let { tourSteps } = this.props;\r\n    this.setState({ open: false });\r\n    if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\").classList.value ===\r\n      \"\"\r\n    ) {\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\")\r\n        .classList.remove(\"trail_flip_box\");\r\n    }\r\n    chrome.storage.local.set({ closeContinue: false });\r\n    this.props.toggle({ removePreviewTrails: true });\r\n  };\r\n\r\n  onButtonCloseHandler = async (e) => {\r\n    // Call parent component function to close tooltip preview\r\n    if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\").classList.value ===\r\n      \"\"\r\n    ) {\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\")\r\n        .classList.remove(\"trail_flip_box\");\r\n    }\r\n    await this.props.closeButtonHandler(e);\r\n  };\r\n\r\n  toggle = () => {\r\n    if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\").classList.value ===\r\n      \"\"\r\n    ) {\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\"#my-extension-root-flip\")\r\n        .classList.remove(\"trail_flip_box\");\r\n    }\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  addModalClass = () => {\r\n    $(document).ready(() => {\r\n      const modalDiv = document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\".trail_preview_modal\");\r\n\r\n      if (modalDiv) {\r\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\r\n            \"class\",\r\n            \"trial_modal_show trail_preview_modal_main\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  toggleWebSitesMedia = () => {\r\n    const { tourStep, data } = this.props;\r\n    if (\r\n      data[tourStep - 1].mediaType &&\r\n      data[tourStep - 1].mediaType === \"video\"\r\n    ) {\r\n      // Stop playing websites audio or video\r\n      stopMediaPlaying();\r\n    }\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // Remove trailit log\r\n    removeTrailitLogo();\r\n  }\r\n\r\n  render() {\r\n    const { open, autoPlay } = this.state;\r\n    const { tourStep, tourSide, play } = this.props;\r\n    const { title, description } = this.props.data[tourStep - 1];\r\n    let preview = null;\r\n\r\n    if (\r\n      this.props.data[tourStep - 1].mediaType &&\r\n      this.props.data[tourStep - 1].mediaType === \"video\"\r\n    ) {\r\n      preview = (\r\n        <div className=\"tr_preview_video_bx\">\r\n          <video\r\n            className=\"preview-video\"\r\n            disablePictureInPicture\r\n            controlsList=\"nodownload\"\r\n            controls\r\n            allow=\"autoplay\"\r\n            autoPlay={autoPlay}\r\n          >\r\n            <source src={this.props.data[tourStep - 1].web_url} />\r\n          </video>\r\n        </div>\r\n      );\r\n    } else if (\r\n      this.props.data[tourStep - 1].mediaType &&\r\n      this.props.data[tourStep - 1].mediaType === \"audio\"\r\n    ) {\r\n      preview = (\r\n        <AudioTour\r\n          data={this.props.data}\r\n          toggle={this.props.toggle}\r\n          tourStep={this.props.tourStep}\r\n          tour={this.props.tour}\r\n          previewInTooltip\r\n        />\r\n      );\r\n    } else if (\r\n      this.props.data[tourStep - 1].mediaType &&\r\n      this.props.data[tourStep - 1].mediaType === \"image\"\r\n    ) {\r\n      preview = (\r\n        <div className=\"tr_preview_picture_bx\">\r\n          <img\r\n            className=\"preview-picture\"\r\n            src={this.props.data[tourStep - 1].web_url}\r\n            alt=\"preview-img\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.previewModalRef && (\r\n          <ContinueTourConfirmation\r\n            open={this.props.previewModalRef}\r\n            toggle={this.props.previewModalToggle}\r\n            continueTrail={this.continueTrailWithoutLogin}\r\n            toSignIn={this.toSignInWithoutLogin}\r\n          />\r\n        )}\r\n        <Modal\r\n          isOpen={open}\r\n          centered={true}\r\n          toggle={this.onButtonCloseHandler}\r\n          container={document\r\n            .getElementById(\"extension-div\")\r\n            .shadowRoot.querySelector(\".modal-open\")}\r\n          className={`tr_modal trail_preview_modal trail_tooltip_done ${\r\n            this.props.data[tourStep - 1].mediaType &&\r\n            this.props.data[tourStep - 1].mediaType === \"text\"\r\n              ? \"trail_text_only\"\r\n              : \"\" ||\r\n                (this.props.data[tourStep - 1].mediaType &&\r\n                  this.props.data[tourStep - 1].mediaType === \"video\")\r\n              ? \"tr_video_only\"\r\n              : \"\" ||\r\n                (this.props.data[tourStep - 1].mediaType &&\r\n                  this.props.data[tourStep - 1].mediaType === \"image\")\r\n              ? \"tr_picture_only\"\r\n              : \"\" ||\r\n                (this.props.data[tourStep - 1].mediaType &&\r\n                  this.props.data[tourStep - 1].mediaType === \"audio\")\r\n              ? \"tr_audio_only\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          <ModalBody>\r\n            {this.props.data.length > 0 && (\r\n              <Button\r\n                type=\"link\"\r\n                disabled={this.props.onDone}\r\n                className=\"trial_button_close\"\r\n                onClick={this.onButtonCloseHandler}\r\n              >\r\n                <CloseOutlined type=\"close\" />\r\n              </Button>\r\n            )}\r\n            <div className=\"trail_modal_content_main\">\r\n              <div className=\"trail_modal_title\">{title}</div>\r\n              {\r\n                <span\r\n                  className=\"trail_modal_content\"\r\n                  dangerouslySetInnerHTML={{ __html: description }}\r\n                ></span>\r\n              }\r\n              {preview}\r\n            </div>\r\n\r\n            <div className=\"btn-wrap\">\r\n              {1 < tourStep && (\r\n                <Button\r\n                  type=\"link\"\r\n                  disabled={this.props.onDone}\r\n                  className=\"prev\"\r\n                  onClick={(e) => this.onClickToManagePopoverButton(e, \"prev\")}\r\n                >\r\n                  <LeftOutlined type=\"left\" />\r\n                </Button>\r\n              )}\r\n              {this.props.data.length > tourStep && (\r\n                <Button\r\n                  type=\"link\"\r\n                  disabled={this.props.onDone}\r\n                  className=\"next\"\r\n                  onClick={(e) => {\r\n                    this.handleWithoutLogin &&\r\n                      this.handleWithoutLogin(\r\n                        e,\r\n                        \"next\",\r\n                        this.props.data[this.props.tourStep - 1].type,\r\n                        this.props.tourStep\r\n                      );\r\n                  }}\r\n                >\r\n                  <RightOutlined type=\"right\" />\r\n                </Button>\r\n              )}\r\n              {this.props.data.length === tourStep && (\r\n                <Button\r\n                  type=\"link\"\r\n                  disabled={this.props.onDone}\r\n                  className=\"next\"\r\n                  onClick={() =>\r\n                    this.onClickToDoneTour(\r\n                      this.props.data[tourStep - 1],\r\n                      tourStep\r\n                    )\r\n                  }\r\n                >\r\n                  <RightOutlined type=\"right\" />\r\n                </Button>\r\n              )}\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PreviewModalComponent;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/defaultButton.js",[],["515","516"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/draggable.js",[],["517","518"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/ContinueTourConfirmation.js",[],["519","520"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/settingsComponents.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/wallet-account.js",["521","522"],"import { Account } from './account';\nimport { SCHEMA, createTransaction } from './transaction';\nimport { KeyPair, serialize, PublicKey } from './utils';\nimport { base_decode } from './utils/serialize';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\nexport class WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * walletAccount.isSignedIn();\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * walletAccount.getAccountId();\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param contractId The NEAR account where the contract is deployed\n     * @param title Name of the application that will appear as requesting access in Wallet\n     * @param successUrl Optional url to redirect upon success\n     * @param failureUrl Optional url to redirect upon failure\n     *\n     * @example\n     *   walletAccount.requestSignIn(\n     *     account-with-deploy-contract,\n     *     \"Guest Book\",\n     *     \"https://example.com/success.html\",\n     *     \"https://example.com/error.html\");\n     */\n    requestSignIn(contractId, title, successUrl, failureUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getAccountId() || (yield this._keyStore.getKey(this._networkId, this.getAccountId()))) {\n                return Promise.resolve();\n            }\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('title', title);\n            newUrl.searchParams.set('contract_id', contractId);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            newUrl.searchParams.set('app_url', currentUrl.origin);\n            const accessKey = KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions\n     * @param transactions Array of Transaction objects that will be requested to sign\n     * @param callbackUrl The url to navigate to after the user is prompted to sign\n     */\n    requestSignTransactions(transactions, callbackUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL('sign', this._walletBaseUrl);\n            newUrl.searchParams.set('transactions', transactions\n                .map(transaction => serialize.serialize(SCHEMA, transaction))\n                .map(serialized => Buffer.from(serialized).toString('base64'))\n                .join(','));\n            newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle situation when access key is not added\n            if (accountId && publicKey) {\n                this._authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n                yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     *\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexport const WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using (@link WalletConnection) when no local key is available.\n */\nclass ConnectedWalletAccount extends Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, receiverId, actions);\n                }\n                catch (e) {\n                    // TODO: Use TypedError when available\n                    if (e.message.includes('does not have enough balance')) {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const publicKey = PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + 1;\n            const status = yield this.connection.provider.status();\n            const blockHash = base_decode(status.sync_info.latest_block_hash);\n            const transaction = createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions([transaction], window.location.href);\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === \"0\") && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\n",["523","524"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account_creator.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account.js",["525","526","527","528","529","530","531","532","533"],"import BN from 'bn.js';\nimport { transfer, createAccount, signTransaction, deployContract, addKey, functionCall, fullAccessKey, functionCallAccessKey, deleteKey, stake, deleteAccount } from './transaction';\nimport { TypedError, ErrorContext } from './providers';\nimport { base_decode, base_encode } from './utils/serialize';\nimport { PublicKey } from './utils/key_pair';\nimport { PositionalArgsError } from './utils/errors';\nimport { parseRpcError } from './utils/rpc_errors';\nimport exponentialBackoff from './utils/exponential-backoff';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nconst DEFAULT_FUNC_CALL_GAS = new BN('30000000000000');\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default number of retries before giving up on a transaction.\nconst TX_STATUS_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_STATUS_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_STATUS_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\n/**\n * More information on [the Account spec](https://nomicon.io/DataStructures/Account.html)\n */\nexport class Account {\n    constructor(connection, accountId) {\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    get ready() {\n        return this._ready || (this._ready = Promise.resolve(this.fetchState()));\n    }\n    /**\n     * Helper function when getting the state of a NEAR account\n     * @returns Promise<void>\n     */\n    fetchState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._state = yield this.connection.provider.query(`account/${this.accountId}`, '');\n        });\n    }\n    /**\n     * Returns the state of a NEAR account\n     * @returns {Promise<AccountState>}\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            return this._state;\n        });\n    }\n    printLogsAndFailures(contractId, results) {\n        for (const result of results) {\n            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n            this.printLogs(contractId, result.logs, '\\t');\n            if (result.failure) {\n                console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n            }\n        }\n    }\n    printLogs(contractId, logs, prefix = '') {\n        for (const log of logs) {\n            console.log(`${prefix}Log [${contractId}]: ${log}`);\n        }\n    }\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const status = yield this.connection.provider.status();\n            const nonce = ++accessKey.nonce;\n            // TODO: get latest_block_hash from block query using `final` finality\n            return yield signTransaction(receiverId, nonce, actions, base_decode(status.sync_info.latest_block_hash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions The transaction [Action as described in the spec](https://nomicon.io/RuntimeSpec/Actions.html).\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    signAndSendTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_STATUS_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                        try {\n                            return yield this.connection.provider.sendTransaction(signedTx);\n                        }\n                        catch (error) {\n                            if (error.type === 'TimeoutError') {\n                                console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} as it has timed out`);\n                                return null;\n                            }\n                            throw error;\n                        }\n                    }));\n                    if (!result) {\n                        throw new TypedError(`Exceeded ${TX_STATUS_RETRY_NUMBER} attempts for transaction ${base_encode(txHash)}.`, 'RetriesExceeded', new ErrorContext(base_encode(txHash)));\n                    }\n                    return result;\n                }\n                catch (error) {\n                    if (error.message.match(/Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/)) {\n                        console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    error.context = new ErrorContext(base_encode(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                throw new TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n                if (it.outcome.logs.length ||\n                    (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                    return acc.concat({\n                        'receiptIds': it.outcome.receipt_ids,\n                        'logs': it.outcome.logs,\n                        'failure': typeof it.outcome.status.Failure != 'undefined' ? parseRpcError(it.outcome.status.Failure) : null\n                    });\n                }\n                else\n                    return acc;\n            }, []);\n            this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n            if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw parseRpcError(result.status.Failure);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                return null;\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const accessKey = yield this.connection.provider.query(`access_key/${this.accountId}/${publicKey.toString()}`, '');\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                // TODO: Check based on .type when nearcore starts returning query errors in structured format\n                if (e.message.includes('does not exist while viewing')) {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add while signing and sending the transaction\n     * @param data The compiled contract code\n     * @returns {Promise<Account>}\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction(contractId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey), deployContract(data)]);\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(receiverId, [transfer(amount)]);\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction(newAccountId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     * @returns void\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteAccount(beneficiaryId)]);\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deployContract(data)]);\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n     *  or `Uint8Array` instance which represents bytes passed as is.\n     * @param gas max amount of gas that method call can use\n      * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    functionCall(contractId, methodName, args, gas, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            return this.signAndSendTransaction(contractId, [functionCall(methodName, args, gas || DEFAULT_FUNC_CALL_GAS, amount)]);\n        });\n    }\n    /**\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     * @returns {Promise<FinalExecutionOutcome>}\n     * TODO: expand this API to support more options.\n     */\n    addKey(publicKey, contractId, methodName, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let accessKey;\n            if (contractId === null || contractId === undefined || contractId === '') {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, !methodName ? [] : [methodName], amount);\n            }\n            return this.signAndSendTransaction(this.accountId, [addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteKey(PublicKey.from(publicKey))]);\n        });\n    }\n    /**\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [stake(amount, PublicKey.from(publicKey))]);\n        });\n    }\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new PositionalArgsError();\n        }\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @returns {Promise<any>}\n     */\n    viewFunction(contractId, methodName, args, { parse = parseJsonFromRawResponse } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            const result = yield this.connection.provider.query(`call/${contractId}/${methodName}`, base_encode(JSON.stringify(args)));\n            if (result.logs) {\n                this.printLogs(contractId, result.logs);\n            }\n            return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n        });\n    }\n    /**\n     * @returns array of {access_key: AccessKey, public_key: PublicKey} items.\n     */\n    getAccessKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query(`access_key/${this.accountId}`, '');\n            // A breaking API change introduced extra information into the\n            // response, so it now returns an object with a `keys` field instead\n            // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n            if (Array.isArray(response)) {\n                return response;\n            }\n            return response.keys;\n        });\n    }\n    /**\n     * Returns account details in terms of authorized apps and transactions\n     * @returns {Promise<any>}\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const result = { authorizedApps: [], transactions: [] };\n            accessKeys.map((item) => {\n                if (item.access_key.permission.FunctionCall !== undefined) {\n                    const perm = item.access_key.permission.FunctionCall;\n                    result.authorizedApps.push({\n                        contractId: perm.receiver_id,\n                        amount: perm.allowance,\n                        publicKey: item.public_key,\n                    });\n                }\n            });\n            return result;\n        });\n    }\n    /**\n     * Returns calculated account balance\n     * @returns {Promise<AccountBalance>}\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const genesisConfig = yield this.connection.provider.experimental_genesisConfig();\n            const state = yield this.state();\n            const costPerByte = new BN(genesisConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = new BN(state.storage_usage).mul(costPerByte);\n            const staked = new BN(state.locked);\n            const totalBalance = new BN(state.amount).add(staked);\n            const availableBalance = totalBalance.sub(BN.max(staked, stateStaked));\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/confirmPassword.js",["534","535","536"],"import React from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass ConfirmPassword extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('Received values of form: ', values);\r\n\t};\r\n\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Set Password</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">Please enter your password to login into the Trailit account.</div>\r\n\t\t\t\t<div className=\"tr_label\">Enter Password</div>\r\n\t\t\t\t<Form onSubmit={this.onClickToSubmit}>\r\n\t\t\t\t\t<Form.Item name=\"password\" rules={[{ required: true, message: 'Please input Password!' }]}>\r\n\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t\t{/* {getFieldDecorator('password', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input Password!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item name=\"ConfirmPassword\" rules={[{ required: true, message: 'Please input Confirm Password!' }]}>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('ConfirmPassword', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input Confirm Password!' }],\r\n\t\t\t\t\t\t})(<Input type=\"password\" placeholder=\"Confirm Password\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Confirm Password\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ConfirmPassword;","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/web.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/serialize.js",["537","538","539","540"],"import bs58 from 'bs58';\nimport BN from 'bn.js';\n// TODO: Make sure this polyfill not included when not required\nimport * as encoding from 'text-encoding-utf-8';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\n\nexport function base_encode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58.encode(Buffer.from(value));\n}\n\nexport function base_decode(value) {\n    return Buffer.from(bs58.decode(value));\n}\n\nconst INITIAL_LENGTH = 1024;\n\nexport class BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\n\n/// Binary encoder.\nexport class BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybe_resize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    write_u8(value) {\n        this.maybe_resize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    write_u32(value) {\n        this.maybe_resize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    write_u64(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 8)));\n    }\n    write_u128(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 16)));\n    }\n    write_buffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    write_string(str) {\n        this.maybe_resize();\n        const b = Buffer.from(str, 'utf8');\n        this.write_u32(b.length);\n        this.write_buffer(b);\n    }\n    write_fixed_array(array) {\n        this.write_buffer(Buffer.from(array));\n    }\n    write_array(array, fn) {\n        this.maybe_resize();\n        this.write_u32(array.length);\n        for (const elem of array) {\n            this.maybe_resize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\n\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\n\nexport class BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    read_u8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    read_u32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    read_u64() {\n        const buf = this.read_buffer(8);\n        return new BN(buf, 'le');\n    }\n    read_u128() {\n        const buf = this.read_buffer(16);\n        return new BN(buf, 'le');\n    }\n    read_buffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    read_string() {\n        const len = this.read_u32();\n        const buf = this.read_buffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    read_fixed_array(len) {\n        return new Uint8Array(this.read_buffer(len));\n    }\n    read_array(fn) {\n        const len = this.read_u32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_string\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_fixed_array\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_array\", null);\n\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write_${fieldType}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.write_fixed_array(value);\n            }\n            else {\n                writer.write_array(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null) {\n                        writer.write_u8(0);\n                    }\n                    else {\n                        writer.write_u8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.write_u8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nexport function serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\n\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read_${fieldType}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.read_fixed_array(fieldType[0]);\n            }\n            return reader.read_array(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.read_u8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n\n/// Deserializes object from bytes using schema.\nexport function deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/json-rpc-provider.js",["541","542","543","544","545","546","547"],"import depd from 'depd';\nimport { Provider } from './provider';\nimport { fetchJson } from '../utils/web';\nimport { TypedError, ErrorContext } from '../utils/errors';\nimport { base_encode } from '../utils/serialize';\nimport { parseRpcError } from '../utils/rpc_errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport { TypedError, ErrorContext };\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nexport class JsonRpcProvider extends Provider {\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Get the current network (ex. test, beta, etc…)\n     * @returns {Promise<Network>}\n     */\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                name: 'test',\n                chainId: 'test'\n            };\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @returns {Promise<NodeStatusResult>}\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#send-transaction-wait-until-done)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = signedTransaction.encode();\n            return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatus(txHash, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', [base_encode(txHash), accountId]);\n        });\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.nearprotocol.com/docs/interaction/rpc#query)\n     * @param path Path parameter for the RPC (ex. \"contract/my_token\")\n     * @param data Data parameter (ex. \"\", \"AQ4\", or whatever is needed)\n     */\n    query(path, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.sendJsonRpc('query', [path, data]);\n            if (result && result.error) {\n                throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#block)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            let { blockId } = blockQuery;\n            if (typeof blockQuery !== 'object') {\n                const deprecate = depd('JsonRpcProvider.block(blockId)');\n                deprecate('use `block({ blockId })` or `block({ finality })` instead');\n                blockId = blockQuery;\n            }\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details of a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#chunk)\n     * @param chunkId Hash of a chunk ID or shard ID\n     * @returns {Promise<ChunkResult>}\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by given block id.\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#validators)\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets EXPERIMENTAL_genesis_config from RPC\n     * @returns {Promise<GenesisConfig>}\n     */\n    experimental_genesisConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_genesis_config', []);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     * @deprecated Use `lightClientProof` instead\n     */\n    experimental_lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const deprecate = depd('JsonRpcProvider.experimental_lightClientProof(request)');\n            deprecate('use `lightClientProof` instead');\n            return yield this.lightClientProof(request);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                method,\n                params,\n                id: (_nextId++),\n                jsonrpc: '2.0'\n            };\n            const response = yield fetchJson(this.connection, JSON.stringify(request));\n            if (response.error) {\n                if (typeof response.error.data === 'object') {\n                    if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                        // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                        throw new TypedError(response.error.data.error_message, response.error.data.error_type);\n                    }\n                    else {\n                        throw parseRpcError(response.error.data);\n                    }\n                }\n                else {\n                    const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                    // NOTE: All this hackery is happening because structured errors not implemented\n                    // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                    if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')) {\n                        throw new TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                    }\n                    else {\n                        throw new TypedError(errorMessage);\n                    }\n                }\n            }\n            return response.result;\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/generated/rpc_error_types.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js",["548"],"import fs from 'fs';\nimport path from 'path';\nimport { promisify as _promisify } from 'util';\nimport { KeyPair } from '../utils/key_pair';\nimport { KeyStore } from './keystore';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst promisify = (fn) => {\n    if (!fn) {\n        return () => {\n            throw new Error('Trying to use unimplemented function. `fs` module not available in web build?');\n        };\n    }\n    return _promisify(fn);\n};\n\nconst exists = promisify(fs.exists);\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst unlink = promisify(fs.unlink);\nconst readdir = promisify(fs.readdir);\nconst mkdir = promisify(fs.mkdir);\n\nexport function loadJsonFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const content = yield readFile(filename);\n        return JSON.parse(content.toString());\n    });\n}\n\nfunction ensureDir(dir) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield mkdir(dir, { recursive: true });\n        }\n        catch (err) {\n            if (err.code !== 'EEXIST') {\n                throw err;\n            }\n        }\n    });\n}\n\nexport function readKeyFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const accountInfo = yield loadJsonFile(filename);\n        // The private key might be in private_key or secret_key field.\n        let privateKey = accountInfo.private_key;\n        if (!privateKey && accountInfo.secret_key) {\n            privateKey = accountInfo.secret_key;\n        }\n        return [accountInfo.account_id, KeyPair.fromString(privateKey)];\n    });\n}\n\nexport class UnencryptedFileSystemKeyStore extends KeyStore {\n    constructor(keyDir) {\n        super();\n        this.keyDir = path.resolve(keyDir);\n    }\n    /**\n     * Sets a storage item in a file, unencrypted\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield ensureDir(`${this.keyDir}/${networkId}`);\n            const content = { account_id: accountId, public_key: keyPair.getPublicKey().toString(), private_key: keyPair.toString() };\n            yield writeFile(this.getKeyFilePath(networkId, accountId), JSON.stringify(content));\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Find key / account id.\n            if (!(yield exists(this.getKeyFilePath(networkId, accountId)))) {\n                return null;\n            }\n            const accountKeyPair = yield readKeyFile(this.getKeyFilePath(networkId, accountId));\n            return accountKeyPair[1];\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield exists(this.getKeyFilePath(networkId, accountId))) {\n                yield unlink(this.getKeyFilePath(networkId, accountId));\n            }\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const network of yield this.getNetworks()) {\n                for (const account of yield this.getAccounts(network)) {\n                    yield this.removeKey(network, account);\n                }\n            }\n        });\n    }\n    getKeyFilePath(networkId, accountId) {\n        return `${this.keyDir}/${networkId}/${accountId}.json`;\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const files = yield readdir(this.keyDir);\n            const result = new Array();\n            files.forEach((item) => {\n                result.push(item);\n            });\n            return result;\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(yield exists(`${this.keyDir}/${networkId}`))) {\n                return [];\n            }\n            const files = yield readdir(`${this.keyDir}/${networkId}`);\n            return files\n                .filter(file => file.endsWith('.json'))\n                .map(file => file.replace(/.json$/, ''));\n        });\n    }\n    \n    toString() {\n        return `UnencryptedFileSystemKeyStore(${this.keyDir})`;\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/signup.js",["549","550","551","552","553","554","555","556","557","558","559","560","561","562","563","564"],"import React from 'react';\r\nimport { Form, Upload, Input, Button, Avatar  } from 'antd';\r\nimport Icon, { UploadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nimport { createTrailId } from '../common/axios';\r\nimport { handleFileUpload } from '../common/audAndVidCommon';\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\nclass Signup extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: \"\",\r\n      fileLoading: false,\r\n      profileImage: '',\r\n      filename: '',\r\n      isLoading: false\r\n    }\r\n  }\r\n\r\n  // Antd form reference\r\n  formRef = React.createRef();\r\n  \r\n  onFinishFailed = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n  \r\n  /**\r\n   * onClick to submit\r\n  */\r\n  onClickToSubmit = values => {\r\n    this.setState({ isLoading: true });\r\n\r\n    values = {...values, profileImage: this.state.profileImage};\r\n    axios.post(`${process.env.REACT_APP_MS1_URL}user/register`, values, {withCredentials: true})\r\n      .then(res => {\r\n        if(res.status == 200) {\r\n          const { responseCode, responseMessage } = res.data.data.response;\r\n          \r\n          if(responseCode === 208) {\r\n            this.setState({errors: responseMessage});\r\n            setTimeout(() => {\r\n              this.setState({errors: \"\"});\r\n            }, 3000)\r\n          } else {\r\n            const user_id = res.data.data.response.userProfile.id;\r\n            const trail_name = 'init trail';\r\n            this.setState({profileImage: '', filename: ''});\r\n            // Use user_id to create trail_id in user_tour table\r\n            // createTrailId(user_id, trail_name);\r\n            \r\n            this.props.clickToRedirect('userConfirmation');\r\n          }\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch(err => {\r\n        console.log('err', err);\r\n\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n  \r\n  /**\r\n\t * Validate password with regular expression\r\n\t*/\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    \r\n\t\tvar digit = /^(.*[0-9]+.*)$/;\r\n\t\tvar upper = /^(.*[A-Z]+.*)$/;\r\n\t\tvar lower = /^(.*[a-z]+.*  )$/;\r\n    \r\n    if (value && !digit.test(value)) {\r\n\t\t\tcallback('Password must contain one digit');\r\n\t\t}\r\n\r\n\t\tif (value && !upper.test(value)) {\r\n      callback\r\n      ('Password must contain one uppercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && !lower.test(value)) {\r\n\t\t\tcallback('Password must contain one lowercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && value.length <= 8) {\r\n\t\t\tcallback('Password must be 8 digit');\r\n\t\t}\r\n\r\n\t\tif (value && this.state.confirmDirty) {\r\n\t\t\tthis.formRef.validateFields(['confirm'], { force: true });\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t};\r\n\r\n  render() {    \r\n    return (\r\n      <div className={'trailMain'}>\r\n        <div className=\"tr_wrapper\">\r\n        {this.state.fileLoading && <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../images/loding1.png`)} /><img class=\"ring2\" src={require(`../images/loding2.png`)} /></div>\r\n        </div>}\r\n        <img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"trailit_icon\"/>\r\n          <div className=\"tr_title\">Welcome to the Trailit.</div>\r\n          <div className=\"tr_subtitle\">Enter your details to signup. If you have already signup than \r\n            <a href=\"javascript:;\" onClick={(e) => this.props.clickToRedirect('login')} className=\"tr_link fw_400\">Signin Now</a>\r\n          </div>\r\n          {this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n          <div className=\"tr_label\">Signup</div>\r\n          <Form \r\n            ref={ this.formRef }\r\n            name=\"normal_login\"\r\n            onFinish={ this.onClickToSubmit }\r\n            onFinishFailed={ this.onFinishFailed }\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{\r\n                type: 'email',\r\n                message: 'Please enter valid email!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter email!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('email', {\r\n                  rules: [\r\n                  {\r\n                    type: 'email',\r\n                    message: 'Please enter valid email!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter your email!',\r\n                  },\r\n                  ],\r\n                })(\r\n                <Input\r\n                  placeholder=\"Enter your email\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[{\r\n                required: true,\r\n                message: 'Please enter password!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter password!',\r\n                  }\r\n                ],\r\n              })(\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\" className=\"tr_input\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\" \r\n                htmlType=\"submit\" \r\n                className=\"tr_button\" \r\n                onClick={this.onClickToSubmit}\r\n                disabled={ this.state.isLoading }\r\n              >\r\n                Signup Now\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/forgotPassword.js",["565"],"import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nclass ForgotPassword extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('Received values of form: ', values);\r\n\t};\r\n\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Forgot Password?</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">Enter your email to find your account</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item name=\"username\" rules={[{ required: true, message: 'Please input your Email!' }]}>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your Email!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ForgotPassword;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/getBalance.js",["566"],"const nearAPI = require('../near-api-js/common-index.js');\nconst config = require('./config.json');\n// const account = 'testuser1.testnet';\nconst sender = '3piivr9bo.testnet';\nconst receiver = 'testuser1.testnet';\n\nexport async function getBalance() {\n  const provider = new nearAPI.providers.JsonRpcProvider(config.nodeUrl);\n  const state = await provider.query(`account/${sender}`, '');\n  // console.log(`Account ID: ${sender}`);\n  // console.log(`Balance: ${nearAPI.utils.format.formatNearAmount(state.amount, 4)}`);\n  return nearAPI.utils.format.formatNearAmount(state.amount, 4);\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileEdit.js",["567"],"import React, { PureComponent } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport { isValidated } from \"./validation\";\r\nimport { UpdateSingleTrail } from \"../../common/axios\";\r\nimport { handleFileUpload } from \"../../common/audAndVidCommon\";\r\n\r\nconst chrome = window.chrome;\r\nclass UserProfileEdit extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryList: [],\r\n      cover_image_url: \"\",\r\n      trail_categor_id: \"\",\r\n      trail_description: \"\",\r\n      trail_id: \"\",\r\n      trail_title: \"\",\r\n      trail_user_status: \"\",\r\n      cover_image_name: \"\",\r\n      errors: {},\r\n      isSubmit: false,\r\n      isLoading: false,\r\n      fileLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // let categoryResult = await getAllCategory();\r\n    // if(categoryResult.status == 200) {\r\n    //     this.setState({categoryList: categoryResult.data.response});\r\n    // }\r\n\r\n    const { data, categoryList } = this.props;\r\n\r\n    this.setState({\r\n      categoryList: categoryList,\r\n      cover_image_url: data.cover_image_url,\r\n      trail_categor_id: data.trail_categor_id,\r\n      trail_description: data.trail_description,\r\n      trail_id: data.trail_id,\r\n      trail_title: data.trail_name,\r\n      trail_user_status: data.trail_user_status,\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, prevState) {\r\n    const { data, categoryList } = nextProps;\r\n\r\n    this.setState({\r\n      categoryList: categoryList,\r\n      cover_image_url: data.cover_image_url,\r\n      trail_categor_id: data.trail_categor_id,\r\n      trail_description: data.trail_description,\r\n      trail_id: data.trail_id,\r\n      trail_title: data.trail_name,\r\n      trail_user_status: data.trail_user_status,\r\n    });\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      const { errors } = isValidated(this.state);\r\n      this.setState({ errors });\r\n      // if(this.state.isSubmit) {\r\n      // }\r\n    });\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ isLoading: true });\r\n    handleFileUpload(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          cover_image_url: data.response.result.fileUrl,\r\n          cover_image_name: file.name,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    // const { tourType } = this.state;\r\n    const file = e.target.files[0];\r\n    // const fileType = file.type.split(\"/\");\r\n    e.target.value = null;\r\n    // Upload file function\r\n    this.uploadFile(file);\r\n  };\r\n\r\n  onCheckedUserPrivate = async (e) => {\r\n    if (e.target.value == null || e.target.value === \"\") {\r\n      e.target.value = \"public\";\r\n    }\r\n\r\n    let trail_user_status = e.target.value === \"public\" ? \"private\" : \"public\";\r\n\r\n    await this.setState({ trail_user_status: trail_user_status }, () => {\r\n      //   console.log(\"trail_user_statusfffffffff\", this.state.trail_user_status);\r\n    });\r\n  };\r\n\r\n  onChangeSelect = async (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      const { errors } = isValidated(this.state);\r\n      this.setState({ errors });\r\n    });\r\n  };\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      categoryList: [],\r\n      cover_image_url: \"\",\r\n      trail_categor_id: \"\",\r\n      trail_description: \"\",\r\n      trail_id: \"\",\r\n      trail_title: \"\",\r\n      trail_user_status: \"\",\r\n      cover_image_name: \"\",\r\n      errors: {},\r\n      isSubmit: false,\r\n      isLoading: false,\r\n      fileLoading: false,\r\n    });\r\n\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n\r\n  onClickToSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const { errors, isValid } = isValidated(this.state);\r\n\r\n    if (!isValid) {\r\n      this.setState({ errors });\r\n    } else {\r\n      this.setState({ isSubmit: true, isLoading: true });\r\n\r\n      chrome.storage.local.get(\r\n        [\"userData\"],\r\n        async function (items) {\r\n          // Update single trail function\r\n          const { data, status } = await UpdateSingleTrail(\r\n            items.userData._id,\r\n            this.state.trail_id,\r\n            this.state\r\n          );\r\n\r\n          this.setState({ isLoading: false });\r\n\r\n          if (status === 200) {\r\n            if (data.response.statusCode == 400) {\r\n              this.setState({\r\n                errors: { trail_already_exist: data.response.result },\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ errors: {} });\r\n              }, 2000);\r\n            } else {\r\n              this.props.getEditData(data.response.result);\r\n              this.onClear();\r\n              $(\"body\").attr(\"class\", \"\");\r\n            }\r\n          }\r\n        }.bind(this)\r\n      );\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      cover_image_url,\r\n      cover_image_name,\r\n      trail_categor_id,\r\n      trail_description,\r\n      trail_title,\r\n      trail_user_status,\r\n      errors,\r\n    } = this.state;\r\n    const { categoryList } = this.props;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalLeftBox\">\r\n        {isLoading && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img\r\n                class=\"ring1\"\r\n                src={require(`../../images/loding1.png`)}\r\n                alt=\"spinner-ring1\"\r\n              />\r\n              <img\r\n                class=\"ring2\"\r\n                src={require(`../../images/loding2.png`)}\r\n                alt=\"spinner-ring2\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"trailit_editZTitle trialit_mb4\">Edit Trail</div>\r\n        <form>\r\n          {errors.trail_already_exist !== undefined && (\r\n            <div className=\"trailit-already-exist-error\">\r\n              {errors.trail_already_exist}\r\n            </div>\r\n          )}\r\n          <div className=\"d-block\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"trailit_inputTitle trailit_mb3\"\r\n              placeholder=\"Trail Title\"\r\n              name=\"trail_title\"\r\n              value={trail_title}\r\n              onChange={this.onChangeInput}\r\n            />\r\n            {errors.trail_title !== undefined && (\r\n              <div className=\"trailit-validation-error\">\r\n                {errors.trail_title}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"d-block\">\r\n            <textarea\r\n              rows=\"5\"\r\n              className=\"trailit_inputIntro trailit_mb3\"\r\n              placeholder=\"Type Introduction here ...\"\r\n              name=\"trail_description\"\r\n              value={trail_description}\r\n              onChange={this.onChangeInput}\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"d-block\">\r\n            <select\r\n              className=\"trailit_selectBox trailit_mb3\"\r\n              name=\"trail_categor_id\"\r\n              value={trail_categor_id}\r\n              onChange={this.onChangeSelect}\r\n            >\r\n              <option value=\"\">Select your category</option>\r\n              {categoryList.map((res) => (\r\n                <option value={parseInt(res.trail_category_id)}>\r\n                  {res.trail_category_name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.trail_categor_id !== undefined && (\r\n              <div className=\"trailit-validation-error\">\r\n                {errors.trail_categor_id}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <label className=\"trailit_12700 d-block trailit_mb3\">\r\n            COVER IMAGE\r\n          </label>\r\n          <label className=\"trailit_12500 d-block trialit_mb1\">\r\n            {cover_image_name === \"\" || cover_image_url === \"\"\r\n              ? `Choose a photo that represents your trail. Max 8MB.`\r\n              : cover_image_name\r\n              ? cover_image_name\r\n              : cover_image_url}\r\n          </label>\r\n          <div className=\"trailit_uploadImage trialit_mb4\">\r\n            <input\r\n              type=\"file\"\r\n              name=\"media\"\r\n              accept=\"image/*\"\r\n              onChange={this.handleChange}\r\n            />\r\n            <label className=\"d-block\">Upload Image</label>\r\n          </div>\r\n          <label className=\"trailit_12700 d-block trailit_mb3\">\r\n            ADD MORE CONTENT\r\n          </label>\r\n          {/* <div className=\"d-flex\">\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/image.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Image</span>\r\n                        </label>\r\n                        </div>\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Video</span>\r\n                        </label>\r\n                        </div>\r\n                        <button type=\"button\" className=\"trailit_addMoreOther\">\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Other</span>\r\n                        </button>\r\n                    </div> */}\r\n          {/* <ul className=\"trailit_HashTagsList\">\r\n                        <li>Visual Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                        <li>Concept Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                    </ul>\r\n                    <div>\r\n                        <input type=\"text\" className=\"trailit_inputHashTags trailit_mb3\" placeholder=\"Hashtags\"/>\r\n                    </div> */}\r\n          <div className=\"d-block trailit_checkbox trailit_mb3\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"\"\r\n              value={trail_user_status}\r\n              checked={trail_user_status === \"private\"}\r\n              onClick={this.onCheckedUserPrivate}\r\n            />\r\n            <span></span>\r\n            <label>Make this trail private</label>\r\n            <button type=\"button\" className=\"trailit_deleteIcon\">\r\n              <img src={require(\"../../images/delete.svg\")} alt=\"delete\" />\r\n            </button>\r\n          </div>\r\n          <div className=\"trailit_userPanalFooterBox\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"trailit_btnGray\"\r\n              onClick={this.onClear}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className=\"trailit_btnPink\"\r\n              onClick={this.onClickToSubmit}\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfileEdit;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userCUSD.js",["568","569","570","571"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport { wallet } from \"../../common/celo\";\r\nimport SendTipForm from \"../../common/SendTipForm\";\r\nimport { sendTransection } from \"../../code/sendtx\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass userCUSD extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      privateKey: this.props.privateKey,\r\n      isSuccess: false,\r\n      setError: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({ privateKey: this.props.privateKey });\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  sendTip = async (toAddress, amount) => {\r\n    this.setState({ sendLoader: true });\r\n\r\n    const { privateKey } = this.state;\r\n    sendTransection(privateKey, toAddress, amount)\r\n      .then((res) => {\r\n        if (res && res.code && res.code === 400) {\r\n          throw new Error(res.err);\r\n        }\r\n\r\n        // Set is success state\r\n        this.setState({ isSuccess: true });\r\n\r\n        setTimeout(() => {\r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ isSuccess: false });\r\n        }, 5000);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n\r\n        this.setState({ setError: err.message });\r\n\r\n        setTimeout(() => {\r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ setError: false });\r\n        }, 5000);\r\n      });\r\n    // await wallet.transfer(this.state.toAddress, this.state.amount);\r\n    // let balance = await wallet.balance();\r\n    // this.setState({\r\n    //   toAddress: \"\",\r\n    //   amount: \"\",\r\n    //   balance,\r\n    //   sendLoader: false,\r\n    // });\r\n  };\r\n\r\n  onClear = () => {\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n  onSlide = () => {\r\n    this.setState({ slideBalance: !this.state.slideBalance });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, toAddress, amount, sendLoader } = this.state;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalLeftBox\">\r\n        {this.state.isSuccess ? (\r\n          <div className=\"tr_description\">\r\n            <p style={{ color: \"#0c8026\", textAlign: \"center\" }}>\r\n              Transaction completed successfully.\r\n            </p>\r\n          </div>\r\n        ) : !this.state.setError ? (\r\n          <SendTipForm\r\n            isLoading={isLoading}\r\n            sendLoader={sendLoader}\r\n            sendTip={this.sendTip}\r\n            onCancel={this.onClear}\r\n          />\r\n        ) : (\r\n          <div className=\"tr_description\">\r\n            <p style={{ color: \"#d21e1e\", textAlign: \"center\" }}>\r\n              {this.state.setError}\r\n            </p>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userCUSD;\r\n\r\n// {/* <div>\r\n//   { isLoading && (\r\n//     <div className=\"trailit_loaderBox\">\r\n//       <div class=\"trial_spinner\">\r\n//         <img class=\"ring1\" src={require(`../../images/loding1.png`)} alt=\"loader\" />\r\n//         <img class=\"ring2\" src={require(`../../images/loding2.png`)} alt=\"loader\" />\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n//   {/* <div className=\"tr_description\">\r\n//     <p>Microtipping enabled through Celo Blockchain cUSD</p>\r\n//   </div> */}\r\n//   <form>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your to address\"\r\n//         name=\"toAddress\"\r\n//         onChange={this.onChangeInput}\r\n//         value={toAddress}\r\n//       />\r\n//     </div>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your amount\"\r\n//         name=\"amount\"\r\n//         onChange={this.onChangeInput}\r\n//         value={amount}\r\n//       />\r\n//     </div>\r\n//     <div className=\"trailit_userPanalFooterBox\">\r\n//       <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>\r\n//         Cancel\r\n//       </button>\r\n//       <button\r\n//         type=\"submit\"\r\n//         onClick={this.sendTip}\r\n//         disabled={sendLoader}\r\n//         className=\"trailit_btnPink\"\r\n//       >\r\n//         {sendLoader ? \"Loading...\" : \"Send Tip\"}\r\n//       </button>\r\n//     </div>\r\n//   </form>\r\n// </div> */}\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/validation.js",["572"],"import _ from \"lodash\";\r\n\r\nexport const isValidated = (data) => {\r\n  const errors = {};\r\n  let isValid = false;\r\n\r\n  console.log(\"data\", data);\r\n\r\n  if (data.hasOwnProperty(\"trail_title\") && _.isEmpty(data.trail_title)) {\r\n    errors.trail_title = \"Please enter trail title\";\r\n  } else {\r\n    delete errors.trail_title;\r\n  }\r\n\r\n  if (\r\n    data.hasOwnProperty(\"trail_categor_id\") &&\r\n    _.isEmpty(data.trail_categor_id) &&\r\n    !Number(data.trail_categor_id)\r\n  ) {\r\n    errors.trail_categor_id = \"Please select category\";\r\n  } else {\r\n    delete errors.trail_categor_id;\r\n  }\r\n\r\n  return {\r\n    errors,\r\n    isValid: _.isEmpty(errors),\r\n  };\r\n};\r\n",["573","574"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/reportWebVitals.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/audAndVidCommon.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/axios.js",["575"],"import axios from \"./interceptor\";\r\nimport { get } from \"../AppUtill\";\r\n\r\n// Upload media files\r\nexport const uploadMediaFile = async (formData) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/uploadTrail_file_media`,\r\n    formData,\r\n    {\r\n      headers: {\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        \"Access-Control-Allow-Headers\": \"*\",\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        \"X-Content-Type-Options\": \"nosniff\",\r\n        \"Access-Control-Allow-Methods\": \"POST\",\r\n        Accept: \"application/json, text/plain, */*\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\n// Create trails\r\nexport const uploadTrails = async (trails) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/createTrailit_trail_data_tour`,\r\n    trails\r\n  );\r\n};\r\n\r\n// Get all trails\r\nexport const getTrails = async (userId) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trails_data_tour`\r\n  );\r\n};\r\n\r\n// For follow\r\nexport const followTrails = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourFollow/createTrailit_follow_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Get follow data of user\r\nexport const getFollowTrails = async () => {\r\n  // return await axios.post(\r\n  //   `${process.env.REACT_APP_MS4_URL}userTourFollow/readTrailits_follow_tour`,\r\n  //   data\r\n  // );\r\n\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/getTrailList?type=following&page=1&itemsPerPage=20`\r\n  );\r\n  // userTourDataDetail/getTrailList?type=following&page=1&itemsPerPage=20&loggedInId=6008389da0d1567ee8224390\r\n};\r\n\r\n// Unfollow trail\r\nexport const unFollowTrailOfUser = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourFollow/deleteTrailit_follow_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Get all notification\r\nexport const getAllNotification = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourNotification/readTrailits_notification_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Remove notification\r\nexport const updateNotification = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourNotification/updateTrailit_notification_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Update sorted array\r\nexport const arraySorting = async (data) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_MS4_URL}trailitSorting/sortTrailOrder`,\r\n    { data }\r\n  );\r\n};\r\n\r\n// Get all notification data\r\nexport const getAllUser = async () => {\r\n  return await axios.get(`${process.env.REACT_APP_MS2_URL}user/getAllUser`);\r\n};\r\n\r\n// Update flag in trail data table\r\nexport const updateTrailFlag = async (data) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/updateTrail_trail_data_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Create trail_id when user signup\r\nexport const createTrailId = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/createTrail_trail_user_tour`,\r\n    data\r\n  );\r\n};\r\n\r\n// Get trail_id of user\r\nexport const getTrailId = async (user_id) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/indexTrail_id/${user_id}`\r\n  );\r\n};\r\n\r\n// Get trail_id of user\r\nexport const getUserOneTrail = async (trail_id, screen) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trails_data_tours/${trail_id}/${screen}`\r\n  );\r\n  // return await axios.get(\r\n  //   `${process.env.REACT_APP_MS4_URL}userTourDataDetail/readTrailit_trails_data_tours/${user_id}/${trail_id}/${screen}`\r\n  // );\r\n};\r\n\r\n// Get followed trail data of user\r\nexport const getFollowedOneTrail = async (trail_id, author_id, loggedin_id) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/getTrailDataTourByTrailID`,\r\n    {\r\n      trail_id: trail_id,\r\n      user_id: author_id,\r\n      loggedin_id: loggedin_id,\r\n    }\r\n  );\r\n};\r\n\r\nexport const getTrailPublic = async (user_id, trail_id, steps) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/getLimitedStepsData/${trail_id}`\r\n  );\r\n};\r\n\r\n// Get trail_id of user\r\nexport const getUserSingleTrail = async () => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/fetchusertourdata`\r\n  );\r\n};\r\n\r\n// Get all category\r\nexport const getAllCategory = async () => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/getAllCategory`\r\n  );\r\n};\r\n\r\n// Update trail data\r\nexport const UpdateSingleTrail = async (user_id, trail_id, data) => {\r\n  return await axios.put(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/updateTrail_trail_user_tour/${trail_id}`,\r\n    data\r\n  );\r\n};\r\n\r\n// Update trail data\r\nexport const UpdateProfilePicture = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS1_URL}user/uploadUserProfilePic`,\r\n    data,\r\n    { withCredentials: true }\r\n  );\r\n};\r\n\r\n// Update Trail User Data\r\nexport const UpdateTrailData = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/UpdateTrailData`,\r\n    data\r\n  );\r\n};\r\n\r\n// Delete Trail\r\nexport const deleteTrail = async (trailId) => {\r\n  return await axios.delete(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/deleteTrailit_trail_data_tour/${trailId}`\r\n  );\r\n};\r\n\r\n// Update trail track\r\nexport const updateTrailTrack = async (data) => {\r\n  return await axios.post(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/addUpdateTrailTrack`,\r\n    data,\r\n    {\r\n      headers: {\r\n        Authorization: \"\",\r\n      },\r\n    }\r\n  );\r\n};\r\n\r\n// Get User data by username\r\nexport const getUserData = async (data) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}profileData/getProfileData/${data}`\r\n  );\r\n};\r\n\r\nexport const getSingleTrailData = async (trail_id, trail_data_id) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS4_URL}userTourDataDetail/getSingleStepData/${trail_id}/${trail_data_id}`\r\n  );\r\n};\r\n\r\n// Get user data\r\nexport const getUser = async (userId) => {\r\n  return await axios.get(\r\n    `${process.env.REACT_APP_MS1_URL}user/getOneUser/${userId}`\r\n  );\r\n};\r\n\r\n// Log user out\r\nexport const logout = async () => {\r\n  return await axios.get(`${process.env.REACT_APP_MS1_URL}user/logout`);\r\n};\r\n\r\n// Delete trail\r\nexport const deleteSingleTrail = async (trailId) => {\r\n  // https://trail.codezeros.com/trailit/api/v1/trailitUser/deleteSingleTrail/1366\r\n  return await axios.delete(\r\n    `${process.env.REACT_APP_MS4_URL}trailitUser/deleteSingleTrail/${trailId}`\r\n  );\r\n};\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/mySubscription.js",["576","577","578","579","580","581","582"],"import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport $ from 'jquery';\r\n\r\nimport { getAllUser } from '../common/axios'\r\nconst chrome = window.chrome;\r\n\r\nclass MySubscription extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\t\r\n\ttoggle = () => {\t\t\r\n        this.props.toggle(false);\r\n    };\r\n\t\r\n\trender() {\t\t\r\n\t\tconst { open, followerList } = this.props;\r\n\t\t\r\n\t\t$(document).ready(() => {\r\n\t\t\tconst modalDiv = document.querySelector('.tr_modal');\r\n\t\t\t\r\n\t\t\tif (modalDiv) {\r\n                if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n                    modalDiv.parentNode.parentNode.parentNode.setAttribute('class', 'trial_modal_show trial_create_modal_main');\r\n                }\r\n            }\r\n        });\r\n\t\t\r\n\t\treturn(\r\n            <React.Fragment>\r\n                <Modal isOpen={open} toggle={this.toggle} className=\"tr_modal\" centered={true}>\r\n                    <ModalHeader toggle={this.toggle}>My Subscription</ModalHeader>\r\n                    <ModalBody>\r\n                    <ul className=\"tr_notification_bx\">\r\n\t\t\t\t\t{followerList && followerList.length <= 0 && <li class=\"tr_notFound_subscription\">No data found</li>}\r\n\t\t\t\t\t{followerList.map(res =>\r\n\t\t\t\t\t\t(<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>{res}</h4>\r\n\t\t\t\t\t\t\t<p>2 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/* <li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>3 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>\r\n\t\t\t\t\t\t<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>6 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>\r\n\t\t\t\t\t\t<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>6 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li> */}\r\n\t\t\t\t</ul>\r\n                <div className=\"trailButtonsWrapper\">\r\n\t\t\t\t\t<Button className=\"ant-btn ant-btn-primary\" onClick={this.toggle}>Cancel</Button>\r\n                </div>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MySubscription;","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/SortableItem.js",["583","584","585","586","587"],"import React from \"react\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport _ from \"lodash\";\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\nconst onTitleClickHandler = (e) => {\r\n  e.preventDefault();\r\n\r\n  const titles = document.querySelectorAll(\".en_title\");\r\n\r\n  titles.forEach((el) => {\r\n    el.addEventListener(\"keydown\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  });\r\n};\r\n\r\nconst onDescriptionHandler = (e) => {\r\n  e.preventDefault();\r\n\r\n  const descriptions = document.querySelectorAll(\".en_desc\");\r\n  descriptions.forEach((el) => {\r\n    el.addEventListener(\"keydown\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Draggable list handle\r\n */\r\nconst DragHandle = sortableHandle(() => (\r\n  <span className=\"drag_icon trailit_draggable_icon\">\r\n    <img\r\n      className=\"trail_draggable_icon_pic\"\r\n      src={require(\"../images/move.png\")}\r\n      alt=\"drag icon\"\r\n      width=\"25px\"\r\n    />\r\n  </span>\r\n));\r\n\r\n/**\r\n * Draggable item sort\r\n */\r\nclass SortableItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MobileTargetNotFound: {},\r\n      result: [],\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      MobileTargetNotFound: nextProps.MobileTargetNotFound,\r\n      result: nextProps.result,\r\n    };\r\n  }\r\n\r\n  onClickToAddSubMenu = (e, result, tourStep) => {\r\n    this.props.onClick(e, result, tourStep);\r\n  };\r\n\r\n  handleClickMenu = (e) => {\r\n    e.stopPropagation();\r\n\r\n    // Set show menu state\r\n    this.setState({ showMenu: !this.state.showMenu }); // border: 1px solid black;\r\n  };\r\n\r\n  onMouseLeave = (e) => {\r\n    if (this.state.showMenu) {\r\n      // Set show menu state\r\n      this.setState({ showMenu: false });\r\n    }\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   const trailBuilderElement = document.querySelector('.trail_builder_side_panel_open');\r\n  //   console.log('trailBuilderElement', trailBuilderElement);\r\n  //   console.log('this.state.showMenu', this.state.showMenu);\r\n  //   console.log(this.state.showMenu && trailBuilderElement);\r\n\r\n  //   if (this.state.showMenu && trailBuilderElement) {\r\n  //     // Hide detele button\r\n  //     this.setState({ showMenu: false });\r\n  //   }\r\n  // };\r\n\r\n  render() {\r\n    let { i, result, tourStep, tourType, currentTrailsTab, index } = this.props;\r\n\r\n    const { MobileTargetNotFound } = this.state;\r\n    let subStep = result.unique_target_one != \"\" ? true : false;\r\n    let subStepStatus = false;\r\n\r\n    if (!_.isEmpty(MobileTargetNotFound)) {\r\n      subStepStatus =\r\n        result.trail_data_id === MobileTargetNotFound.trail_data_id;\r\n    }\r\n\r\n    if (!resizeScreen()) {\r\n      subStepStatus = false;\r\n      subStep = false;\r\n    }\r\n\r\n    return (\r\n      // <div key={i} className={`li done trailTourStep ${tourStep === (i + 1) ? 'active' : ''}`}>\r\n      //     <DragHandle />\r\n      //     <div className=\"counter\"><span>{i + 1}</span></div>\r\n      //     <div>\r\n      //         <div className=\"en_title\">\r\n      //             {result.title}\r\n      //         </div>\r\n      //         <div className=\"en_desc mb-2\">\r\n      //             {(result.type !== 'audio' &&\r\n      //             result.type !== 'video' &&\r\n      //             result.mediaType === 'text') ? <span dangerouslySetInnerHTML={{ __html: result.description }}></span> : result.url}\r\n      //         </div>\r\n      //         {subStepStatus && <div>\r\n      //             <button onClick={(e) => this.onClickToAddSubMenu(e, result, (i + 1))}>Add</button>\r\n      //         </div>}\r\n      //         {subStep && <div>\r\n      //             <div className=\"en_title\">\r\n      //                 {result.mobile_title}\r\n      //             </div>\r\n      //             <div className=\"en_desc mb-2\">\r\n      //                 {(result.type !== 'audio' &&\r\n      //                 result.type !== 'video' &&\r\n      //                 result.mobile_media_type === 'text') ? <span dangerouslySetInnerHTML={{ __html: result.mobile_description }}></span> : result.url}\r\n      //             </div>\r\n      //         </div>}\r\n      //     </div>\r\n      // </div>\r\n\r\n      //   <div className={`${\r\n      //     this.state.showMenu\r\n      //       ? \"z-index-2\"\r\n      //       : \"\"\r\n      //   }`}>\r\n      <div>\r\n        {tourType !== \"Make Edit\" ? (\r\n          <div\r\n            // onMouseLeave={this.onMouseLeave}\r\n            className={`${\r\n              currentTrailsTab === \"Followed\"\r\n                ? result.visited\r\n                  ? \"info_bbx_gradient\"\r\n                  : \"info_bbx_grey\"\r\n                : \"info_bbx_gradient\"\r\n            } ${tourStep === i + 1 ? \"active\" : \"inactive\"} ${\r\n              this.state.showMenu ? \"z-index-2\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"d-flex\">\r\n              <div className=\"d-flex-1\">\r\n                <h4>Step {i + 1}</h4>\r\n                <div className=\"d-flex-image\">\r\n                  {result.mediaType === \"video\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/vd_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"audio\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/mp3_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"image\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/img_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"text\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/txt_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex-2\">\r\n                <p>{result.title}</p>\r\n              </div>\r\n              <div className=\"d-flex-3\">\r\n                <div>\r\n                  {this.props.tourType === \"Make Edit\" && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"trailit_dotsButton\"\r\n                      onClick={this.handleClickMenu}\r\n                    >\r\n                      <img\r\n                        width=\"16px\"\r\n                        src={require(\"../images/trailit_dotsPink.png\")}\r\n                        alt=\"dots\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                  {this.state.showMenu && (\r\n                    <div className={`trailit_dotsMenuList`}>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          // Set show state\r\n                          this.setState({ showMenu: false });\r\n\r\n                          // Show delete modal\r\n                          this.props.onDeleteModalOpen(\r\n                            result.title,\r\n                            result.trail_data_id,\r\n                            false\r\n                          );\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            onMouseLeave={this.onMouseLeave}\r\n            className={`trailitStepBox ${\r\n              tourStep === i + 1 ? \"active\" : \"inactive\"\r\n            } ${this.state.showMenu ? \"z-index-2\" : \"\"}`}\r\n          >\r\n            {/* {tourType !== \"preview\" && <DragHandle />} */}\r\n            <div className=\"trailitStepTitle\">\r\n              Step {i + 1} - {result.title}\r\n            </div>\r\n            <div className=\"trailitIconRight\">\r\n              <div>\r\n                {this.props.tourType === \"Make Edit\" && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleClickMenu}\r\n                    className=\"trailit_dotsButton\"\r\n                  >\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/trailit_dotsPink.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  </button>\r\n                )}\r\n                {this.state.showMenu && (\r\n                  <div className={`trailit_dotsMenuList`}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        // Set show state\r\n                        this.setState({ showMenu: false });\r\n\r\n                        // Show delete modal\r\n                        this.props.onDeleteModalOpen(\r\n                          result.title,\r\n                          result.trail_data_id,\r\n                          false\r\n                        );\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {result.mediaType === \"image\" && (\r\n                <img\r\n                  width=\"16px\"\r\n                  height=\"14px\"\r\n                  src={require(\"../images/trialit_image.png\")}\r\n                  alt=\"dots\"\r\n                />\r\n              )}\r\n              {result.mediaType === \"video\" && (\r\n                <img\r\n                  width=\"18px\"\r\n                  height=\"18px\"\r\n                  src={require(\"../images/trialit_video.png\")}\r\n                  alt=\"dots\"\r\n                />\r\n              )}\r\n              {result.mediaType === \"text\" && (\r\n                <img\r\n                  width=\"16px\"\r\n                  height=\"14px\"\r\n                  src={require(\"../images/trailit_text.png\")}\r\n                  alt=\"dots\"\r\n                />\r\n              )}\r\n              {result.mediaType === \"audio\" && (\r\n                <img\r\n                  width=\"18px\"\r\n                  height=\"18px\"\r\n                  src={require(\"../images/trailit_audio.png\")}\r\n                  alt=\"dots\"\r\n                />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {subStep && (\r\n          <div\r\n            className={`trailitStepBox trailitSubStepBox ${\r\n              tourStep === i + 1 ? \"active\" : \"inactive\"\r\n            } ${this.state.showMenu ? \"z-index-2\" : \"\"}`}\r\n          >\r\n            {/* <DragHandle /> */}\r\n            <div className=\"trailitStepTitle\">\r\n              Step {i + 1} - {result.title}\r\n            </div>\r\n            {/* <div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.handleClickMenu}\r\n              className=\"trailit_dotsButton\"\r\n            >\r\n              <img\r\n                width=\"16px\"\r\n                src={require(\"../images/trailit_dotsPink.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            </button>\r\n            {this.state.showMenu && (\r\n              <div className={`trailit_dotsMenuList`}>\r\n                <button type=\"button\">Edit</button>\r\n                <button type=\"button\">Delete</button>\r\n              </div>\r\n            )}\r\n          </div> */}\r\n          </div>\r\n        )}\r\n        {subStepStatus && tourType === \"Make Edit\" && (\r\n          <div className=\"trailitAddSubStep\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => this.onClickToAddSubMenu(e, result, i + 1)}\r\n            >\r\n              <img\r\n                width=\"10px\"\r\n                src={require(\"../images/imgpsh_fullsize_anim.png\")}\r\n                alt=\"...\"\r\n              />\r\n              Substep\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default sortableElement(SortableItem);\r\n\r\n/**\r\n * Draggable sort list\r\n */\r\nexport const SortableContainer = sortableContainer(({ children }) => {\r\n  return <div>{children}</div>;\r\n});\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/main.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/mainflip.js",[],["588","589"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/myExtensionRootFlip.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/videoTour.js",[],["590","591"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/CreateNewTrailTab.js",["592","593","594"],"import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport $ from 'jquery';\r\nimport { createTrailId } from '../common/axios';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass CreateNewTrailTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            trail_name: '',\r\n            loading: false\r\n        };\r\n    };\r\n        \r\n    clickToAddTrails = (values) => {\r\n        // this.props.form.validateFields((err, values) => {\r\n        //     if (!err) {\r\n                this.setState({loading: true});\r\n                chrome.storage.local.get([\"trail_web_user_tour\", \"userData\"], async function (items) {\r\n                    const result = await createTrailId(items.userData._id, values.trail_name);\r\n                    if(result.status == 200) {\r\n                        this.setState({trail_name: '', loading: false});\r\n                        this.props.onChange(false);\r\n                        chrome.storage.local.set({trail_id: result.data.response[0].trail_id})\r\n                    }\r\n                }.bind(this))\r\n        //     }\r\n        // });\r\n    }\r\n    \r\n    render () {        \r\n        return(\r\n            <React.Fragment>\r\n                <Form name=\"normal_login\" className=\"tr_new_trail_create_form\">\r\n                    <Form.Item\r\n                        name=\"trail_name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input Trail Name',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Enter Trail Name\"\r\n                            className=\"tr_input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.clickToAddTrails} className=\"tr_button\" loading={this.state.loading}>\r\n                            Add Trail\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewTrailTab;","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/near.js",["595"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Connection } from './connection';\nimport { Contract } from './contract';\nimport { readKeyFile } from './key_stores/unencrypted_file_system_keystore';\nimport { LocalAccountCreator, UrlAccountCreator } from './account_creator';\nimport { InMemoryKeyStore, MergeKeyStore } from './key_stores';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport class Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new BN(config.initialBalance) : new BN('500000000000000000000000000');\n            this.accountCreator = new LocalAccountCreator(new Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     *\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, accountId);\n            yield account.state();\n            return account;\n        });\n    }\n    /**\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new Account(this.connection, accountId);\n        });\n    }\n    /**\n     * @deprecated Use `new nearApi.Contract(yourAccount, contractId, { viewMethods, changeMethods })` instead.\n     * @param contractId\n     * @param options\n     */\n    loadContract(contractId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, options.sender);\n            return new Contract(account, contractId, options);\n        });\n    }\n    /**\n     * @deprecated Use `yourAccount.sendMoney` instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    sendTokens(amount, originator, receiver) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n            const account = new Account(this.connection, originator);\n            const result = yield account.sendMoney(receiver, amount);\n            return result.transaction_outcome.id;\n        });\n    }\n}\n/**\n * Initialize connection to Near network.\n */\nexport function connect(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Try to find extra key in `KeyPath` if provided.\n        if (config.keyPath && config.deps && config.deps.keyStore) {\n            try {\n                const accountKeyFile = yield readKeyFile(config.keyPath);\n                if (accountKeyFile[0]) {\n                    // TODO: Only load key if network ID matches\n                    const keyPair = accountKeyFile[1];\n                    const keyPathStore = new InMemoryKeyStore();\n                    yield keyPathStore.setKey(config.networkId, accountKeyFile[0], keyPair);\n                    if (!config.masterAccount) {\n                        config.masterAccount = accountKeyFile[0];\n                    }\n                    config.deps.keyStore = new MergeKeyStore([config.deps.keyStore, keyPathStore]);\n                    console.log(`Loaded master account ${accountKeyFile[0]} key from ${config.keyPath} with public key = ${keyPair.getPublicKey()}`);\n                }\n            }\n            catch (error) {\n                console.warn(`Failed to load master account key from ${config.keyPath}: ${error}`);\n            }\n        }\n        return new Near(config);\n    });\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/account_multisig.js",["596","597","598"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Contract } from './contract';\nimport { parseNearAmount } from './utils/format';\nimport { PublicKey } from './utils/key_pair';\nimport { addKey, deleteKey, deployContract, functionCall, functionCallAccessKey } from './transaction';\nimport { fetchJson } from './utils/web';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst NETWORK_ID = process.env.REACT_APP_NETWORK_ID || 'default';\nconst CONTRACT_HELPER_URL = process.env.CONTRACT_HELPER_URL || 'https://helper.testnet.near.org';\nexport const MULTISIG_STORAGE_KEY = '__multisigRequest';\nexport const MULTISIG_ALLOWANCE = new BN(process.env.MULTISIG_ALLOWANCE || parseNearAmount('1'));\nexport const MULTISIG_GAS = new BN(process.env.MULTISIG_GAS || '100000000000000');\nexport const MULTISIG_DEPOSIT = new BN('0');\nexport const MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexport const MULTISIG_VIEW_METHODS = ['get_request_nonce', 'list_request_ids'];\nexport const MULTISIG_CONFIRM_METHODS = ['confirm'];\n;\n// in memory request cache for node w/o localStorage\nlet storageFallback = {\n    [MULTISIG_STORAGE_KEY]: null\n};\nexport class AccountMultisig extends Account {\n    constructor(connection, accountId, storage) {\n        super(connection, accountId);\n        this.storage = storage;\n        this.contract = getContract(this);\n    }\n    addKey(publicKey, contractId, methodName, amount) {\n        const _super = Object.create(null, {\n            addKey: { get: () => super.addKey }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (contractId) {\n                return _super.addKey.call(this, publicKey, contractId, MULTISIG_CHANGE_METHODS.join(), MULTISIG_ALLOWANCE);\n            }\n            return _super.addKey.call(this, publicKey);\n        });\n    }\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            if (this.isDeleteAction(actions)) {\n                return yield _super.signAndSendTransaction.call(this, accountId, actions);\n            }\n            yield this.deleteUnconfirmedRequests();\n            const requestId = yield this.getRequestNonce();\n            this.setRequest({ accountId, requestId, actions });\n            const args = new Uint8Array(new TextEncoder().encode(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            })));\n            return yield _super.signAndSendTransaction.call(this, accountId, [\n                functionCall('add_request_and_confirm', args, MULTISIG_GAS, MULTISIG_DEPOSIT)\n            ]);\n        });\n    }\n    signAndSendTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let { receiverId, actions } of transactions) {\n                yield this.signAndSendTransaction(receiverId, actions);\n            }\n        });\n    }\n    deployMultisig(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            // replace account keys & recovery keys with limited access keys; DO NOT replace seed phrase keys\n            const accountKeys = (yield this.getAccessKeys()).map((ak) => ak.public_key);\n            const seedPhraseKeys = (yield this.getRecoveryMethods()).data\n                .filter(({ kind, publicKey }) => kind === 'phrase' && publicKey !== null && accountKeys.includes(publicKey))\n                .map((rm) => rm.publicKey);\n            const fak2lak = accountKeys.filter((k) => !seedPhraseKeys.includes(k)).map(toPK);\n            const confirmOnlyKey = toPK((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            const newArgs = new Uint8Array(new TextEncoder().encode(JSON.stringify({ 'num_confirmations': 2 })));\n            const actions = [\n                ...fak2lak.map((pk) => deleteKey(pk)),\n                ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, MULTISIG_CHANGE_METHODS, null))),\n                addKey(confirmOnlyKey, functionCallAccessKey(accountId, MULTISIG_CONFIRM_METHODS, null)),\n                deployContract(contractBytes),\n                functionCall('new', newArgs, MULTISIG_GAS, MULTISIG_DEPOSIT),\n            ];\n            console.log('deploying multisig contract for', accountId);\n            return yield _super.signAndSendTransaction.call(this, accountId, actions);\n        });\n    }\n    deleteUnconfirmedRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { contract } = this;\n            const request_ids = yield this.getRequestIds();\n            for (const request_id of request_ids) {\n                try {\n                    yield contract.delete_request({ request_id });\n                }\n                catch (e) {\n                    console.warn(\"Attempt to delete an earlier request before 15 minutes failed. Will try again.\");\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestNonce() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.contract.get_request_nonce();\n        });\n    }\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.contract.list_request_ids();\n        });\n    }\n    isDeleteAction(actions) {\n        return actions && actions[0] && actions[0].functionCall && actions[0].functionCall.methodName === 'delete_request';\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(MULTISIG_STORAGE_KEY) || `{}`);\n        }\n        return storageFallback[MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[MULTISIG_STORAGE_KEY] = data;\n    }\n    // default helpers for CH\n    sendRequestCode() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const { requestId, actions } = this.getRequest();\n            if (this.isDeleteAction(actions)) {\n                return;\n            }\n            const method = yield this.get2faMethod();\n            yield this.postSignedJson('/2fa/send', {\n                accountId,\n                method,\n                requestId,\n            });\n            return requestId;\n        });\n    }\n    verifyRequestCode(securityCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const request = this.getRequest();\n            if (!request) {\n                throw new Error('no request pending');\n            }\n            const { requestId } = request;\n            return yield this.postSignedJson('/2fa/verify', {\n                accountId,\n                securityCode,\n                requestId\n            });\n        });\n    }\n    getRecoveryMethods() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            return {\n                accountId,\n                data: yield this.postSignedJson('/account/recoveryMethods', { accountId })\n            };\n        });\n    }\n    get2faMethod() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { data } = yield this.getRecoveryMethods();\n            if (data && data.length) {\n                data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n            }\n            if (!data)\n                return null;\n            const { kind, detail } = data;\n            return { kind, detail };\n        });\n    }\n    signatureFor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const blockNumber = String((yield this.connection.provider.status()).sync_info.latest_block_height);\n            const signed = yield this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, NETWORK_ID);\n            const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n            return { blockNumber, blockNumberSignature };\n        });\n    }\n    postSignedJson(path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield fetchJson(CONTRACT_HELPER_URL + path, JSON.stringify(Object.assign(Object.assign({}, body), (yield this.signatureFor()))));\n        });\n    }\n}\n// helpers\nconst toPK = (pk) => PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst getContract = (account) => {\n    return new Contract(account, account.accountId, {\n        viewMethods: MULTISIG_VIEW_METHODS,\n        changeMethods: MULTISIG_CHANGE_METHODS,\n    });\n};\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: MULTISIG_ALLOWANCE.toString(),\n                method_names: MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/enums.js",["599","600"],"export class Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexport class Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/network.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/browser_local_storage_key_store.js",["601","602","603","604","605","606","607"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\nexport class BrowserLocalStorageKeyStore extends KeyStore {\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Sets a local storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userProfile.js",["608","609","610","611","612","613","614","615","616","617","618","619","620","621","622"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport { Button } from \"antd\";\r\nimport Cropper from \"react-easy-crop\";\r\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\r\n\r\nimport { socket } from \"../common/socket\";\r\nimport { getBalance } from \"../code/getBalance\";\r\nimport { getFollowTrails } from \"../common/axios\";\r\nimport { wallet, getAddress } from \"../common/celo\";\r\nimport getCroppedImg, { get, blobToFile } from \"../AppUtill\";\r\nimport { handleFileUpload } from \"../common/audAndVidCommon\";\r\nimport SettingsComponent from \"../components/settingsComponents\";\r\n\r\n// import BgImage from \"../images/trailit_bx_img.png\";\r\nimport {\r\n  getAllNotification,\r\n  getUserSingleTrail,\r\n  getAllUser,\r\n  getAllCategory,\r\n  UpdateProfilePicture,\r\n  getUser,\r\n} from \"../common/axios\";\r\nimport {\r\n  UserProfileEdit,\r\n  UserProfileList,\r\n  UserProfileAdd,\r\n  UserCUSD,\r\n} from \"./User\";\r\nimport $ from \"jquery\";\r\n\r\nimport \"../index.css\";\r\nimport { resolve } from \"promise\";\r\n\r\nlet autoLogoutTimeout;\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\nclass UserProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      userName: \"\",\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      isPreview: false,\r\n      isPreviewSingleTrail: false,\r\n      reload: false,\r\n      response: false,\r\n      balance: \"0.00\",\r\n      address: \"0.00\",\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      tab: \"logout\",\r\n      notificationData: [],\r\n      myTrilsListData: [],\r\n      followerLength: 0,\r\n      showMenu: false,\r\n      getOneEditRow: {},\r\n      addRaw: {},\r\n      listTitle: \"Loading...\",\r\n      editTrail: false,\r\n      categoryList: [],\r\n      isLoading: false,\r\n      profileImage: \"\",\r\n      slideBalance: false,\r\n      privateKey: \"\",\r\n      nearBalance: 0,\r\n      showSetting: false,\r\n      isDisabled: false,\r\n      profilePreview: null,\r\n      crop: { x: 0, y: 0 },\r\n      zoom: 1,\r\n      croppedAreaPixels: null,\r\n      errorMsg: \"\",\r\n    };\r\n  }\r\n\r\n  // Get NEAR account balance\r\n  getNearAccountBalance() {\r\n    // Get NEAR balance of user\r\n    getBalance()\r\n      .then((res) => {\r\n        this.setState({ nearBalance: res });\r\n      })\r\n      .catch();\r\n  }\r\n\r\n  // On setting button click function\r\n  onSettingButtonClick() {\r\n    chrome.storage.local.set({ showSetting: true });\r\n    // chrome.storage.local.get([\"showSetting\"], (items) => {\r\n    //   if (!items.showSetting) {\r\n    //     chrome.storage.local.set({ showSetting: true });\r\n    //   } else {\r\n    //     chrome.storage.local.set({ showSetting: false });\r\n    //   }\r\n    // });\r\n  }\r\n\r\n  // Get user's followed trail data\r\n  userFollowedTrailData = async () => {\r\n    try {\r\n      // Get follow data of user from database\r\n      const followData = await getFollowTrails();\r\n      const followedTrails = followData.data;\r\n\r\n      if (\r\n        followedTrails &&\r\n        followedTrails.response &&\r\n        followedTrails.response.statusCode === \"200\"\r\n      ) {\r\n        this.setState({\r\n          myTrilsListData: followedTrails.response.result,\r\n          isLoading: false,\r\n          errorMsg: \"\",\r\n        });\r\n      } else {\r\n        this.setState({\r\n          myTrilsListData: [],\r\n          isLoading: false,\r\n          errorMsg: \"\",\r\n        });\r\n      }\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n\r\n      this.setState({\r\n        isLoading: false,\r\n        myTrilsListData: [],\r\n        errorMsg: \"Error while fetching data\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Get user's trails data\r\n  fetchUserTrailsData = async () => {\r\n    try {\r\n      const result = await getUserSingleTrail();\r\n\r\n      if (result.status == 200) {\r\n        this.setState({\r\n          myTrilsListData: result.data.response ? result.data.response : [],\r\n          getOneEditRow: {},\r\n          addRaw: {},\r\n        });\r\n      }\r\n\r\n      this.setState({ isLoading: false, errorMsg: \"\" });\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      this.setState({\r\n        isLoading: false,\r\n        myTrilsListData: [],\r\n        errorMsg: \"Error while fetching data\",\r\n      });\r\n    }\r\n  };\r\n\r\n  updateAutologoutTime = () => {\r\n    chrome.runtime.sendMessage(\"\", {\r\n      type: \"updateTimeout\",\r\n      status: true,\r\n    });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // Remove click event listener\r\n    window.removeEventListener(\"click\", this.updateAutologoutTime);\r\n  }\r\n\r\n  async componentDidMount() {\r\n    // Call update auto logout time function\r\n    this.updateAutologoutTime();\r\n\r\n    // Add click event listener\r\n    window.addEventListener(\"click\", this.updateAutologoutTime);\r\n\r\n    chrome.tabs.query({ active: true, lastFocusedWindow: true }, (tabs) => {\r\n      if (tabs && tabs.length > 0) {\r\n        const tab = tabs[0];\r\n        if (tab.url.includes(\"chrome://newtab/\") && tab.title === \"New Tab\") {\r\n          chrome.tabs.update({ url: \"http://169.61.16.14/\" });\r\n        }\r\n      }\r\n    });\r\n\r\n    // let balance = 0;\r\n    // let address = \"\";\r\n    let balance = await wallet.balance();\r\n    let address = await getAddress(\r\n      \"0x8920565d5Bc8cf942eD2E18df4B71b8695a22D9B\"\r\n    );\r\n    this.setState({ isLoading: true });\r\n    chrome.storage.local.get(\r\n      [\r\n        \"authToken\",\r\n        \"userData\",\r\n        \"reload\",\r\n        \"keypair\",\r\n        \"isPreview\",\r\n        \"isPreviewSingleTrail\",\r\n        \"currentTrailsTab\",\r\n        \"tourType\",\r\n        \"currentTourType\",\r\n      ],\r\n      async function (items) {\r\n        // // Get NEAR balance of user\r\n        this.getNearAccountBalance();\r\n        // getBalance()\r\n        //   .then(res => {\r\n        //     console.log('res', res);\r\n        //     this.setState({ nearBalance: res });\r\n        //   })\r\n        //   .catch();\r\n\r\n        let userData = { ...items.userData };\r\n\r\n        // Get user data\r\n        const { data, status } = await getUser(userData._id);\r\n\r\n        if (status === 200 && data.data && data.data.response) {\r\n          userData = { ...data.data.response };\r\n        }\r\n\r\n        let disabledButton = false;\r\n        if (\r\n          items.currentTourType &&\r\n          items.currentTourType !== \"\" &&\r\n          items.tourType &&\r\n          items.tourType === \"preview\"\r\n        ) {\r\n          disabledButton = true;\r\n        }\r\n\r\n        this.setState({\r\n          profileImage: userData.profileImage ? userData.profileImage : \"\",\r\n          privateKey: items.keypair,\r\n          userName: userData.userName,\r\n          firstName: userData.firstName ? userData.firstName : null,\r\n          lastName: userData.lastName ? userData.lastName : null,\r\n          isPreview: items.isPreview,\r\n          isPreviewSingleTrail: items.isPreviewSingleTrail,\r\n          isDisabled: disabledButton,\r\n          listTitle: items.currentTrailsTab\r\n            ? items.currentTrailsTab\r\n            : \"My Trails\",\r\n          // nearBalance: balance\r\n        });\r\n\r\n        let followerLength;\r\n        socket.emit(\"userId\", userData._id);\r\n        socket.on(\"followerList\", (data) => {\r\n          followerLength = data.length;\r\n          this.setState({\r\n            email: userData.email,\r\n            balance: balance,\r\n            address,\r\n            followerLength,\r\n          });\r\n        });\r\n\r\n        // const data = {\r\n        //   user_id: userData._id,\r\n        //   flag: \"unread\",\r\n        // };\r\n\r\n        if (items.currentTrailsTab && items.currentTrailsTab === \"Followed\") {\r\n          // Call user followed trail data function\r\n          await this.userFollowedTrailData();\r\n        } else {\r\n          // Call fetch user's trail data function\r\n          await this.fetchUserTrailsData();\r\n        }\r\n\r\n        // getAllNotification(data).then(async (res) => {\r\n        //   const data = res.data.response;\r\n\r\n        //   if (data.result && _.isArray(data.result) && data.result.length > 0) {\r\n        //     let user = await getAllUser();\r\n\r\n        //     let filterdFollowers = data.result.map((el) => {\r\n        //       for (let i = 0; i < user.data.data.response.length; i++) {\r\n        //         if (el.creator_id === user.data.data.response[i]._id) {\r\n        //           return {\r\n        //             email: user.data.data.response[i].email,\r\n        //             pictures: user.data.data.response[i].pictures,\r\n        //             creator_id: user.data.data.response[i]._id,\r\n        //             currUserId: el.user_id,\r\n        //             created: el.created,\r\n        //           };\r\n        //         }\r\n        //       }\r\n        //     });\r\n\r\n        //     filterdFollowers = filterdFollowers.sort((a, b) => {\r\n        //       return b.created - a.created;\r\n        //     });\r\n\r\n        //     // Update notificationData state\r\n        //     this.setState({\r\n        //       notificationData: filterdFollowers,\r\n        //       getOneEditRow: {},\r\n        //       addRaw: {},\r\n        //     });\r\n        //   }\r\n        // });\r\n\r\n        this.setState({\r\n          email: userData.email,\r\n          balance: balance,\r\n          address,\r\n        });\r\n\r\n        chrome.storage.local.set({ reload: false });\r\n\r\n        if (items.reload) {\r\n          chrome.tabs.query(\r\n            { active: true, lastFocusedWindow: true },\r\n            (tabs) => {\r\n              chrome.tabs.reload();\r\n            }\r\n          );\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    // Get all category function\r\n    let { data, status } = await getAllCategory();\r\n    if (status === 200) {\r\n      if (data.response && data.response.result) {\r\n        this.setState({ categoryList: data.response.result });\r\n      } else {\r\n        this.setState({ categoryList: [] });\r\n      }\r\n    }\r\n\r\n    if (document.querySelector(\"#my-extension-defaultroot\")) {\r\n      document.querySelector(\"#my-extension-defaultroot\").style.display =\r\n        \"none\";\r\n    }\r\n\r\n    if (document.querySelector(\"#my-extension-root-flip\")) {\r\n      document.querySelector(\"#my-extension-root-flip\").style.display = \"none\";\r\n    }\r\n\r\n    chrome.storage.onChanged.addListener(this.handlerStorageChanges);\r\n  }\r\n\r\n  handlerStorageChanges = (changes) => {\r\n    if (\r\n      changes.tourType &&\r\n      changes.tourType.newValue === \"preview\" &&\r\n      changes.currentTourType &&\r\n      changes.currentTourType.newValue !== \"\"\r\n    ) {\r\n      // Set isDisabled state\r\n      this.setState({ isDisabled: true });\r\n    }\r\n\r\n    if (\r\n      changes.tourType &&\r\n      changes.tourType.newValue === \"\" &&\r\n      changes.currentTourType &&\r\n      changes.currentTourType.newValue === \"\"\r\n    ) {\r\n      // Set isDisabled state\r\n      this.setState({ isDisabled: false });\r\n    }\r\n  };\r\n\r\n  onClickToList = async (listTitle) => {\r\n    this.setState({ listTitle, isLoading: true });\r\n    chrome.storage.local.set({ currentTrailsTab: listTitle });\r\n\r\n    if (listTitle === \"Followed\") {\r\n      // Call user followed trail data function\r\n      await this.userFollowedTrailData();\r\n    } else {\r\n      await this.fetchUserTrailsData();\r\n    }\r\n  };\r\n\r\n  onChangeTrailEdit = (editTrail) => {\r\n    this.setState({ editTrail, slideBalance: false });\r\n  };\r\n\r\n  onClickToCreateTrail = (e) => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ listTitle: \"My Trails\", slideBalance: false });\r\n    $(\"body\").attr(\"class\", \"trailit_EditTrailShow\");\r\n  };\r\n\r\n  getEditData = (res) => {\r\n    this.setState({ getOneEditRow: res });\r\n  };\r\n\r\n  handleClickMenu = (e, status) => {\r\n    e.stopPropagation();\r\n    this.setState({ showMenu: status });\r\n  };\r\n\r\n  onAddRaw = (data) => {\r\n    this.setState({ addRaw: data });\r\n  };\r\n\r\n  showCroppedImage = async () => {\r\n    try {\r\n      const croppedImage = await getCroppedImg(\r\n        this.state.profilePreview,\r\n        this.state.croppedAreaPixels,\r\n        0\r\n      );\r\n\r\n      let file = blobToFile(croppedImage, \"profile-picture.png\");\r\n\r\n      // Call upload file function\r\n      await this.uploadFile(file);\r\n\r\n      // console.log(\"after upload successed\");\r\n      chrome.tabs.query({ active: true, lastFocusedWindow: true }, (tabs) => {\r\n        if (\r\n          tabs.length > 0 &&\r\n          (tabs[0].url.includes(\"http://169.61.16.14\") ||\r\n            tabs[0].url.includes(\"http://localhost:\"))\r\n        ) {\r\n          chrome.tabs.reload();\r\n        }\r\n      });\r\n\r\n      // Call on cancel handler\r\n      this.onCancelHandler();\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n    }\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ isLoading: true });\r\n\r\n    return handleFileUpload(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          profileImage: data.response.result.fileUrl,\r\n        });\r\n\r\n        new Promise((resolve, reject) => {\r\n          chrome.storage.local.get(\r\n            [\"authToken\", \"userData\", \"reload\"],\r\n            async function (items) {\r\n              try {\r\n                let r = await UpdateProfilePicture({\r\n                  email: items.userData.email,\r\n                  profileImage: data.response.result.fileUrl,\r\n                });\r\n\r\n                if (r.status == 200) {\r\n                  chrome.storage.local.set({\r\n                    userData: {\r\n                      ...items.userData,\r\n                      profileImage: data.response.result.fileUrl,\r\n                    },\r\n                  });\r\n                }\r\n\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n\r\n                resolve();\r\n              } catch (e) {\r\n                this.setState({\r\n                  isLoading: false,\r\n                });\r\n\r\n                resolve();\r\n              }\r\n            }.bind(this)\r\n          );\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleImageUpload = (e) => {\r\n    const [file] = e.target.files;\r\n    if (file) {\r\n      // Set profile preview state\r\n      this.setState({ profilePreview: URL.createObjectURL(file) });\r\n    }\r\n  };\r\n\r\n  handleChange = async (e) => {\r\n    const { tourType } = this.state;\r\n    const file = e.target.files[0];\r\n    const fileType = file.type.split(\"/\");\r\n    e.target.value = null;\r\n\r\n    // Upload file function\r\n    await this.uploadFile(file);\r\n\r\n    // console.log(\"after upload successed\");\r\n    chrome.tabs.query({ active: true, lastFocusedWindow: true }, (tabs) => {\r\n      if (\r\n        tabs.length > 0 &&\r\n        (tabs[0].url.includes(\"http://169.61.16.14\") ||\r\n          tabs[0].url.includes(\"http://localhost:\"))\r\n      ) {\r\n        chrome.tabs.reload();\r\n      }\r\n    });\r\n  };\r\n\r\n  onSlide = () => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ slideBalance: true });\r\n    $(\"body\").attr(\"class\", \"trailit_cUSDForm\");\r\n  };\r\n\r\n  onHideSlide = () => {\r\n    // Get NEAR balance of user\r\n    this.getNearAccountBalance();\r\n\r\n    this.setState({ slideBalance: false });\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n\r\n  onCropComplete = (croppedArea, croppedAreaPixels) => {\r\n    console.log(\"croppedAreaPixels\", croppedAreaPixels);\r\n    // Set cropped area pixels\r\n    this.setState({ croppedAreaPixels });\r\n  };\r\n\r\n  setCrop = (data) => {\r\n    // Set crop\r\n    this.setState({ crop: data });\r\n  };\r\n\r\n  onCancelHandler = () => {\r\n    // Set state\r\n    this.setState({\r\n      zoom: 1,\r\n      crop: { x: 0, y: 0 },\r\n      profilePreview: null,\r\n      croppedAreaPixels: null,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // console.log('getBalance', getBalance());\r\n    const {\r\n      userName,\r\n      firstName,\r\n      lastName,\r\n      isPreview,\r\n      isLoading,\r\n      listTitle,\r\n      showSetting,\r\n      myTrilsListData,\r\n      categoryList,\r\n      notificationData,\r\n      editTrail,\r\n      getOneEditRow,\r\n      addRaw,\r\n      profileImage,\r\n      slideBalance,\r\n      nearBalance,\r\n      isDisabled,\r\n      isPreviewSingleTrail,\r\n      profilePreview,\r\n      crop,\r\n      zoom,\r\n      croppedAreaPixels,\r\n      errorMsg,\r\n    } = this.state;\r\n\r\n    let list = [];\r\n    if (listTitle === \"My Trails\") {\r\n      list = myTrilsListData;\r\n    } else if (listTitle === \"Followed\") {\r\n      list = myTrilsListData;\r\n    }\r\n\r\n    return (\r\n      <div className=\"trailit_userPanal trailit_Big\">\r\n        {editTrail && (\r\n          <UserProfileEdit\r\n            categoryList={categoryList}\r\n            data={getOneEditRow}\r\n            getEditData={this.getEditData}\r\n          />\r\n        )}\r\n        {!editTrail && !slideBalance && (\r\n          <UserProfileAdd onAddRaw={this.onAddRaw} addRaw={addRaw} />\r\n        )}\r\n        {slideBalance && (\r\n          <UserCUSD\r\n            privateKey={this.state.privateKey}\r\n            onHideSlide={this.onHideSlide}\r\n          />\r\n        )}\r\n        {isLoading && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img class=\"ring1\" src={require(`../images/loding1.png`)} />\r\n              <img class=\"ring2\" src={require(`../images/loding2.png`)} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"trailit_userPanalRightBox\">\r\n          <div className=\"trailit_userPanalHeaderBox\">\r\n            <div className=\"trailit_userIMG\">\r\n              <div className=\"trailit-image-and-input\">\r\n                {profilePreview && (\r\n                  <Cropper\r\n                    aspect={1}\r\n                    crop={crop}\r\n                    zoom={zoom}\r\n                    cropShape={\"round\"}\r\n                    image={profilePreview}\r\n                    onCropComplete={this.onCropComplete}\r\n                    onCropChange={(data) => this.setState({ crop: data })}\r\n                    onZoomChange={(data) => this.setState({ zoom: data })}\r\n                  />\r\n                )}\r\n\r\n                <img\r\n                  className=\"trailit-user-profile-image\"\r\n                  src={\r\n                    profileImage == \"\"\r\n                      ? require(\"../images/user.png\")\r\n                      : profileImage\r\n                  }\r\n                  alt=\"user\"\r\n                />\r\n\r\n                {!profilePreview && (\r\n                  <div>\r\n                    <input\r\n                      type=\"file\"\r\n                      name=\"media\"\r\n                      // accept=\"image/*\"\r\n                      accept=\".png, .jpg, .jpeg\"\r\n                      // onChange={this.handleChange}\r\n                      onChange={this.handleImageUpload}\r\n                    />\r\n\r\n                    <span className=\"trailitUploadICon\">\r\n                      <img src={require(\"../images/edit.svg\")} alt=\"..\" />\r\n                    </span>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {profilePreview && (\r\n                <div className=\"text-center trailit-image-button-container\">\r\n                  <Button\r\n                    size=\"small\"\r\n                    icon={<CloseOutlined />}\r\n                    onClick={this.onCancelHandler}\r\n                    className=\"trailit-close-button\"\r\n                  />\r\n                  <Button\r\n                    size=\"small\"\r\n                    icon={<CheckOutlined />}\r\n                    onClick={this.showCroppedImage}\r\n                    className=\"trailit-check-button\"\r\n                  />\r\n                </div>\r\n              )}\r\n            </div>\r\n            <div className=\"trailit_userBxs\">\r\n              <div className=\"trailit_userName trailit_ellips\">\r\n                {firstName && lastName ? `${firstName} ${lastName}` : userName}\r\n              </div>\r\n              <div className=\"trailit_userSubName trailit_ellips\">\r\n                Founder, Creator, Designer\r\n              </div>\r\n              <div\r\n                className=\"trailit_userName cursor_pointer\"\r\n                onClick={this.onSlide}\r\n              >\r\n                {nearBalance} <span className=\"trailit_userSubName\"> NEAR</span>\r\n              </div>\r\n              <div className=\"trailit_3Boxs\">\r\n                <div className=\"trailit_3Boxs1\">\r\n                  <div className=\"trailit_userName\">100k</div>\r\n                  <div className=\"trailit_userSubName\">Likes</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs2\">\r\n                  <div className=\"trailit_userName\">5.2k</div>\r\n                  <div className=\"trailit_userSubName\">Followers</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs3\">\r\n                  <div className=\"trailit_userName\">120</div>\r\n                  <div className=\"trailit_userSubName\">Following</div>\r\n                </div>\r\n              </div>\r\n              {showSetting && <SettingsComponent />}\r\n            </div>\r\n            <div\r\n              className=\"trailit_dotsMenuMain\"\r\n              onMouseLeave={(e) => this.handleClickMenu(e, false)}\r\n            >\r\n              <div className=\"trailit_dotsMenu\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => this.handleClickMenu(e, true)}\r\n                  className=\"trailit_dotsButton\"\r\n                >\r\n                  <img src={require(\"../images/dots.svg\")} alt=\"dots\" />\r\n                </button>\r\n                {this.state.showMenu && (\r\n                  <div className=\"trailit_dotsMenuList\">\r\n                    <button type=\"button\" onClick={this.onSettingButtonClick}>\r\n                      Settings\r\n                    </button>\r\n                    <button type=\"button\">Notifications</button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState({ showMenu: false });\r\n                        this.props.onClickToLogout();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"trailit_userPanalContentBox\">\r\n            <UserProfileList\r\n              list={list}\r\n              addRaw={addRaw}\r\n              errorMsg={errorMsg}\r\n              title={listTitle}\r\n              isLoading={isLoading}\r\n              getRow={this.getEditData}\r\n              profileImage={profileImage}\r\n              getOneEditRow={getOneEditRow}\r\n              onEdit={this.onChangeTrailEdit}\r\n            />\r\n            <div className=\"trailit_userPanalFooterBox\">\r\n              {!isPreview && !isPreviewSingleTrail && (\r\n                <>\r\n                  {listTitle === \"My Trails\" && (\r\n                    <button\r\n                      type=\"button\"\r\n                      disabled={isDisabled}\r\n                      className={`${\r\n                        isDisabled ? \"trailit_btnGray\" : \"trailit_btnPink\"\r\n                      }`}\r\n                      onClick={(e) => this.onClickToList(\"Followed\")}\r\n                    >\r\n                      Followed\r\n                    </button>\r\n                  )}\r\n                  {listTitle === \"Followed\" && (\r\n                    <button\r\n                      type=\"button\"\r\n                      // disabled={isDisabled}\r\n                      className=\"trailit_btnPink\"\r\n                      onClick={(e) => this.onClickToList(\"My Trails\")}\r\n                    >\r\n                      My Trails\r\n                    </button>\r\n                  )}\r\n                  {listTitle === \"Loading...\" && (\r\n                    <button disabled type=\"button\" className=\"trailit_btnPink\">\r\n                      {listTitle}\r\n                    </button>\r\n                  )}\r\n                </>\r\n              )}\r\n              {!isPreview && !isPreviewSingleTrail && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"trailit_btnPink\"\r\n                  onClick={this.onClickToCreateTrail}\r\n                >\r\n                  Create Trail\r\n                </button>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileList.js",["623","624","625","626","627","628","629","630","631","632","633","634","635","636","637","638","639"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport _ from \"lodash\";\r\n\r\nimport { getUserOneTrail } from \"../../common/axios\";\r\nimport BgImage from \"../../images/trailit_bx_img.png\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\nclass UserProfileList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      isLoading: this.props.isLoading,\r\n      list: this.props.list,\r\n      isLoadingLink: false,\r\n      isCopiedLink: false,\r\n      isCopiedError: false,\r\n    };\r\n  }\r\n\r\n  styleBgImg = {\r\n    background: `url(${BgImage}) no-repeat scroll center center / cover`,\r\n  };\r\n\r\n  async componentWillReceiveProps(nextProps, prevState) {\r\n    const { addRaw, getOneEditRow } = nextProps;\r\n\r\n    let list = await nextProps.list;\r\n    if (!_.isEmpty(addRaw)) {\r\n      let findRow = await list.find((r) => r.trail_id == addRaw.trail_id);\r\n      if (findRow == undefined) {\r\n        list.push(addRaw);\r\n      }\r\n    }\r\n\r\n    if (!_.isEmpty(getOneEditRow)) {\r\n      let findInd = await list.findIndex(\r\n        (r) => r.trail_id == getOneEditRow.trail_id\r\n      );\r\n      if (findInd != -1) {\r\n        list[findInd] = getOneEditRow;\r\n      }\r\n    }\r\n\r\n    this.setState({ isLoading: nextProps.isLoading, list: list });\r\n  }\r\n\r\n  onClickToEdit = (e, res) => {\r\n    e.stopPropagation();\r\n    $(\"body\").attr(\"class\", \"trailit_EditTrailShow\");\r\n    this.props.getRow(res);\r\n    this.props.onEdit(true);\r\n    this.setState({ showMenu: false });\r\n  };\r\n\r\n  handleClickMenu = (e) => {\r\n    e.stopPropagation();\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  };\r\n\r\n  onMouseLeave = (e) => {\r\n    if (this.state.showMenu) {\r\n      // Set show menu state\r\n      this.setState({ showMenu: false });\r\n    }\r\n  };\r\n\r\n  onPublishLink = async (e, res) => {\r\n    e.stopPropagation();\r\n    // this.setState({ isLoadingLink: true });\r\n    let screen = resizeScreen() ? \"mobile\" : \"web\";\r\n    let result = await getUserOneTrail(res.trail_id, screen);\r\n    if (result.status == 200) {\r\n      if (result.data.response.statusCode == 200) {\r\n        let trailList = result.data.response.result;\r\n        if (\r\n          result.data.response &&\r\n          result.data.response.result &&\r\n          result.data.response.result.length > 0\r\n        ) {\r\n          const trailId = res.trail_id;\r\n          const URL = trailList[0].url;\r\n          let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\r\n          const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${res.user_id}&trailId=${trailId}&trailPreview=true&tourStep=1`;\r\n\r\n          function copyStringToClipboard(str) {\r\n            // Create new element\r\n            var el = document.createElement(\"textarea\");\r\n\r\n            // Set value (string to be copied)\r\n            el.value = str;\r\n\r\n            // Set non-editable to avoid focus and move outside of view\r\n            el.setAttribute(\"readonly\", \"\");\r\n            el.style = {\r\n              position: \"absolute\",\r\n              left: \"-9999px\",\r\n            };\r\n            document.body.appendChild(el);\r\n\r\n            // Select text inside element\r\n            el.select();\r\n\r\n            // Copy text to clipboard\r\n            document.execCommand(\"copy\");\r\n\r\n            // Remove temporary element\r\n            document.body.removeChild(el);\r\n          }\r\n\r\n          // this.setState({ isCopiedLink: true });\r\n\r\n          // setTimeout(() => {\r\n          //   this.setState({ isCopiedLink: false });\r\n          // }, 2000);\r\n\r\n          copyStringToClipboard(trailUrl);\r\n\r\n          alert(\"Successfully copied\");\r\n        } else {\r\n          this.setState({ isCopiedError: true });\r\n\r\n          setTimeout(() => {\r\n            this.setState({ isCopiedError: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    }\r\n    // this.setState({ isLoadingLink: false });\r\n  };\r\n\r\n  onBoxClick = (e, res) => {\r\n    e.preventDefault();\r\n    // ...query for the active tab...\r\n    chrome.runtime.sendMessage(\"\", {\r\n      type: \"DOMInfo\",\r\n      status: true,\r\n    });\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        reload: !prevState.reload,\r\n      };\r\n    });\r\n\r\n    let followedTrailUserData = null;\r\n\r\n    if (res.userData) {\r\n      followedTrailUserData = { ...res.userData };\r\n    }\r\n\r\n    chrome.storage.local.set(\r\n      {\r\n        trail_id: res.trail_id,\r\n        trail_name: res.trail_name,\r\n        trail_web_user_tour: undefined,\r\n        followedTrailUserData,\r\n      },\r\n      (items) => console.log(\"trail_web_user_tourtrail_web_user_tour\", items)\r\n    );\r\n\r\n    let authToken, reload, userData;\r\n    chrome.storage.local.get(\r\n      [\"authToken\", \"userData\", \"reload\", \"openButton\"],\r\n      function (items) {\r\n        // authToken = items.authToken, reload = items.reload, userData = items.userData;\r\n        // chrome.storage.local.clear();\r\n\r\n        if (items.openButton === undefined) {\r\n          chrome.storage.local.set({ openButton: \"ManageTrail\" });\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    window.close();\r\n  };\r\n\r\n  deleteButtonHandler = (e, trail) => {\r\n    e.stopPropagation();\r\n\r\n    chrome.storage.local.set({\r\n      trailDeleteModal: {\r\n        value: \"open\",\r\n        title: trail.trail_name,\r\n        id: trail.trail_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoadingLink,\r\n      isCopiedLink,\r\n      isCopiedError,\r\n      isLoading,\r\n      list,\r\n    } = this.state;\r\n    const { profileImage, errorMsg } = this.props;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalContentInnerBox\">\r\n        {/* {isLoadingLink && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img class=\"ring1\" src={require(`../../images/loding1.png`)} />\r\n              <img class=\"ring2\" src={require(`../../images/loding2.png`)} />\r\n            </div>\r\n          </div>\r\n        )} */}\r\n        {/* {isCopiedLink && (\r\n          <div class=\"trailit_16500 trailit_mb3\">Successfully copied</div>\r\n        )}\r\n        {isCopiedError && (\r\n          <div class=\"trailit_16500 trailit_mb3\" style={{ color: \"red\" }}>\r\n            Please add trails data\r\n          </div>\r\n        )} */}\r\n        <div className=\"trailit_18600 trailit_mb3\">{this.props.title}</div>\r\n        <div className=\"trailit_scrollBoxs\">\r\n          <div className=\"trailit_Row\">\r\n            {/* {isLoading && <div className=\"trailit_noData\">Loading...</div>} */}\r\n            {list &&\r\n              list.length === 0 &&\r\n              !isLoading &&\r\n              errorMsg.length === 0 && (\r\n                <div className=\"trailit_noData\">Data Not Available</div>\r\n              )}\r\n            {errorMsg.length > 0 && !isLoading && (\r\n              <div className=\"trailit_errorData\">{errorMsg}</div>\r\n            )}\r\n            {!isLoading &&\r\n              list &&\r\n              list.length > 0 &&\r\n              errorMsg.length === 0 &&\r\n              list.map((res) => {\r\n                let styles = \"\";\r\n                let stlStatus = false;\r\n\r\n                if (\r\n                  res.cover_image_url != null &&\r\n                  res.cover_image_url != \"null\" &&\r\n                  res.cover_image_url != \"\" &&\r\n                  res.cover_image_url != undefined\r\n                ) {\r\n                  stlStatus = true;\r\n                  styles = {\r\n                    background: `url(${res.cover_image_url}) no-repeat scroll center center / cover`,\r\n                  };\r\n                }\r\n\r\n                return (\r\n                  <div className=\"trailit_col6\">\r\n                    <div\r\n                      className=\"trailit_bx\"\r\n                      onClick={(e) => this.onBoxClick(e, res)}\r\n                      onMouseLeave={this.onMouseLeave}\r\n                    >\r\n                      <div className=\"img\">\r\n                        <span\r\n                          className=\"img_bg\"\r\n                          style={stlStatus ? styles : this.styleBgImg}\r\n                        >\r\n                          <div className=\"trailit_img_content\">\r\n                            <div className=\"trailit_top\">\r\n                              {this.props.title !== \"Followed\" && (\r\n                                <div className=\"trailit_dotsMenu\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={this.handleClickMenu}\r\n                                    className=\"trailit_dotsButton\"\r\n                                  >\r\n                                    <img\r\n                                      width=\"16px\"\r\n                                      src={require(\"../../images/dots.svg\")}\r\n                                      alt=\"dots\"\r\n                                    />\r\n                                  </button>\r\n                                  {this.state.showMenu && (\r\n                                    <div className=\"trailit_dotsMenuList\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.onPublishLink(e, res)\r\n                                        }\r\n                                      >\r\n                                        Share\r\n                                      </button>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.onClickToEdit(e, res)\r\n                                        }\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      {/* <button type=\"button\">Publish</button> */}\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.deleteButtonHandler(e, res)\r\n                                        }\r\n                                      >\r\n                                        Delete\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"trailit_bottom\">\r\n                              <div className=\"trailit_bottom_content d-flex justify-content-between\">\r\n                                <div className=\"trailit_10_500_roboto trailit_text_white align-items-center d-flex\">\r\n                                  <img\r\n                                    alt=\"user_image\"\r\n                                    className=\"trialit_user\"\r\n                                    src={\r\n                                      this.props.title === \"Followed\"\r\n                                        ? res.userData &&\r\n                                          res.userData.profileImage !== \"\"\r\n                                          ? res.userData.profileImage\r\n                                          : require(\"../../images/user.png\")\r\n                                        : profileImage == \"\"\r\n                                        ? require(\"../../images/user.png\")\r\n                                        : profileImage\r\n                                    }\r\n                                  />\r\n                                  <span className=\"trailit_ml2 trailit_ellipsis_40\">\r\n                                    {res.trail_name}\r\n                                  </span>\r\n                                </div>\r\n                                <div className=\"trailit_8_500_roboto trailit_text_white align-items-center d-flex\">\r\n                                  <img\r\n                                    alt=\"trailit_coin\"\r\n                                    width=\"11px\"\r\n                                    src={require(\"../../images/trailit_coin.png\")}\r\n                                  />\r\n                                  <span className=\"trailit_ml2\">94</span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"trailit_bx_title\">\r\n                        <div className=\"trailit_10_500 trailit_ellips_2line\">\r\n                          {res.trail_description}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfileList;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/AppUtill.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/trailOverlay.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/tooltip.js",["640","641","642","643","644"],"import React from 'react';\r\nimport { Popover, PopoverBody } from 'reactstrap';\r\nimport $ from 'jquery';\r\n\r\nimport {\r\n    commonTypeSelectonButton, \r\n    commonInitialRenderFunction, \r\n    commonTooltipFormFunction,\r\n    handleFileChange,\r\n    commonFileUploadFunction\r\n} from './common';\r\n\r\nclass Tooltip extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            selectedForm: 'text',\r\n            fileLoading: false,\r\n            fileAddStatus: false,\r\n            title: '',\r\n            description: '',\r\n            web_url: '',\r\n            tourType: '',\r\n            selectedOption: { value: 'text', label: 'Text' },\r\n            trailStatus: 'text',\r\n            showPreview: false,\r\n            fileName: ''\r\n        }\r\n    }\r\n    \r\n    onSelectOption = trailStatus => {\r\n        this.setState({ trailStatus });\r\n    };\r\n    \r\n    componentDidMount() {\r\n        // this.props.form.resetFields();\r\n        // document.querySelector('.textarea-desc').setAttribute('contenteditable', 'true');\r\n        // document.querySelector('.input-title').setAttribute('contenteditable', 'true');\r\n        \r\n        let bounding = document.querySelector(this.props.uniqueTarget).getBoundingClientRect();\r\n        let targetElement = \"html, body\";\r\n        const y = document.querySelector(this.props.uniqueTarget).getBoundingClientRect().top + document.querySelector(targetElement).scrollTop + bounding.height - 300;\r\n        $(targetElement).stop().animate({\r\n            scrollTop: y\r\n        }, 1000);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        // this.props.form.resetFields();\r\n    }\r\n    \r\n    /**\r\n     * on click to save tooltip\r\n    */\r\n    onClickToSubmit = e => {\r\n        // e.preventDefault();\r\n        \r\n        let obj = {};\r\n        const { onCancel, onSave, rowData, target, count } = this.props;\r\n        const { description } = this.state;\r\n        \r\n        if (this.state.trailStatus === 'text') {\r\n            // this.props.form.validateFields((err, values) => {\r\n            //     if (err || values.title === '' || (!description || description === '')) {\r\n            //         if (this.props.type === 'Make Edit') {\r\n            //             obj = {\r\n            //                 ...rowData,\r\n            //                 url: document.URL,\r\n            //                 unique_target_one:this.props.uniqueTarget,\r\n            //                 // class: this.props.path[0].className,\r\n            //                 type: 'tooltip',\r\n            //                 responsive: 'mobile',\r\n            //                 mobile_media_type: this.state.trailStatus,\r\n            //                 mobile_title: this.state.title,\r\n            //                 mobile_description: this.state.description,\r\n            //                 web_url: this.state.web_url\r\n            //             };\r\n            //         }\r\n\r\n            //         return;\r\n            //     }\r\n                \r\n                let paths = \"\";\r\n                // this.props.path.map(res => {\r\n                //     return ({localName: res.localName, className: res.className, nodeType: res.nodeType, elementTrgetedIndex: this.props.elementIndex})\r\n                // });\r\n                \r\n                let selector = '';\r\n                // paths.forEach(r => {\r\n                //     // if(pathCount == 0) {\r\n                //         if(r.className) {\r\n                //             let split = r.className.split(' ').filter(r => (r!=='trail_web_user' && r!=='trail_tour_tooltip')).join('.');\r\n                //             if(split) {\r\n                //                 selector = `.${split}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             } else {\r\n                //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             }\r\n                //         } else {\r\n                //             if(r.localName) {\r\n                //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             }\r\n                //         }\r\n                //     // }\r\n                // });\r\n                \r\n                // if(this.props.elementIndex>1) {\r\n                //     selector += `:nth-of-type(${this.props.elementIndex})`;\r\n                // }\r\n                                \r\n                if (this.props.type === 'Make Edit') {\r\n                    obj = {\r\n                        ...rowData,\r\n                        url: document.URL,\r\n                        unique_target_one:this.props.uniqueTarget,\r\n                        // class: this.props.path[0].className,\r\n                        type: 'tooltip',\r\n                        responsive: 'mobile',\r\n                        mobile_media_type: this.state.trailStatus,\r\n                        mobile_title: this.state.title,\r\n                        mobile_description: this.state.description,\r\n                        web_url: this.state.web_url\r\n                    };  \r\n                } else {\r\n                    obj = {\r\n                        url: document.URL,\r\n                        uniqueTarget:this.props.uniqueTarget,\r\n                        // class: this.props.path[0].className,\r\n                        type: 'tooltip',\r\n                        mediaType: this.state.trailStatus,\r\n                        title: this.state.title,\r\n                        description: this.state.description,\r\n                        web_url: this.state.web_url\r\n                    };\r\n                }\r\n            // });\r\n\r\n        } else {\r\n            if (this.state.title === '' && this.state.web_url === '') {\r\n                return;\r\n            }\r\n            \r\n            let paths = \"\";\r\n            // this.props.path.map(res => {\r\n            //     return ({localName: res.localName, className: res.className, nodeType: res.nodeType, elementTrgetedIndex: this.props.elementIndex})\r\n            // });\r\n            \r\n            let selector = '';\r\n            // paths.forEach(r => {\r\n            //     // if(pathCount == 0) {\r\n            //         if(r.className) {\r\n            //             let split = r.className.split(' ').filter(r => (r!=='trail_web_user' && r!=='trail_tour_tooltip')).join('.');\r\n            //             if(split) {\r\n            //                 selector = `.${split}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             } else {\r\n            //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             }\r\n            //         } else {\r\n            //             if(r.localName) {\r\n            //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             }\r\n            //         }\r\n            //     // }\r\n            // });\r\n            \r\n            // if(this.props.elementIndex>1) {\r\n            //     selector += `:nth-of-type(${this.props.elementIndex})`;\r\n            // }\r\n            \r\n            if(this.props.type === 'Make Edit') {\r\n                obj = {\r\n                    ...rowData,\r\n                    type: 'tooltip',\r\n                    mediaType: this.state.trailStatus,\r\n                    unique_target_one:this.props.uniqueTarget,\r\n                    responsive: 'mobile',\r\n                    mobile_media_type: this.state.trailStatus,\r\n                    mobile_title: this.state.title,\r\n                    mobile_description: this.state.description,\r\n                    web_url: this.state.web_url\r\n                };\r\n            } else {\r\n                obj = {\r\n                    ...rowData,\r\n                    type: 'tooltip',\r\n                    mediaType: this.state.trailStatus,\r\n                    uniqueTarget:this.props.uniqueTarget,\r\n                    // class: this.props.path[0].className,\r\n                    url: document.URL,\r\n                    title: this.state.title,\r\n                    web_url: this.state.web_url\r\n                };\r\n            }\r\n        }\r\n        \r\n        // Save trail data\r\n        onSave(obj);\r\n\r\n        // Remove tooltip selected area from window or browser tab\r\n        onCancel(target, count);\r\n        \r\n        // Remove tooltip\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    // // Text/Audio/Video/image tab handler\r\n    // onClickHandler = (e, tab) => {\r\n    //     e.preventDefault();\r\n    //     // Change form\r\n    //     this.setState({ selectedForm: tab });\r\n    // };\r\n\r\n    /**\r\n     * on click visible popover\r\n    */\r\n    onClickToVisiblePopover = e => {\r\n        const { onCancel, target, count } = this.props;\r\n\r\n        this.setState({\r\n            visible: false\r\n        });\r\n\r\n        document.designMode = 'off';\r\n        onCancel(target, count);\r\n    };\r\n    \r\n    // Input change handler\r\n    onChangeToInput = (e) => {\r\n        e.stopPropagation();        \r\n        \r\n        // this.setState({ [e.target.name]: e.target.value });\r\n        this.setState({ title: e.target.value });\r\n    };\r\n    \r\n    uploadFile = (file) => {\r\n        this.setState({ fileLoading: true });\r\n        \r\n        commonFileUploadFunction(file)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tthis.setState({ \r\n                    showPreview: true, \r\n                    fileLoading: false, \r\n                    fileName: file.name, \r\n                    web_url: data.response.result.fileUrl, \r\n                    fileAddStatus: true \r\n                });\r\n            })\r\n            .catch(err => {\r\n\t\t\t\tthis.setState({ fileLoading: false });\r\n\t\t\t\tconsole.log('Error fetching profile ' + err);\r\n\t\t\t});\r\n    };\r\n    \r\n    handleChange = (e) => {\r\n        const { trailStatus } = this.state;\r\n\r\n        // Call common hadler file change function in common file\r\n        handleFileChange(e, trailStatus, this.uploadFile);\r\n    };\r\n    \r\n    // onSaveTrail = (e, data) => {\r\n    //     // saveTrail(this.state.tourType, this.state.title, this.state.web_url, data, (trailData) => {\r\n    //     //     console.log('from line: 154', trailData);\r\n\t// \t// \tthis.setState({ web_url: '', fileAddStatus: false });\r\n\t// \t// \tchrome.storage.local.set({ trail_web_user_tour: trailData, tourType: '' });\r\n    //  // });\r\n    //     this.onClickToSubmit(e);\r\n    // };\r\n    \r\n    selectedTooltipForm = (mediaType) => {\r\n        const { trailStatus, title, fileName, fileLoading } = this.state;\r\n    \r\n        // Common tooltip form function imported from common file\r\n        return commonTooltipFormFunction(\r\n            trailStatus,\r\n            title,\r\n            fileName,\r\n            fileLoading,\r\n            this.onClickToVisiblePopover,\r\n            this.onClickToSubmit,\r\n            this.onChangeToInput,\r\n            this.handleChange,\r\n            mediaType\r\n        );\r\n    };\r\n    \r\n    onTitleChangeHandler = (e) => {\r\n        e.stopPropagation();\r\n\r\n        this.setState({ title: e.target.value });\r\n    };\r\n    \r\n    onDescriptionChangeHandler = (value) => {\r\n        this.setState({ description: value });\r\n    };\r\n    \r\n    render() {\r\n        const { title, description, fileName, fileLoading } = this.state;\r\n        let tourType = 'tooltip';\r\n        \r\n        let tooltipForm = commonInitialRenderFunction(\r\n            this.state.trailStatus,\r\n            title,\r\n            description,\r\n            this.onTitleChangeHandler, \r\n            this.onDescriptionChangeHandler,\r\n            this.onClickToVisiblePopover,\r\n            this.onClickToSubmit,\r\n            this.selectedTooltipForm\r\n        );\r\n        \r\n        const { trailStatus } = this.state;\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Popover \r\n                    placement=\"top\" \r\n                    className=\"trail_tooltip\" \r\n                    isOpen={this.state.visible} \r\n                    target={'.trail_tour_tooltip'}\r\n                    // modifiers={ { arrow: '' } }\r\n                    container={ document.getElementById('extension-div').shadowRoot }\r\n                >\r\n                    <PopoverBody>\r\n                        { commonTypeSelectonButton(\r\n                            trailStatus, \r\n                            this.onSelectOption, \r\n                            tooltipForm, \r\n                            fileName,\r\n                            fileLoading,\r\n                            tourType\r\n                        ) }\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tooltip;","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/common.js",["645","646","647","648","649"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/audioTour.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/connection.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/validators.js",["650","651"],"'use strict';\nimport BN from 'bn.js';\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params numSeats: number of seats.\n */\nexport function findSeatPrice(validators, numSeats) {\n    const stakes = validators.map(v => new BN(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new BN(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new BN(1), right = stakesSum.add(new BN(1));\n    while (!left.eq(right.sub(new BN(1)))) {\n        const mid = left.add(right).div(new BN(2));\n        let found = false;\n        let currentSum = new BN(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nexport function diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/keystore.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/TrailSettingsModal.js",["652"],"import React, { Component } from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\nimport $ from \"jquery\";\nimport { Button } from \"antd\";\n\nimport SettingsComponent from \"../settingsComponents\";\n\nclass TrailSetting extends Component {\n  constructor(props) {\n    super();\n  }\n\n  componentDidMount() {\n    // window.scrollTo(0, 0);\n    const scrollTop = $(window).scrollTop();\n    $(\"html, body\").animate({ scrollTop: scrollTop });\n  }\n\n  hideModal = () => {\n    // Call this.props.hideModal function\n    this.props.hideModal();\n  };\n\n  render() {\n    $(document).ready(() => {\n      const modalDiv = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".trail_setting_modal\");\n      if (modalDiv) {\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\n            \"class\",\n            \"trial_modal_show trial_create_modal_main\"\n          );\n        }\n      }\n    });\n\n    return (\n      <Modal\n        centered={true}\n        toggle={this.hideModal}\n        isOpen={this.props.show}\n        className=\"tr_modal trail_create_modal trail_setting_modal\"\n        container={document.getElementById(\"extension-div\").shadowRoot}\n      >\n        <ModalHeader className=\"tr_modal_trail_modal_header\">\n          Trail Settings\n        </ModalHeader>\n        <ModalBody>\n          <SettingsComponent />\n          <div className=\"trailButtonsWrapper\">\n            <Button type=\"primary\" onClick={this.hideModal}>\n              Close\n            </Button>\n          </div>\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default TrailSetting;\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/CreateTourConfirmationModal.js",["653"],"import React, { Component } from \"react\";\nimport { Modal, ModalBody, ModalHeader } from \"reactstrap\";\nimport $ from \"jquery\";\n\nclass CreateTourConfirmationModal extends Component {\n  componentDidMount() {\n    const scrollTop = $(window).scrollTop();\n    $(\"html, body\").animate({ scrollTop: scrollTop });\n  }\n\n  render() {\n    const { data, onModalClose, onTourSelect, textType } = this.props;\n    const { show, tourType } = data;\n\n    $(() => {\n      const modalDiv = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".tr_modal\");\n\n      if (modalDiv) {\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\n            \"class\",\n            \"trial_modal_show trial_create_modal_main\"\n          );\n        }\n      }\n    });\n\n    return (\n      <Modal\n        // size='sm'\n        isOpen={show}\n        centered={true}\n        toggle={onModalClose}\n        className=\"tr_modal trail_create_modal\"\n        container={document.getElementById(\"extension-div\").shadowRoot}\n      >\n        <ModalHeader\n          toggle={onModalClose}\n          className=\"tr_modal_trail_modal_header confirmation_modal\"\n          closeButton\n        ></ModalHeader>\n        <ModalBody>\n          <p className=\"continue-modal-text\">Select {tourType} Format</p>\n          {tourType === \"video\" ? (\n            <div className=\"modal-and-bubble-option-container\">\n              <div\n                className=\"video-modal-option\"\n                onClick={(e) => onTourSelect(tourType, `${tourType} Modal`)}\n              >\n                <div className=\"video-modal-container\">\n                  {/* <svg\n                    width=\"106\"\n                    height=\"79\"\n                    viewBox=\"0 0 106 79\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <rect\n                      x=\"3.5\"\n                      y=\"3.5\"\n                      width=\"99\"\n                      height=\"72\"\n                      rx=\"6.5\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"7\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"0\"\n                        y1=\"0\"\n                        x2=\"112.127\"\n                        y2=\"53.5862\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#E54986\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg> */}\n\n                  <svg\n                    width=\"85\"\n                    height=\"63\"\n                    viewBox=\"0 0 85 63\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <rect\n                      x=\"3\"\n                      y=\"3\"\n                      width=\"79\"\n                      height=\"57\"\n                      rx=\"7\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"6\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"0\"\n                        y1=\"0\"\n                        x2=\"89.7275\"\n                        y2=\"43.119\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#E54986\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg>\n\n                  <svg\n                    width=\"22\"\n                    height=\"25\"\n                    fill=\"none\"\n                    viewBox=\"0 0 22 25\"\n                    className=\"modal-video-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M21 10.768C22.3333 11.5378 22.3333 13.4623 21 14.2321L3.75 24.1913C2.41666 24.9611 0.750001 23.9989 0.750001 22.4593L0.750002 2.54071C0.750002 1.0011 2.41667 0.0388563 3.75 0.808657L21 10.768Z\"\n                      fill=\"#D02176\"\n                    />\n                  </svg>\n\n                  {/* <svg\n                    width=\"28\"\n                    height=\"31\"\n                    fill=\"none\"\n                    viewBox=\"0 0 28 31\"\n                    className=\"modal-video-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M27 13.7679C28.3333 14.5377 28.3333 16.4622 27 17.232L3.75 30.6554C2.41667 31.4252 0.749998 30.463 0.749999 28.9234L0.75 2.0766C0.75 0.537005 2.41667 -0.425246 3.75 0.344555L27 13.7679Z\"\n                      fill=\"#C4C4C4\"\n                    />\n                  </svg> */}\n                </div>\n\n                <span className=\"confirmation-modal-span custom-css\">\n                  {tourType}\n                </span>\n              </div>\n              <div\n                className=\"video-bubble-option\"\n                onClick={(e) => onTourSelect(tourType, `${tourType} Bubble`)}\n              >\n                <div>\n                  <svg\n                    width=\"80\"\n                    height=\"80\"\n                    viewBox=\"0 0 80 80\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle\n                      cx=\"40\"\n                      cy=\"40\"\n                      r=\"37\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"6\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"0\"\n                        y1=\"0\"\n                        x2=\"73\"\n                        y2=\"87.5\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#D41E79\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg>\n\n                  <svg\n                    width=\"35\"\n                    height=\"44\"\n                    fill=\"none\"\n                    viewBox=\"0 0 35 44\"\n                    className=\"bubble_user_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M17.2397 0C14.9536 0 12.7611 0.908163 11.1446 2.5247C9.52804 4.14124 8.61987 6.33374 8.61987 8.61988C8.61987 10.906 9.52804 13.0985 11.1446 14.715C12.7611 16.3316 14.9536 17.2398 17.2397 17.2398C19.5259 17.2398 21.7184 16.3316 23.3349 14.715C24.9515 13.0985 25.8596 10.906 25.8596 8.61988C25.8596 6.33374 24.9515 4.14124 23.3349 2.5247C21.7184 0.908163 19.5259 0 17.2397 0Z\"\n                      fill=\"#D41E79\"\n                    />\n                    <path\n                      d=\"M28.0146 21.5497H6.46491C4.75031 21.5497 3.10593 22.2308 1.89353 23.4432C0.681122 24.6556 0 26.3 0 28.0146C0 32.8245 1.97826 36.6776 5.22364 39.2851C8.41731 41.8495 12.7014 43.0994 17.2398 43.0994C21.7781 43.0994 26.0622 41.8495 29.2559 39.2851C32.4969 36.6776 34.4795 32.8245 34.4795 28.0146C34.4795 26.3 33.7984 24.6556 32.586 23.4432C31.3736 22.2308 29.7292 21.5497 28.0146 21.5497Z\"\n                      fill=\"#D41E79\"\n                    />\n                  </svg>\n                </div>\n\n                <span className=\"confirmation-modal-span\">\n                  {tourType} Bubble\n                </span>\n              </div>\n            </div>\n          ) : (\n            <div className=\"modal-and-bubble-option-container\">\n              <div\n                className=\"audio-modal-option\"\n                onClick={(e) => onTourSelect(tourType, `${tourType} Modal`)}\n              >\n                <div className=\"audio-modal-container\">\n                  {/* <svg\n                    width=\"127\"\n                    height=\"79\"\n                    viewBox=\"0 0 127 79\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <rect\n                      x=\"3.5\"\n                      y=\"3.5\"\n                      width=\"120\"\n                      height=\"72\"\n                      rx=\"36\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"7\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"0\"\n                        y1=\"0\"\n                        x2=\"124.278\"\n                        y2=\"71.1599\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#E54986\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg> */}\n\n                  <svg\n                    width=\"85\"\n                    height=\"63\"\n                    viewBox=\"0 0 85 63\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <rect\n                      x=\"3\"\n                      y=\"3\"\n                      width=\"79\"\n                      height=\"57\"\n                      rx=\"7\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"6\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"0\"\n                        y1=\"0\"\n                        x2=\"89.7275\"\n                        y2=\"43.119\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#E54986\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg>\n\n                  <svg\n                    width=\"20\"\n                    height=\"27\"\n                    fill=\"none\"\n                    viewBox=\"0 0 20 27\"\n                    className=\"modal-audio-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M10 16.875C12.8455 16.875 15.1515 14.6089 15.1515 11.8125V5.0625C15.1515 2.26607 12.8455 0 10 0C7.15455 0 4.84848 2.26607 4.84848 5.0625V11.8125C4.84848 14.6089 7.15455 16.875 10 16.875ZM20 11.7522C20 11.6196 19.8909 11.5112 19.7576 11.5112H17.9394C17.8061 11.5112 17.697 11.6196 17.697 11.7522C17.697 15.98 14.2515 19.4062 10 19.4062C5.74849 19.4062 2.30303 15.98 2.30303 11.7522C2.30303 11.6196 2.19394 11.5112 2.06061 11.5112H0.242424C0.109091 11.5112 0 11.6196 0 11.7522C0 16.8358 3.83636 21.0305 8.78788 21.6241V24.7098H4.38485C3.9697 24.7098 3.63636 25.1407 3.63636 25.6741V26.7589C3.63636 26.8915 3.72121 27 3.82424 27H16.1758C16.2788 27 16.3636 26.8915 16.3636 26.7589V25.6741C16.3636 25.1407 16.0303 24.7098 15.6152 24.7098H11.0909V21.6392C16.1 21.0968 20 16.878 20 11.7522Z\"\n                      fill=\"#D41E79\"\n                    />\n                  </svg>\n\n                  {/* <svg\n                    width=\"31\"\n                    height=\"42\"\n                    viewBox=\"0 0 31 42\"\n                    fill=\"none\"\n                    className=\"modal-audio-svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M15.5 26.25C19.9105 26.25 23.4848 22.725 23.4848 18.375V7.875C23.4848 3.525 19.9105 0 15.5 0C11.0895 0 7.51515 3.525 7.51515 7.875V18.375C7.51515 22.725 11.0895 26.25 15.5 26.25ZM31 18.2812C31 18.075 30.8309 17.9062 30.6242 17.9062H27.8061C27.5994 17.9062 27.4303 18.075 27.4303 18.2812C27.4303 24.8578 22.0898 30.1875 15.5 30.1875C8.91015 30.1875 3.5697 24.8578 3.5697 18.2812C3.5697 18.075 3.40061 17.9062 3.19394 17.9062H0.375758C0.169091 17.9062 0 18.075 0 18.2812C0 26.1891 5.94636 32.7141 13.6212 33.6375V38.4375H6.79652C6.15303 38.4375 5.63636 39.1078 5.63636 39.9375V41.625C5.63636 41.8312 5.76788 42 5.92758 42H25.0724C25.2321 42 25.3636 41.8312 25.3636 41.625V39.9375C25.3636 39.1078 24.847 38.4375 24.2035 38.4375H17.1909V33.6609C24.955 32.8172 31 26.2547 31 18.2812Z\"\n                      fill=\"#BCBCBC\"\n                    />\n                  </svg> */}\n                </div>\n\n                <span className=\"confirmation-modal-span custom-css\">\n                  {tourType}\n                </span>\n              </div>\n              <div\n                className=\"audio-bubble-option\"\n                onClick={(e) => onTourSelect(tourType, `${tourType} Bubble`)}\n              >\n                <div>\n                  {/* <svg\n                    width=\"100\"\n                    height=\"100\"\n                    viewBox=\"0 0 100 100\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle\n                      cx=\"50\"\n                      cy=\"50\"\n                      r=\"46.5\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"7\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"15\"\n                        y1=\"14\"\n                        x2=\"83\"\n                        y2=\"86\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#D02176\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg> */}\n\n                  <svg\n                    width=\"80\"\n                    height=\"80\"\n                    viewBox=\"0 0 80 80\"\n                    fill=\"none\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <circle\n                      cx=\"40\"\n                      cy=\"40\"\n                      r=\"37\"\n                      fill=\"white\"\n                      stroke=\"url(#paint0_linear)\"\n                      stroke-width=\"6\"\n                    />\n                    <defs>\n                      <linearGradient\n                        id=\"paint0_linear\"\n                        x1=\"14\"\n                        y1=\"10.5\"\n                        x2=\"70.5\"\n                        y2=\"80\"\n                        gradientUnits=\"userSpaceOnUse\"\n                      >\n                        <stop stop-color=\"#D41E79\" />\n                        <stop offset=\"1\" stop-color=\"#F2C94C\" />\n                      </linearGradient>\n                    </defs>\n                  </svg>\n\n                  <svg\n                    width=\"20\"\n                    height=\"27\"\n                    fill=\"none\"\n                    viewBox=\"0 0 20 27\"\n                    className=\"bubble_mic_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M10 16.875C12.8455 16.875 15.1515 14.6089 15.1515 11.8125V5.0625C15.1515 2.26607 12.8455 0 10 0C7.15455 0 4.84848 2.26607 4.84848 5.0625V11.8125C4.84848 14.6089 7.15455 16.875 10 16.875ZM20 11.7522C20 11.6196 19.8909 11.5112 19.7576 11.5112H17.9394C17.8061 11.5112 17.697 11.6196 17.697 11.7522C17.697 15.98 14.2515 19.4062 10 19.4062C5.74849 19.4062 2.30303 15.98 2.30303 11.7522C2.30303 11.6196 2.19394 11.5112 2.06061 11.5112H0.242424C0.109091 11.5112 0 11.6196 0 11.7522C0 16.8358 3.83636 21.0305 8.78788 21.6241V24.7098H4.38485C3.9697 24.7098 3.63636 25.1407 3.63636 25.6741V26.7589C3.63636 26.8915 3.72121 27 3.82424 27H16.1758C16.2788 27 16.3636 26.8915 16.3636 26.7589V25.6741C16.3636 25.1407 16.0303 24.7098 15.6152 24.7098H11.0909V21.6392C16.1 21.0968 20 16.878 20 11.7522Z\"\n                      fill=\"#D41E79\"\n                    />\n                  </svg>\n\n                  {/* <svg\n                    width=\"31\"\n                    height=\"42\"\n                    viewBox=\"0 0 31 42\"\n                    fill=\"none\"\n                    className=\"bubble_mic_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                  >\n                    <path\n                      d=\"M15.5 26.25C19.9105 26.25 23.4848 22.725 23.4848 18.375V7.875C23.4848 3.525 19.9105 0 15.5 0C11.0895 0 7.51515 3.525 7.51515 7.875V18.375C7.51515 22.725 11.0895 26.25 15.5 26.25ZM31 18.2812C31 18.075 30.8309 17.9062 30.6242 17.9062H27.8061C27.5994 17.9062 27.4303 18.075 27.4303 18.2812C27.4303 24.8578 22.0898 30.1875 15.5 30.1875C8.91015 30.1875 3.5697 24.8578 3.5697 18.2812C3.5697 18.075 3.40061 17.9062 3.19394 17.9062H0.375758C0.169091 17.9062 0 18.075 0 18.2812C0 26.1891 5.94636 32.7141 13.6212 33.6375V38.4375H6.79652C6.15303 38.4375 5.63636 39.1078 5.63636 39.9375V41.625C5.63636 41.8312 5.76788 42 5.92758 42H25.0724C25.2321 42 25.3636 41.8312 25.3636 41.625V39.9375C25.3636 39.1078 24.847 38.4375 24.2035 38.4375H17.1909V33.6609C24.955 32.8172 31 26.2547 31 18.2812Z\"\n                      fill=\"#BCBCBC\"\n                    />\n                  </svg> */}\n                </div>\n\n                <span className=\"confirmation-modal-span\">\n                  {tourType} Bubble\n                </span>\n              </div>\n            </div>\n          )}\n        </ModalBody>\n      </Modal>\n    );\n  }\n}\n\nexport default CreateTourConfirmationModal;\n\n// {/* <div className=\"trailButtonsWrapper\">\n//   {/* <button\n//               type=\"button\"\n//               className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n//               onClick={(e) => onTourSelect(textType, `${textType} Modal`)}\n//             >\n//               {textType} Modal\n//             </button> */}\n//   <button\n//     type=\"button\"\n//     className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n//     onClick={(e) => onTourSelect(tourType, `${tourType} Modal`)}\n//   >\n//     {tourType} Modal\n//   </button>\n//   <button\n//     type=\"button\"\n//     className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n//     onClick={(e) => onTourSelect(tourType, `${tourType} Bubble`)}\n//   >\n//     {tourType} Bubble\n//   </button>\n// </div>; */}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/sendtx.js",[],["654","655"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/stopePlayingMedia.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/textEditor.js",["656"],"import React, { useEffect, memo, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faBold,\n  faItalic,\n  faUnderline,\n  faLink,\n  faStrikethrough,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { textEditor1 } from \"../css/textEditor\";\n\nconst TextEditor = memo((props) => {\n  const { onChange } = props;\n\n  // State\n  const [link, setLink] = useState(\"\");\n\n  // Remove create link container function\n  const removeCreateLinkContainer = () => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Remove create link modal\n    shadowRoot.querySelector(\".create-link-container\").style.display = \"none\";\n\n    // Set set link state\n    setLink(\"\");\n  };\n\n  // On input change handler function\n  const onInputChangeHandler = (e) => {\n    // Set link state\n    setLink(e.target.value);\n  };\n\n  // On iframe body click function\n  const onIframeBodyClick = () => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    shadowRoot\n      .querySelector(\"iframe\")\n      .contentWindow.document.body.addEventListener(\"click\", (e) => {\n        // Call remove create link container\n        removeCreateLinkContainer();\n\n        if (e.target.tagName === \"BODY\") return;\n\n        if (e.target.tagName === \"STRIKE\") {\n          // Add active-text-button class to strikeThrough button\n          shadowRoot\n            .querySelector(\".strikeThrough\")\n            .classList.add(\"active-text-button\");\n        } else {\n          // Remove active-text-button class to strikeThrough button\n          shadowRoot\n            .querySelector(\".strikeThrough\")\n            .classList.remove(\"active-text-button\");\n        }\n\n        if (e.target.tagName === \"B\") {\n          // Add active-text-button class to bold button\n          shadowRoot.querySelector(\".bold\").classList.add(\"active-text-button\");\n        } else {\n          // Remove active-text-button class to bold button\n          shadowRoot\n            .querySelector(\".bold\")\n            .classList.remove(\"active-text-button\");\n        }\n\n        if (e.target.tagName === \"U\") {\n          // Add active-text-button class to underline button\n          shadowRoot\n            .querySelector(\".underline\")\n            .classList.add(\"active-text-button\");\n        } else {\n          // Remove active-text-button class to underline button\n          shadowRoot\n            .querySelector(\".underline\")\n            .classList.remove(\"active-text-button\");\n        }\n\n        if (e.target.tagName === \"I\") {\n          // Add active-text-button class to italic button\n          shadowRoot\n            .querySelector(\".italic\")\n            .classList.add(\"active-text-button\");\n        } else {\n          // Remove active-text-button class to italic button\n          shadowRoot\n            .querySelector(\".italic\")\n            .classList.remove(\"active-text-button\");\n        }\n      });\n  };\n\n  // Udate description function\n  const updateDescription = () => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n    if (\n      shadowRoot.querySelector(\"iframe\") &&\n      shadowRoot\n        .querySelector(\"iframe\")\n        .contentWindow.document.body.getAttribute(\"eventadded\") !== \"true\"\n    ) {\n      shadowRoot\n        .querySelector(\"iframe\")\n        .contentWindow.document.body.setAttribute(\"eventadded\", \"true\");\n      shadowRoot\n        .querySelector(\"iframe\")\n        .contentWindow.document.body.addEventListener(\"keyup\", (e) => {\n          e.preventDefault();\n\n          // Call change function of parent component\n          onChange(e.target.innerHTML);\n        });\n    }\n  };\n\n  // On button click handler function\n  const onButtonClickHandler = (command) => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Toggle button\n    shadowRoot\n      .querySelector(`.${command}`)\n      .classList.toggle(\"active-text-button\");\n\n    // Execute exec command function\n    shadowRoot\n      .querySelector(\"iframe\")\n      .contentWindow.document.execCommand(command, false, null);\n\n    // Get innerHTML of body\n    const description = shadowRoot.querySelector(\"iframe\").contentWindow\n      .document.body.innerHTML;\n\n    // Call on change function\n    onChange(description);\n  };\n\n  // On link click handler function\n  const onLinkClickHandler = (command) => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Toggle button\n    shadowRoot\n      .querySelector(`.${command}`)\n      .classList.toggle(\"active-text-button\");\n\n    const linkContainer = shadowRoot.querySelector(\".create-link-container\");\n    const display = getComputedStyle(linkContainer).display;\n    shadowRoot.querySelector(\".create-link-container\").style.display =\n      display === \"none\" ? \"block\" : \"none\";\n\n    if (display === \"none\") return;\n\n    // Set set link state\n    setLink(\"\");\n  };\n\n  // On create link click handler function\n  const onCreateLinkClickHandler = (command) => {\n    if (!link.includes(\"https://\")) return;\n\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Execute exec command function\n    shadowRoot\n      .querySelector(\"iframe\")\n      .contentWindow.document.execCommand(command, false, link);\n\n    // Remove active-text-button class\n    shadowRoot\n      .querySelector(\".linkButton\")\n      .classList.remove(\"active-text-button\");\n\n    // Call remove create link container\n    removeCreateLinkContainer();\n  };\n\n  // On unlink click handler function\n  const onUnlinkClickHandler = (command) => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Execute exec command function\n    shadowRoot\n      .querySelector(\"iframe\")\n      .contentWindow.document.execCommand(command, false, null);\n\n    // Remove active-text-button class\n    shadowRoot\n      .querySelector(\".linkButton\")\n      .classList.remove(\"active-text-button\");\n\n    // Call remove create link container\n    removeCreateLinkContainer();\n  };\n\n  // Enable edit moda function\n  const enableEditMode = () => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Content editable true\n    shadowRoot.querySelector(\n      \"iframe\"\n    ).contentWindow.document.body.contentEditable = true;\n  };\n\n  useEffect(() => {\n    // Call enable edit mode function\n    enableEditMode();\n\n    // Call update description function\n    updateDescription();\n\n    // Call on iframe body click function\n    onIframeBodyClick();\n\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n    const frame = shadowRoot.querySelector(\"iframe\");\n\n    if (frame) {\n      const link = document.createElement(\"link\");\n      link.type = \"text/css\";\n      link.rel = \"stylesheet\";\n      link.href =\n        \"https://fonts.googleapis.com/css2?family=Lato:wght@400;700&display=swap\";\n      frame.contentDocument.head.appendChild(link);\n\n      frame.contentDocument.body.style.fontFamily = \"Lato, sans-serif\";\n      frame.contentDocument.body.style.fontSize = \"14px\";\n    }\n  }, []);\n\n  return (\n    <>\n      <style>{textEditor1}</style>\n      <div id=\"custom-text-editor\">\n        <div className=\"button-container\">\n          <button\n            type=\"button\"\n            className=\"text-editor-button bold\"\n            onClick={(e) => onButtonClickHandler(\"bold\")}\n          >\n            <FontAwesomeIcon icon={faBold} size=\"sm\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-editor-button italic\"\n            onClick={(e) => onButtonClickHandler(\"italic\")}\n          >\n            <FontAwesomeIcon icon={faItalic} size=\"sm\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-editor-button underline\"\n            onClick={(e) => onButtonClickHandler(\"underline\")}\n          >\n            <FontAwesomeIcon icon={faUnderline} size=\"sm\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-editor-button strikeThrough\"\n            onClick={(e) => onButtonClickHandler(\"strikeThrough\")}\n          >\n            <FontAwesomeIcon icon={faStrikethrough} size=\"sm\" />\n          </button>\n          <button\n            type=\"button\"\n            className=\"text-editor-button linkButton\"\n            onClick={(e) => onLinkClickHandler(\"linkButton\")}\n          >\n            <FontAwesomeIcon icon={faLink} size=\"sm\" />\n          </button>\n        </div>\n\n        <div className=\"create-link-container\">\n          <div className=\"create-link\">\n            <input\n              value={link}\n              className=\"create-link-input\"\n              onChange={(e) => onInputChangeHandler(e)}\n            />\n            <div className=\"create-link-button-container\">\n              <input\n                value=\"Link\"\n                type=\"button\"\n                className=\"create-link-button\"\n                onClick={(e) => onCreateLinkClickHandler(\"createLink\")}\n              />\n              <input\n                type=\"button\"\n                value=\"Unlink\"\n                className=\"create-link-button\"\n                onClick={(e) => onUnlinkClickHandler(\"unlink\")}\n              />\n            </div>\n          </div>\n        </div>\n\n        <iframe\n          name=\"richTextField\"\n          title=\"custom-text-editor\"\n          className=\"text-editor-frame\"\n        ></iframe>\n      </div>\n    </>\n  );\n});\n\nexport default TextEditor;\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/textEditor.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/transaction.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/code/generateKey.js",["657","658"],"const { KeyPair } = require('../near-api-js/common-index.js');\n// const URL = require('url').URL;\n\nconst config = require('./config.json');\n\nconst keyPair = KeyPair.fromRandom('ed25519');\nconst publicKey = keyPair.getPublicKey().toString();\n\n// console.log(`This should be saved to storage: ${keyPair.toString()}`);\n\nexport function keyPairGenerate() {\n    // const url = new URL(`${config.walletUrl}/login/`);\n    // url.searchParams.set('title', 'Trailit');\n    // url.searchParams.set('public_key', publicKey);\n    // url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n    // console.log(`Navigate to ${url.toString()} to authorize the above keypair`);\n    return keyPair.toString();\n};\n\n// const url = new URL(`${config.walletUrl}/login/`);\n// url.searchParams.set('title', 'Trailit');\n// url.searchParams.set('public_key', publicKey);\n// url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n// console.log(`Navigate to ${url.toString()} to authorize the above keypair`);","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/TrailDeleteModal.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/common-index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/key_pair.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/in_memory_key_store.js",["659","660","661","662","663","664","665"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * Simple in-memory keystore for testing purposes.\n */\nexport class InMemoryKeyStore extends KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Sets an in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a key from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Sets all in-memory keys to empty objects\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\n",["666","667"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/errors.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/format.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/App.js",["668","669"],"import React from \"react\";\nimport $ from \"jquery\";\n\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\n\nimport { logout } from \"./common/axios\";\nimport {\n  ForgotPassword,\n  Login,\n  UserConfirmation,\n  UserProfile,\n  UserVerification,\n  OtpVerification,\n  Signup,\n  ConfirmPassword,\n} from \"./components\";\n\nconst chrome = window.chrome;\nlet bkg = chrome.extension.getBackgroundPage();\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: {\n        login: false,\n        signup: true,\n        forgotPassword: false,\n        userConfirmation: false,\n        userVerification: false,\n        userProfile: false,\n        otpVerification: false,\n        confirmPassword: false,\n      },\n      token: \"\",\n    };\n  }\n\n  componentDidMount() {\n    $(\"#my-extension-root-flip\").remove();\n    chrome.storage.local.get(\n      [\"authToken\", \"userData\", \"isAuth\"],\n      function (items) {\n        if (items.userData) {\n          this.onClickToRedirect(\"userProfile\");\n\n          if (items.isAuth) {\n            chrome.runtime.sendMessage({ userLoggedIn: true });\n          }\n        } else {\n          this.onClickToRedirect(\"login\");\n          chrome.runtime.sendMessage({ userLoggedIn: false });\n        }\n      }.bind(this)\n    );\n  }\n\n  /**\n   * go to perticular component\n   */\n  onClickToRedirect = (cmp) => {\n    const { active } = this.state;\n\n    Object.keys(active).map((res) => (active[res] = false));\n    active[cmp] = true;\n    this.setState({ active });\n  };\n\n  onClickToLogout = async () => {\n    try {\n      // Remove side tab if open\n      $(\"body\").attr(\"class\", \"\");\n\n      // Call logout api\n      await logout();\n\n      this.onClickToRedirect(\"login\");\n      chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n        chrome.tabs.sendMessage(tabs[0].id, { status: \"logout\" });\n      });\n      chrome.runtime.sendMessage({ badgeText: `` });\n      chrome.storage.local.set({\n        trail_web_user_tour: [],\n        notification: true,\n        closeContinue: false,\n      });\n      chrome.storage.local.clear();\n    } catch (err) {\n      console.log(\"err\", err);\n    }\n  };\n\n  render() {\n    const {\n      login,\n      forgotPassword,\n      userConfirmation,\n      userVerification,\n      userProfile,\n      otpVerification,\n      signup,\n      confirmPassword,\n    } = this.state.active;\n\n    chrome.storage.local.get([\"isAuth\"], function (items) {\n      if (items.isAuth) {\n        if ($(\".trail_overlay\").attr(\"class\") !== undefined) {\n          $(\".trail_overlay\").remove();\n        }\n        // if($('.my-extension-defaultroot').attr('class')=='block') {\n        $(\".my-extension-defaultroot\").css({ display: \"none\" });\n        // }\n\n        // if($('.my-extension-root').attr('class')=='block') {\n        $(\".my-extension-root\").css({ display: \"none\" });\n        // }\n      }\n    });\n\n    return (\n      <div className={\"trailMain\"}>\n        {login && <Login clickToRedirect={this.onClickToRedirect} />}\n        {forgotPassword && (\n          <ForgotPassword clickToRedirect={this.onClickToRedirect} />\n        )}\n        {userConfirmation && (\n          <UserConfirmation clickToRedirect={this.onClickToRedirect} />\n        )}\n        {userVerification && (\n          <UserVerification clickToRedirect={this.onClickToRedirect} />\n        )}\n        {userProfile && (\n          <UserProfile\n            clickToRedirect={this.onClickToRedirect}\n            onClickToLogout={this.onClickToLogout}\n          />\n        )}\n        {otpVerification && (\n          <OtpVerification clickToRedirect={this.onClickToRedirect} />\n        )}\n        {signup && <Signup clickToRedirect={this.onClickToRedirect} />}\n        {confirmPassword && (\n          <ConfirmPassword clickToRedirect={this.onClickToRedirect} />\n        )}\n      </div>\n    );\n  }\n}\n\nchrome.storage.onChanged.addListener(function (changes, namespace) {\n  for (var key in changes) {\n    var storageChange = changes[key];\n  }\n});\n\nexport default App;\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/trailitLogoInPreview.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/videoTour.js",["670","671","672","673","674"],"import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport $ from \"jquery\";\r\nimport Dragabilly from \"draggabilly\";\r\nimport { Button } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport dragElement from \"../common/draggable\";\r\nimport { videoTourCss1 } from \"../css/videoTour\";\r\nimport { stopMediaPlaying } from \"../common/stopePlayingMedia\";\r\nimport {\r\n  addTrailitLogo,\r\n  removeTrailitLogo,\r\n} from \"../common/trailitLogoInPreview\";\r\nimport ContinueTourConfirmation from \"./Modal/ContinueTourConfirmation\";\r\n\r\nlet draggie, dragEle;\r\nconst chrome = window.chrome;\r\nclass VideoTour extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullScreen: true,\r\n      loadVideo: false,\r\n      draggable: false,\r\n      webUrl: \"\",\r\n    };\r\n  }\r\n\r\n  handleWithoutLogin = (event, tourSide, type, currentStep) => {\r\n    chrome.storage.local.get([\"isGuest\"], (items) => {\r\n      if (currentStep % 3 === 0 && tourSide === \"next\" && items.isGuest) {\r\n        this.props.videoToggle();\r\n      } else {\r\n        this.onClickToManagePopoverButton(event, tourSide);\r\n      }\r\n    });\r\n  };\r\n\r\n  continueTrailWithoutLogin = (event, tourSide) => {\r\n    this.onClickToManagePopoverButton(event, tourSide);\r\n    this.props.videoToggle();\r\n  };\r\n\r\n  toSignInWithoutLogin = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  elementDragging = () => {\r\n    dragEle = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.querySelector(\".video-wrap_tooltip\");\r\n    draggie = new Dragabilly(dragEle);\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Make the DIV element draggable\r\n    // this.elementDragging();\r\n    this.setState({ loadVideo: true, fullScreen: false, draggable: true });\r\n    let video = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.getElementById(\"trail_video\");\r\n    const playButton = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.querySelector(\".tr_play_button\");\r\n    playButton.style.display = \"block\";\r\n    // $('.tr_play_button').css('display', 'block');\r\n    chrome.storage.local.get([\"AutoPlayMediaToggle\"], (items) => {\r\n      if (\r\n        items.AutoPlayMediaToggle === undefined ||\r\n        items.AutoPlayMediaToggle\r\n      ) {\r\n        video.play();\r\n        playButton.style.display = \"none\";\r\n        // let playPromise = video[0].play();\r\n        // if (playPromise !== undefined) {\r\n        //     playPromise.then(function() {\r\n        //         $('.tr_play_button').css('display', 'none');\r\n        //     }).catch(function(error) {\r\n        //         $('.tr_play_button').css('display', 'block')\r\n        //     });\r\n        // }\r\n      }\r\n    });\r\n\r\n    if (this.props.data[this.props.tourStep - 1].url !== document.URL) {\r\n      window.location.href = this.props.data[this.props.tourStep - 1].url;\r\n    }\r\n\r\n    // if(document.URL.includes('youtube.com')) {\r\n    //     let videoElem = document.querySelector('.video-stream.html5-main-video');\r\n    //     videoElem.addEventListener('onloadeddata', () => {\r\n    //         videoElem.pause();\r\n    //     })\r\n    //     setTimeout(() => {\r\n    //         videoElem.pause();\r\n    //     }, 1000)\r\n    // }\r\n\r\n    // setTimeout(() => {\r\n    //     document.querySelectorAll('video').forEach(res => {\r\n    //         if(res.className !== \"preview-video\") {\r\n    //             res.pause()\r\n    //         }\r\n    //     })\r\n    // }, 1000)\r\n\r\n    // if (document.readyState === 'complete') {\r\n    //     $(document).ready(() => {\r\n    //         // Stop playing websites audio or video\r\n    //         stopMediaPlaying();\r\n    //     });\r\n\r\n    // } else {\r\n    //     document.body.onload = function () {\r\n    //         // Stop playing websites audio or video\r\n    //         stopMediaPlaying();\r\n    //     };\r\n    // }\r\n\r\n    if (document.readyState === \"complete\") {\r\n      $(document).ready(() => {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      });\r\n    } else if (\r\n      document.readyState === \"interactive\" &&\r\n      document.URL.includes(\"https://www.youtube.com/\")\r\n    ) {\r\n      // document.body.onload = function () {\r\n      //     console.log('body is loaded!!!!');\r\n      //     // Call toggle website media\r\n      //     this.toggleWebSitesMedia();\r\n      // };\r\n      $(document).ready(() => {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      });\r\n    } else {\r\n      document.body.onload = function () {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      };\r\n    }\r\n\r\n    // let pipButton = document.getElementById('trail_pip_video_button');\r\n    // let videoShow = $('.videoShow');\r\n    // let pipWindow;\r\n\r\n    // pipButton.addEventListener('click', async function(event) {\r\n    //     pipButton.disabled = true;\r\n    //     try {\r\n    //         if (video !== document.pictureInPictureElement)\r\n    //             await video.requestPictureInPicture();\r\n    //         else\r\n    //             await document.exitPictureInPicture();\r\n    //     } catch (error) {\r\n    //     } finally {\r\n    //         pipButton.disabled = false;\r\n    //     }\r\n    // });\r\n\r\n    // video.addEventListener('enterpictureinpicture', function (event) {\r\n    //     pipWindow = event.pictureInPictureWindow;\r\n    //     video.style.display = \"none\";\r\n    //     videoShow.css({display: 'none'});\r\n    //     $('.trail_vC').css({display: 'none'});\r\n    // });\r\n\r\n    // video.addEventListener('leavepictureinpicture', function (event) {\r\n    //     video.style.display = \"block\";\r\n    //     videoShow.css({display: 'block'});\r\n    //     $('.trail_vC').css({display: 'block'});\r\n    // });\r\n\r\n    // Add trailit logo\r\n    addTrailitLogo();\r\n  }\r\n\r\n  /**\r\n   * Manage popover web user tour button\r\n   * @data tooltip data\r\n   * @step tooltip current step\r\n   */\r\n  onClickToManagePopoverButton = async (event, tourSide) => {\r\n    let { tourStep } = this.props;\r\n    let step = tourSide === \"prev\" ? tourStep - 1 : tourStep + 1;\r\n\r\n    if ($(\"body\")) {\r\n      $(\"body\").removeClass(\"trail_fullscreen\");\r\n    }\r\n\r\n    if (this.props.data[step - 1].url === document.URL) {\r\n      let type = this.props.data[step - 1].type;\r\n      this.props.tour(step, type, tourSide);\r\n    } else {\r\n      // Set loading true to show overlay\r\n      this.props.setLoadingState(true);\r\n\r\n      let type = this.props.data[step - 1].type;\r\n      await this.props.tour(step, type, tourSide);\r\n      window.location.href = this.props.data[step - 1].url;\r\n    }\r\n  };\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    let getVideo = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.getElementById(\"trail_video\");\r\n    let getSource = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.getElementById(\"sourceVideo\");\r\n\r\n    if (\r\n      getVideo !== null &&\r\n      prevState.webUrl !== nextProps.data[nextProps.tourStep - 1].web_url\r\n    ) {\r\n      getVideo.load();\r\n      if (getSource !== null) {\r\n        getSource.setAttribute(\r\n          \"src\",\r\n          nextProps.data[nextProps.tourStep - 1].web_url\r\n        );\r\n      }\r\n    }\r\n\r\n    return {\r\n      webUrl: nextProps.data[nextProps.tourStep - 1].web_url,\r\n    };\r\n  }\r\n\r\n  onClickToDoneTour = (data, step) => {\r\n    let { tourSteps } = this.props;\r\n    if ($(\"body\")) {\r\n      $(\"body\").removeClass(\"trail_fullscreen\");\r\n    }\r\n    chrome.storage.local.set({ closeContinue: false });\r\n    this.props.toggle({ removePreviewTrails: true });\r\n  };\r\n\r\n  toggleScreen = (e) => {\r\n    e.preventDefault();\r\n    if (!this.state.fullScreen && this.state.draggable) {\r\n      $(\"body\").addClass(\"trail_fullscreen\");\r\n      // Make video full screen\r\n      this.setState((prevState) => {\r\n        return {\r\n          fullScreen: !prevState.fullScreen,\r\n          draggable: false,\r\n        };\r\n      });\r\n    } else {\r\n      const shadowRootDoc = document.getElementById(\"extension-div\").shadowRoot;\r\n      // Setting top and left for small video screen\r\n      shadowRootDoc.querySelector(\".video-wrap_tooltip\").style.top =\r\n        \"calc(100% - 205px)\";\r\n      shadowRootDoc.querySelector(\".video-wrap_tooltip\").style.left =\r\n        \"calc(100% - 430px)\";\r\n\r\n      $(\"body\").removeClass(\"trail_fullscreen\");\r\n\r\n      // Make video small screen\r\n      this.setState((prevState) => {\r\n        return {\r\n          fullScreen: !prevState.fullScreen,\r\n          draggable: true,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  onClickToPlayVideo = () => {\r\n    // var video = document.getElementById('extension-div').shadowRoot.getElementById('trail_video');\r\n    // video[0].play();\r\n\r\n    let video = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.getElementById(\"trail_video\");\r\n    video.play();\r\n\r\n    const playButton = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.querySelector(\".tr_play_button\");\r\n    playButton.style.display = \"none\";\r\n    // $('.tr_play_button').css('display', 'none');\r\n  };\r\n\r\n  onClickPauseVideo = () => {\r\n    const playButton = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.querySelector(\".tr_play_button\");\r\n    playButton.style.display = \"block\";\r\n    // $('.tr_play_button').css('display', 'block')\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    // Remove trailit log\r\n    removeTrailitLogo();\r\n  }\r\n\r\n  // videoPlayIconChange = (e) => {\r\n  //     e.preventDefault();\r\n  //     console.log('mouseIn');\r\n  //     document.addEventListener('keypress', (e) => {\r\n  //         console.log('keypress');\r\n  //         if (e.keyCode === 32 || e.which === 32) {\r\n  //             const playIcon = document.querySelector('.tr_play_button');\r\n\r\n  //             if (playIcon.style.display === 'block') {\r\n  //                 playIcon.style.display = 'none';\r\n  //             } else {\r\n  //                 playIcon.style.display = 'block';\r\n  //             }\r\n  //         }\r\n  //     });\r\n  // };\r\n\r\n  render() {\r\n    if (this.state.loadVideo) {\r\n      if (!this.state.fullScreen) {\r\n        // Enable dragging\r\n        // draggie.enable();\r\n        dragElement(\r\n          document\r\n            .getElementById(\"extension-div\")\r\n            .shadowRoot.querySelector(\".video-wrap_tooltip\")\r\n        );\r\n      } else {\r\n        // Disable dragging\r\n        // draggie.disable();\r\n      }\r\n    }\r\n\r\n    // picture in picture mode code\r\n    // <a id=\"trail_pip_video_button\" className=\"icon videoShow\"><img src={ this.fullScreen ? \"https://res.cloudinary.com/dlhkpit1h/image/upload/v1578376401/iti33lwa5ued6zunxefv.png\":  } /></a>\r\n\r\n    // overlay\r\n    // className={tourSide==='prev'?\"trail_vC trail_video_overlayPrev trail_tooltip_done\":\"trail_vC trail_video_overlayNext trail_tooltip_done\"}\r\n\r\n    // tooltip overlay\r\n    // tourSide==='prev'?\"trail_vC trail_video_overlayPrev trail_tooltip_done\":\"trail_vC trail_video_overlayNext trail_tooltip_done\"\r\n\r\n    const { tourStep, tourSide, play } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {this.props.videoRef && (\r\n          <ContinueTourConfirmation\r\n            open={this.props.videoRef}\r\n            toggle={this.props.videoToggle}\r\n            continueTrail={this.continueTrailWithoutLogin}\r\n            toSignIn={this.toSignInWithoutLogin}\r\n          />\r\n        )}\r\n        <style>{videoTourCss1}</style>\r\n        <div\r\n          className={[\r\n            this.state.fullScreen\r\n              ? tourSide === \"prev\"\r\n                ? \"trail_vC trail_video_overlayPrev trail_tooltip_done\"\r\n                : \"trail_vC trail_video_overlayNext trail_tooltip_done\"\r\n              : null,\r\n          ].join(\" \")}\r\n        >\r\n          <div\r\n            className={[\r\n              \"video-wrap_tooltip\",\r\n              this.state.fullScreen\r\n                ? \"video-wrap_tooltip-fullScreen\"\r\n                : \"video-wrap_tooltip-smallScreen\",\r\n            ].join(\" \")}\r\n          >\r\n            {this.props.data.length > 0 && !this.state.fullScreen && (\r\n              <Button\r\n                type=\"link\"\r\n                disabled={this.props.onDone}\r\n                className=\"trial_button_close\"\r\n                onClick={this.props.closeButtonHandler}\r\n              >\r\n                <CloseOutlined />\r\n              </Button>\r\n            )}\r\n            {/* <p className=\"title videoShow\">Next Learn I will show you</p> */}\r\n            <div\r\n              className={[\r\n                !this.state.fullScreen ? \"tr_gradient_border\" : \"\",\r\n              ].join(\" \")}\r\n            >\r\n              <div className=\"video-wrap_tooltip-inner\">\r\n                <video\r\n                  className=\"tr_video\"\r\n                  id=\"trail_video\"\r\n                  controls\r\n                  allow=\"autoplay\"\r\n                  onPause={this.onClickPauseVideo}\r\n                  onEnded={this.onClickPauseVideo}\r\n                  disablePictureInPicture\r\n                  controlsList=\"nodownload nofullscreen\"\r\n                >\r\n                  <source\r\n                    id=\"sourceVideo\"\r\n                    src={this.props.data[this.props.tourStep - 1].web_url}\r\n                  />\r\n                </video>\r\n                <div\r\n                  className=\"tr_play_button\"\r\n                  onClick={this.onClickToPlayVideo}\r\n                ></div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className={[\r\n                \"btn-wrap\",\r\n                \"videoShow\",\r\n                this.state.fullScreen\r\n                  ? \"videoShow-fullScreen\"\r\n                  : \"videoShow-smallScreen\",\r\n              ].join(\" \")}\r\n            >\r\n              {1 < tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary ex_mr_10\"\r\n                    onClick={(e) =>\r\n                      this.onClickToManagePopoverButton(e, \"prev\")\r\n                    }\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n              {this.props.data.length > tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary ex_mr_10\"\r\n                    onClick={(e) => {\r\n                      this.handleWithoutLogin(\r\n                        e,\r\n                        \"next\",\r\n                        this.props.data[this.props.tourStep - 1].type,\r\n                        this.props.tourStep\r\n                      );\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n              {this.props.data.length === tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary ex_mr_10\"\r\n                    onClick={() => this.onClickToDoneTour(tourStep)}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n\r\n            <a\r\n              id=\"trail_pip_video_button\"\r\n              onClick={(e) => this.toggleScreen(e)}\r\n              className={[\r\n                \"icon videoShow\",\r\n                this.state.fullScreen\r\n                  ? \"video-icon-fullScreen\"\r\n                  : \"video-icon-smallScreen\",\r\n              ].join(\" \")}\r\n            >\r\n              <img\r\n                alt=\"full-small screen button img\"\r\n                src={\r\n                  !this.state.fullScreen\r\n                    ? \"https://www.materialui.co/materialIcons/navigation/fullscreen_white_36x36.png\"\r\n                    : \"https://www.materialui.co/materialIcons/navigation/fullscreen_exit_white_48x48.png\"\r\n                }\r\n              />\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VideoTour;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/CreateNewTrailModal.js",["675","676","677","678","679","680","681","682","683","684","685"],"import React from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from \"reactstrap\";\r\nimport $ from \"jquery\";\r\nimport { getUserSingleTrail } from \"../common/axios\";\r\nimport CreateNewTrailTab from \"./CreateNewTrailTab\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass CreateNewTrailModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      trailStatus: true,\r\n      trail_id: null,\r\n      userTrailList: [],\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.props.toggle(false);\r\n  };\r\n\r\n  onClickToRunTrail = (e) => {\r\n    e.preventDefault();\r\n    // ...query for the active tab...\r\n    chrome.runtime.sendMessage(\"\", {\r\n      type: \"DOMInfo\",\r\n      status: true,\r\n    });\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        reload: !prevState.reload,\r\n      };\r\n    });\r\n\r\n    chrome.storage.local.set(\r\n      {\r\n        trail_id: this.state.trail_id,\r\n        trail_web_user_tour: undefined,\r\n      },\r\n      (items) => console.log(\"trail_web_user_tourtrail_web_user_tour\", items)\r\n    );\r\n\r\n    let authToken, reload, userData;\r\n    chrome.storage.local.get(\r\n      [\"authToken\", \"userData\", \"reload\", \"openButton\"],\r\n      function (items) {\r\n        // authToken = items.authToken, reload = items.reload, userData = items.userData;\r\n        // chrome.storage.local.clear();\r\n\r\n        if (items.openButton === undefined) {\r\n          chrome.storage.local.set({ openButton: \"ManageTrail\" });\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    this.toggle();\r\n  };\r\n\r\n  onClickToTab = async (trailStatus) => {\r\n    if (!trailStatus) {\r\n      const result = await getUserSingleTrail();\r\n      if (result.status == 200) {\r\n        this.setState({ userTrailList: result.data.response });\r\n      }\r\n    }\r\n\r\n    this.setState({ trailStatus });\r\n  };\r\n\r\n  onClickToTrailId = (data) => {\r\n    this.setState({ trail_id: data.trail_id });\r\n  };\r\n\r\n  render() {\r\n    const { open, followerList } = this.props;\r\n\r\n    const { trailStatus, trail_id, userTrailList } = this.state;\r\n    $(document).ready(() => {\r\n      const modalDiv = document.querySelector(\".tr_modal\");\r\n\r\n      if (modalDiv) {\r\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\r\n            \"class\",\r\n            \"trial_modal_show trial_create_modal_main\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          isOpen={open}\r\n          toggle={this.toggle}\r\n          className=\"tr_modal\"\r\n          centered={true}\r\n        >\r\n          <ModalHeader\r\n            className=\"tr_modal_trail_modal_header tr_padding_0\"\r\n            toggle={this.toggle}\r\n          >\r\n            User Trails Lists\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            <div className=\"tr_new_trail_create_modal\">\r\n              <Button\r\n                className=\"tr_tab \"\r\n                onClick={(e) => this.onClickToTab(false)}\r\n              >\r\n                All Trails\r\n              </Button>\r\n              <Button\r\n                className=\"tr_tab tr_active\"\r\n                onClick={(e) => this.onClickToTab(true)}\r\n              >\r\n                Create Trails\r\n              </Button>\r\n            </div>\r\n            {!trailStatus && (\r\n              <ul className=\"tr_notification_bx tr_list\">\r\n                {userTrailList && userTrailList.length <= 0 && (\r\n                  <li class=\"tr_notFound_subscription\">No data found</li>\r\n                )}\r\n                {userTrailList.map((res) => (\r\n                  <li onClick={(e) => this.onClickToTrailId(res)}>\r\n                    <a href=\"javascript:void(0);\">\r\n                      <h4>{res.trail_name}</h4>\r\n                    </a>\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            )}\r\n            {trailStatus && <CreateNewTrailTab onChange={this.onClickToTab} />}\r\n            <div className=\"trailButtonsWrapper\">\r\n              <Button\r\n                className=\"ant-btn ant-btn-primary\"\r\n                disabled={trail_id == null}\r\n                onClick={this.onClickToRunTrail}\r\n              >\r\n                Run Trail\r\n              </Button>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateNewTrailModal;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/css/tooltip.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/contract.js",["686"],"import BN from 'bn.js';\nimport { getTransactionLastResult } from './providers';\nimport { PositionalArgsError, ArgumentTypeError } from './utils/errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the mutable and non-mutable methods\n */\nexport class Contract {\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                }))\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, gas, amount, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args))) {\n                        throw new PositionalArgsError();\n                    }\n                    validateBNLike({ gas, amount });\n                    const rawResult = yield this.account.functionCall(this.contractId, methodName, args, gas, amount);\n                    return getTransactionLastResult(rawResult);\n                }))\n            });\n        });\n    }\n}\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !BN.isBN(argValue) && isNaN(argValue)) {\n            throw new ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/rpc_errors.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/providers/provider.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userVerification.js",["687","688","689"],"import React from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass UserVerification extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('Received values of form: ', values);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Veryfication</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_30\">\r\n\t\t\t\t\tWe will sent you a code for your verification to entered email address.\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tr_label\">Enter Otp</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true, \r\n\t\t\t\t\t\t\tmessage: 'Please input your Email!'\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your Email!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Code\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Code\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UserVerification;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/index.js",[],["690","691"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/User/userProfileAdd.js",["692","693","694","695","696","697","698","699","700","701"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport { Button } from \"antd\";\r\n\r\nimport { isValidated } from \"./validation\";\r\nimport { getAllCategory, createTrailId } from \"../../common/axios\";\r\n\r\nconst chrome = window.chrome;\r\nclass userProfileAdd extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categoryList: [],\r\n      trail_description: \"\",\r\n      trail_title: \"\",\r\n      errors: {},\r\n      isSubmit: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    let categoryResult = await getAllCategory();\r\n\r\n    if (categoryResult.status == 200) {\r\n      this.setState({ categoryList: categoryResult.data.response });\r\n    }\r\n  }\r\n\r\n  onClear = () => {\r\n    this.setState({\r\n      trail_description: \"\",\r\n      trail_title: \"\",\r\n      errors: {},\r\n      isSubmit: false,\r\n      isLoading: false,\r\n    });\r\n\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n\r\n  onClickToSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { trail_title } = this.state;\r\n    const { errors, isValid } = isValidated(this.state);\r\n\r\n    console.log(\"errors\", errors);\r\n    console.log(\"isValid\", isValid);\r\n\r\n    if (!isValid) {\r\n      this.setState({ errors });\r\n    } else {\r\n      this.setState({ isSubmit: true, isLoading: true });\r\n\r\n      const { trail_title, trail_description } = this.state;\r\n      chrome.storage.local.get(\r\n        [\"trail_web_user_tour\", \"userData\"],\r\n        async function (items) {\r\n          let obj = {\r\n            // user_id: items.userData._id,\r\n            trail_name: trail_title,\r\n            trail_description,\r\n            trail_category_id: 1,\r\n            trail_user_status: \"private\",\r\n            cover_image_url: \"\",\r\n          };\r\n\r\n          const result = await createTrailId(obj);\r\n\r\n          this.setState({ isLoading: false });\r\n          if (result.status == 200) {\r\n            if (result.data.response.statusCode == 400) {\r\n              this.setState({\r\n                errors: { trail_already_exist: result.data.response.result },\r\n              });\r\n              setTimeout(() => {\r\n                this.setState({ errors: {} });\r\n              }, 2000);\r\n            } else {\r\n              this.onClear();\r\n              this.props.onAddRaw(result.data.response[0]);\r\n              $(\"body\").attr(\"class\", \"\");\r\n            }\r\n          }\r\n        }.bind(this)\r\n      );\r\n    }\r\n  };\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value }, () => {\r\n      const { errors, isValid } = isValidated(this.state);\r\n      this.setState({ errors });\r\n      // if(this.state.isSubmit) {\r\n      // }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      isLoading,\r\n      categoryList,\r\n      trail_title,\r\n      trail_description,\r\n      errors,\r\n    } = this.state;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalLeftBox\">\r\n        {isLoading && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img class=\"ring1\" src={require(`../../images/loding1.png`)} />\r\n              <img class=\"ring2\" src={require(`../../images/loding2.png`)} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"trailit_editZTitle trialit_mb4\">Add Trail</div>\r\n        <form name=\"add-trail-frm\">\r\n          {errors.trail_already_exist !== undefined && (\r\n            <div className=\"trailit-already-exist-error\">\r\n              {errors.trail_already_exist}\r\n            </div>\r\n          )}\r\n          <div className=\"d-block\">\r\n            <input\r\n              type=\"text\"\r\n              className=\"trailit_inputTitle trailit_mb3\"\r\n              name=\"trail_title\"\r\n              value={trail_title}\r\n              onChange={this.onChangeInput}\r\n              placeholder=\"Trail Title\"\r\n            />\r\n            {errors.trail_title != undefined && (\r\n              <div className=\"trailit-validation-error\">\r\n                {errors.trail_title}\r\n              </div>\r\n            )}\r\n          </div>\r\n          <div className=\"d-block\">\r\n            <textarea\r\n              rows=\"5\"\r\n              className=\"trailit_inputIntro trailit_mb3\"\r\n              name=\"trail_description\"\r\n              value={trail_description}\r\n              onChange={this.onChangeInput}\r\n              placeholder=\"Type Introduction here ...\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"trailit_userPanalFooterBox\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"trailit_btnGray\"\r\n              onClick={this.onClear}\r\n            >\r\n              Cancel\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.onClickToSubmit}\r\n              className=\"trailit_btnPink\"\r\n            >\r\n              Save\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userProfileAdd;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/wallet/index.js",["702"],"import ContractKit, { newKit } from '@celo/contractkit';\r\n\r\nclass Wallet {\r\n  constructor(address, privateKey) {\r\n    this.contractKit = newKit('https://alfajores-forno.celo-testnet.org');\r\n    this.contractKit.addAccount(privateKey); // Hardcoded Private Key for now\r\n    \r\n    this.address = address;\r\n  }\r\n\r\n  async transfer(to, amount) {  \r\n    const stableToken = await this.contractKit.contracts.getStableToken();\r\n    const weiTransferAmount = this.contractKit.web3.utils.toWei(amount, 'ether');\r\n    const tx = await stableToken.transfer(to, weiTransferAmount).send({\r\n      from: this.address,\r\n    });\r\n    const hash = await tx.getHash();\r\n    const receipt = await tx.waitReceipt();\r\n    \r\n    return {\r\n      tx,\r\n      hash,\r\n      receipt,\r\n    };\r\n  }\r\n  \r\n  async balance() {\r\n    const stableToken = await this.contractKit.contracts.getStableToken();\r\n    const balance = await stableToken.balanceOf(this.address);\r\n    return this.contractKit.web3.utils.fromWei(balance.toString());\r\n  }\r\n}\r\n\r\nexport default Wallet;\r\n",["703","704"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/initButtonPosition.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/otpVerification.js",["705","706","707"],"import React from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass OtpVerification extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('Received values of form: ', values);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Forgot Password?</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">We will send OTP for your password recovery to your account.</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname=\"username\" \r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your OTP!',\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your OTP!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Code\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Code\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OtpVerification;\r\n",["708","709"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/api/index.js",[],["710","711"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/socket.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/SendTipForm.js",["712"],"import React, { Component } from \"react\";\nimport { Form, Input, Button } from \"antd\";\n\nclass SendTipForm extends Component {\n  // Antd form reference\n  formRef = React.createRef();\n\n  constructor(props) {\n    super();\n\n    this.state = {\n      toAddress: \"\",\n      amount: \"\",\n    };\n  }\n\n  onChangeInput = (e) => {\n    e.stopPropagation();\n\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onCancelButtonClick = (e) => {\n    e.preventDefault();\n    // Reset form fields\n    this.formRef.current.resetFields();\n\n    // Set state to init value\n    this.setState({\n      toAddress: \"\",\n      amount: \"\",\n    });\n\n    // Call on cancel function\n    this.props.onCancel();\n  };\n\n  render() {\n    const { toAddress, amount } = this.state;\n    const { isLoading, sendLoader } = this.props;\n\n    return (\n      <div>\n        {isLoading && (\n          <div className=\"trailit_loaderBox\">\n            <div class=\"trial_spinner\">\n              <img\n                class=\"ring1\"\n                src={require(`../images/loding1.png`)}\n                alt=\"loader\"\n              />\n              <img\n                class=\"ring2\"\n                src={require(`../images/loding2.png`)}\n                alt=\"loader\"\n              />\n            </div>\n          </div>\n        )}\n        {/* <div className=\"tr_description\">\n          <p>Microtipping enabled through Celo Blockchain cUSD</p>\n        </div> */}\n        <Form\n          ref={this.formRef}\n          // onFinishFailed={(error) => console.log(\"error\", error)}\n          onFinish={() => this.props.sendTip(toAddress, amount)}\n          initialValues={{\n            toAddress,\n            amount,\n          }}\n        >\n          <Form.Item\n            className=\"mb-2\"\n            name=\"toAddress\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter address!\",\n              },\n            ]}\n          >\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              placeholder=\"Enter address\"\n              onKeyDown={this.onChangeInput}\n            />\n          </Form.Item>\n          <Form.Item\n            name=\"amount\"\n            rules={[\n              {\n                required: true,\n                message: \"Please enter amount!\",\n              },\n            ]}\n          >\n            <Input\n              type=\"text\"\n              autoComplete=\"off\"\n              placeholder=\"Enter amount\"\n              onKeyDown={this.onChangeInput}\n            />\n          </Form.Item>\n          <div className=\"trailButtonsWrapper\">\n            <button\n              type=\"primary\"\n              htmlType=\"button\"\n              disabled={sendLoader}\n              className={`${\n                this.props.modal\n                  ? \"ant-btn ant-btn-primary trail_add_step_btn\"\n                  : \"trailit_btnGray\"\n              }`}\n              onClick={this.onCancelButtonClick}\n              // className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n            >\n              Cancel\n            </button>\n\n            <button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className={`${\n                this.props.modal\n                  ? \"ant-btn ant-btn-primary trail_add_step_btn\"\n                  : \"trailit_btnPink\"\n              }`}\n              // className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n              // onClick={ (e) => this.props.sendTip(toAddress, amount) }\n              disabled={sendLoader}\n            >\n              Send Tip\n              {/* {sendLoader ? \"Sending...\" : \"Send Tip\"} */}\n            </button>\n          </div>\n        </Form>\n        {/* <form> */}\n        {/* <div className=\"d-block\">\n            <input\n              type=\"text\"\n              className=\"trailit_inputIntro trailit_mb3\"\n              placeholder=\"Enter your to address\"\n              name=\"toAddress\"\n              onChange={this.onChangeInput}\n              value={toAddress }\n            />\n          </div> */}\n\n        {/* <div className=\"d-block\">\n            <input\n              type=\"text\"\n              className=\"trailit_inputIntro trailit_mb3\"\n              placeholder=\"Enter your amount\"\n              name=\"amount\"\n              onChange={this.onChangeInput}\n              value={amount}\n            />\n          </div> */}\n\n        {/* <div className=\"trailit_userPanalFooterBox\">\n            <button \n              type=\"button\" \n              className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n              onClick={ this.onCancelButtonClick }\n            >\n              Cancel\n            </button>\n            <button\n              type=\"submit\"              \n              onClick={ (e) => this.props.sendTip(e, toAddress, amount) }\n              disabled={ sendLoader || ( !this.state.amount.length > 0 && !this.state.length > 0 ) }\n              className=\"ant-btn ant-btn-primary trail_add_step_btn\"\n            >\n              {sendLoader ? \"Loading...\" : \"Send Tip\"}\n            </button>\n          </div> */}\n        {/* </form> */}\n      </div>\n    );\n  }\n}\n\nexport default SendTipForm;\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/signer.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/key_stores/merge_key_store.js",[],["713","714"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/userConfirmation.js",["715","716","717","718"],"import React from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass UserConfirmation extends React.Component {\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"text_center\">\r\n\t\t\t\t\t<div className=\"tr_title f_36 mt_55\">Thank You...!</div>\r\n\t\t\t\t\t<div className=\"tr_subtitle mt_55\">Thank you for the register into the trailit.</div>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button mt_55\" onClick={() => this.props.clickToRedirect('login')}>\r\n\t\t\t\t\t\tLogin now\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} \r\n}\r\n\r\nexport default UserConfirmation;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/audioTour.js",["719","720","721","722"],"import React from \"react\";\r\nimport ReactPlayer from \"react-player\";\r\nimport $ from \"jquery\";\r\nimport { Button } from \"antd\";\r\nimport { CloseOutlined } from \"@ant-design/icons\";\r\n\r\nimport dragElement from \"../common/draggable\";\r\nimport { audioTourCss1 } from \"../css/audioTour\";\r\nimport { stopMediaPlaying } from \"../common/stopePlayingMedia\";\r\nimport {\r\n  addTrailitLogo,\r\n  removeTrailitLogo,\r\n} from \"../common/trailitLogoInPreview\";\r\nimport ContinueTourConfirmation from \"./Modal/ContinueTourConfirmation\";\r\n\r\nconst chrome = window.chrome;\r\nlet timeInterval;\r\nlet audio;\r\n\r\nclass AudioTour extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      audioLoad: false,\r\n      audioUrl: \"\",\r\n      type: \"audio\",\r\n      doneTour: false,\r\n      step: 0,\r\n      profileImage: \"\",\r\n    };\r\n  }\r\n\r\n  handleWithoutLogin = (event, tourSide, type, currentStep) => {\r\n    chrome.storage.local.get([\"isGuest\"], (items) => {\r\n      if (currentStep % 3 === 0 && tourSide === \"next\" && items.isGuest) {\r\n        this.props.audioToggle();\r\n      } else {\r\n        this.onClickToManagePopoverButton(event, tourSide);\r\n      }\r\n    });\r\n  };\r\n\r\n  continueTrailWithoutLogin = (event, tourSide) => {\r\n    this.onClickToManagePopoverButton(event, tourSide);\r\n    this.props.audioToggle();\r\n  };\r\n\r\n  toSignInWithoutLogin = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  componentDidMount() {\r\n    // console.log(\"this.props\", this.props);\r\n    let self = this;\r\n    chrome.storage.local.get(\r\n      [\"userData\", \"isPreview\", \"authorData\", \"followedTrailUserData\"],\r\n      (items) => {\r\n        self.setState({\r\n          profileImage: items.isPreview\r\n            ? items.authorData.profileImage\r\n            : items.followedTrailUserData\r\n            ? items.followedTrailUserData.profileImage\r\n            : items.userData.profileImage\r\n            ? items.userData.profileImage\r\n            : \"\",\r\n          audioLoad: true,\r\n          audioUrl: new Audio(this.props.data[this.props.tourStep - 1].web_url),\r\n          tourStep: this.props.tourStep,\r\n        });\r\n      }\r\n    );\r\n\r\n    if (this.props.data[this.props.tourStep - 1].url !== document.URL) {\r\n      window.location.href = this.props.data[this.props.tourStep - 1].url;\r\n    }\r\n\r\n    //\r\n\r\n    // if(document.URL.includes('youtube.com')) {\r\n    //     let videoElem = document.querySelector('.video-stream.html5-main-video');\r\n    //     videoElem.addEventListener('onloadeddata', () => {\r\n    //         videoElem.pause();\r\n    //     })\r\n    //     setTimeout(() => {\r\n    //         videoElem.pause();\r\n    //     }, 1000)\r\n    // }\r\n\r\n    // setTimeout(() => {\r\n    //     if(document.querySelector('.audio_wrap_tooltip')!== null) {\r\n    //         document.querySelectorAll('video').forEach(res => {\r\n    //             if(res.className !== \"preview-video\") {\r\n    //                 res.pause()\r\n    //             }\r\n    //         })\r\n    //     }\r\n    // }, 1000);\r\n\r\n    // if (document.readyState === 'complete') {\r\n    //     $(document).ready(() => {\r\n    // // Stop playing websites audio or video\r\n    // stopMediaPlaying();\r\n    //     });\r\n\r\n    // } else {\r\n    //     document.body.onload = function () {\r\n    //         // Stop playing websites audio or video\r\n    //         stopMediaPlaying();\r\n    //     };\r\n    // }\r\n\r\n    if (document.readyState === \"complete\") {\r\n      $(document).ready(() => {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      });\r\n    } else if (\r\n      document.readyState === \"interactive\" &&\r\n      document.URL.includes(\"https://www.youtube.com/\")\r\n    ) {\r\n      $(document).ready(() => {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      });\r\n    } else {\r\n      document.body.onload = function () {\r\n        // Stop playing websites audio or video\r\n        stopMediaPlaying();\r\n      };\r\n    }\r\n\r\n    // Add trailit logo\r\n    addTrailitLogo();\r\n  }\r\n\r\n  /**\r\n   * Manage popover web user tour button\r\n   * @data tooltip data\r\n   * @step tooltip current step\r\n   */\r\n  onClickToManagePopoverButton = async (event, tourSide) => {\r\n    let { tourStep } = this.props;\r\n    let step = tourSide === \"prev\" ? tourStep - 1 : tourStep + 1;\r\n\r\n    if (this.props.data[step - 1].url === document.URL) {\r\n      let type = this.props.data[step - 1].type;\r\n      this.props.tour(step, type, tourSide);\r\n    } else {\r\n      // Set loading true to show overlay\r\n      this.props.setLoadingState(true);\r\n\r\n      let type = this.props.data[step - 1].type;\r\n      await this.props.tour(step, type, tourSide);\r\n      window.location.href = this.props.data[step - 1].url;\r\n    }\r\n  };\r\n\r\n  onClickToDoneTour = (data, step) => {\r\n    let { tourStep } = this.props;\r\n    chrome.storage.local.set({ closeContinue: false });\r\n    this.props.toggle({ removePreviewTrails: true });\r\n    this.setState({ doneTour: true });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // console.log(\"did updated\");\r\n    if (\r\n      this.props.tourStep !== prevProps.tourStep &&\r\n      this.props.data[this.props.tourStep - 1].type === this.state.type\r\n    ) {\r\n      // console.log(\"audio url\");\r\n      this.setState({\r\n        audioUrl: new Audio(this.props.data[this.props.tourStep - 1].web_url),\r\n      });\r\n    } else if (\r\n      this.props.tourStep !== prevProps.tourStep &&\r\n      this.props.data[this.props.tourStep - 1].type !== this.state.type\r\n    ) {\r\n      const tr_audioplayer = document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\".tr_audioplayer\");\r\n      const playBtn = tr_audioplayer.querySelector(\".tr_audioplayer-playpause\");\r\n      playBtn.classList.remove(\"tr_audioplayer-playing\");\r\n\r\n      this.setState({ audioUrl: \"\", audioLoad: false });\r\n    }\r\n  }\r\n\r\n  cleanup = () => {\r\n    // Clean up\r\n    audio.pause();\r\n    clearInterval(timeInterval);\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    if (audio && timeInterval) {\r\n      this.cleanup();\r\n    }\r\n\r\n    // Remove trailit log\r\n    removeTrailitLogo();\r\n  }\r\n\r\n  render() {\r\n    // Do clean up work\r\n    if (audio && timeInterval) {\r\n      this.cleanup();\r\n    }\r\n\r\n    console.log(\"in render\");\r\n\r\n    // $(() => {\r\n    const tr_audioplayer = document\r\n      .getElementById(\"extension-div\")\r\n      .shadowRoot.querySelector(\".tr_audioplayer\");\r\n\r\n    if (this.state.audioLoad && this.state.audioUrl) {\r\n      audio = this.state.audioUrl;\r\n      audio.autoplay = true;\r\n\r\n      const playBtn = tr_audioplayer.querySelector(\".tr_audioplayer-playpause\");\r\n      if (!this.props.previewInTooltip) {\r\n        const audioWrapTooltip = document\r\n          .getElementById(\"extension-div\")\r\n          .shadowRoot.querySelector(\".audio_wrap_tooltip\");\r\n\r\n        //Make the DIV element draggagle:\r\n        dragElement(audioWrapTooltip);\r\n      }\r\n\r\n      let playAudio = false;\r\n\r\n      //credit for song: Adrian kreativaweb@gmail.com\r\n      audio.addEventListener(\"loadeddata\", () => {\r\n        if (!playAudio) {\r\n          playAudio = true;\r\n\r\n          if (\r\n            this.props.data[this.props.tourStep - 1].url === document.URL &&\r\n            document\r\n              .getElementById(\"extension-div\")\r\n              .shadowRoot.querySelector(\".audio_wrap_tooltip\")\r\n          ) {\r\n            chrome.storage.local.get([\"AutoPlayMediaToggle\"], (items) => {\r\n              if (\r\n                items.AutoPlayMediaToggle === undefined ||\r\n                items.AutoPlayMediaToggle\r\n              ) {\r\n                let audioPromise = audio.play();\r\n                if (audioPromise !== undefined) {\r\n                  audioPromise\r\n                    .then((res) => {\r\n                      playBtn.classList.add(\"tr_audioplayer-playing\");\r\n\r\n                      //check audio percentage and update time accordingly\r\n                      const progressBar = tr_audioplayer.querySelector(\r\n                        \".tr_audioplayer-bar-played\"\r\n                      );\r\n                      timeInterval = setInterval(() => {\r\n                        progressBar.style.width =\r\n                          (audio.currentTime / audio.duration) * 100 + \"%\";\r\n                        tr_audioplayer.querySelector(\r\n                          \".tr_audioplayer-time-current\"\r\n                        ).textContent = getTimeCodeFromNum(audio.currentTime);\r\n                      }, 500);\r\n\r\n                      audio.volume = 0.75;\r\n                    })\r\n                    .catch((err) => console.log(\"err\", err));\r\n                }\r\n              }\r\n            });\r\n          }\r\n          tr_audioplayer.querySelector(\r\n            \".tr_audioplayer-time-duration\"\r\n          ).textContent = isNaN(audio.duration)\r\n            ? 0.0\r\n            : getTimeCodeFromNum(audio.duration);\r\n        }\r\n      });\r\n\r\n      //Audio ended event\r\n      audio.onended = function () {\r\n        playBtn.classList.remove(\"tr_audioplayer-playing\");\r\n      };\r\n\r\n      //click on timeline to skip around\r\n      const timeline = tr_audioplayer.querySelector(\".tr_audioplayer-bar\");\r\n      timeline.addEventListener(\r\n        \"click\",\r\n        (e) => {\r\n          const timelineWidth = window.getComputedStyle(timeline).width;\r\n          const timeToSeek =\r\n            (e.offsetX / parseInt(timelineWidth)) * audio.duration;\r\n          audio.currentTime = timeToSeek;\r\n        },\r\n        false\r\n      );\r\n\r\n      //click volume slider to change volume\r\n      const volumeSlider = tr_audioplayer.querySelector(\".volume-slider-root\");\r\n      volumeSlider.addEventListener(\r\n        \"click\",\r\n        (e) => {\r\n          const sliderWidth = window.getComputedStyle(volumeSlider).width;\r\n          const newVolume = e.offsetX / parseInt(sliderWidth);\r\n          audio.volume = newVolume;\r\n          tr_audioplayer.querySelector(\".volume-percentage\").style.width =\r\n            newVolume * 100 + \"%\";\r\n        },\r\n        false\r\n      );\r\n\r\n      //toggle between playing and pausing on button click\r\n      playBtn.addEventListener(\"click\", () => {\r\n        console.log(\"on play button click\");\r\n        console.log(\"audio.pause\", audio.paused);\r\n\r\n        if (audio.paused) {\r\n          playBtn.classList.add(\"tr_audioplayer-playing\");\r\n          chrome.storage.local.get([\"AutoPlayMediaToggle\"], (items) => {\r\n            if (!items.AutoPlayMediaToggle || items.AutoPlayMediaToggle) {\r\n              audio.autoplay = true;\r\n              let audioPromise = audio.play();\r\n\r\n              if (audioPromise !== undefined) {\r\n                audioPromise\r\n                  .then((res) => {\r\n                    playBtn.classList.add(\"tr_audioplayer-playing\");\r\n                    //check audio percentage and update time accordingly\r\n                    const progressBar = tr_audioplayer.querySelector(\r\n                      \".tr_audioplayer-bar-played\"\r\n                    );\r\n                    timeInterval = setInterval(() => {\r\n                      progressBar.style.width =\r\n                        (audio.currentTime / audio.duration) * 100 + \"%\";\r\n                      tr_audioplayer.querySelector(\r\n                        \".tr_audioplayer-time-current\"\r\n                      ).textContent = getTimeCodeFromNum(audio.currentTime);\r\n                    }, 500);\r\n\r\n                    audio.volume = 0.75;\r\n                  })\r\n                  .catch((err) => console.log(\"err\", err));\r\n              }\r\n            }\r\n          });\r\n\r\n          tr_audioplayer.querySelector(\r\n            \".tr_audioplayer-time-duration\"\r\n          ).textContent = isNaN(audio.duration)\r\n            ? 0.0\r\n            : getTimeCodeFromNum(audio.duration);\r\n        } else {\r\n          audio.pause();\r\n          playBtn.classList.remove(\"tr_audioplayer-playing\");\r\n        }\r\n      });\r\n\r\n      tr_audioplayer\r\n        .querySelector(\".volume-button\")\r\n        .addEventListener(\"click\", () => {\r\n          const volumeEl = tr_audioplayer.querySelector(\r\n            \".volume-container .volume\"\r\n          );\r\n          audio.muted = !audio.muted;\r\n          if (audio.muted) {\r\n            volumeEl.classList.remove(\"icono-volumeMedium\");\r\n            volumeEl.classList.add(\"icono-volumeMute\");\r\n          } else {\r\n            volumeEl.classList.add(\"icono-volumeMedium\");\r\n            volumeEl.classList.remove(\"icono-volumeMute\");\r\n          }\r\n        });\r\n\r\n      //turn 128 seconds into 2:08\r\n      function getTimeCodeFromNum(num) {\r\n        let seconds = parseInt(num);\r\n        let minutes = parseInt(seconds / 60);\r\n        seconds -= minutes * 60;\r\n        const hours = parseInt(minutes / 60);\r\n        minutes -= hours * 60;\r\n\r\n        if (hours === 0)\r\n          return `${minutes}:${String(seconds % 60).padStart(2, 0)}`;\r\n        return `${String(hours).padStart(2, 0)}:${minutes}:${String(\r\n          seconds % 60\r\n        ).padStart(2, 0)}`;\r\n      }\r\n    }\r\n    // });\r\n\r\n    const { tourStep } = this.props;\r\n\r\n    return (\r\n      // className={`trail_tooltip_done ${tourSide==='prev'?\"trail_vC trail_video_overlayPrev trail_tooltip_done\":\"trail_vC trail_video_overlayNext trail_tooltip_done\"}`}\r\n      <div>\r\n        {this.props.audioRef && (\r\n          <ContinueTourConfirmation\r\n            open={this.props.audioRef}\r\n            toggle={this.props.audioToggle}\r\n            continueTrail={this.continueTrailWithoutLogin}\r\n            toSignIn={this.toSignInWithoutLogin}\r\n          />\r\n        )}\r\n        <style>{audioTourCss1}</style>\r\n        <div className=\"audio_wrap_tooltip\">\r\n          <div className=\"audio_wrap_tooltip_innr\">\r\n            <div className=\"trialit_audio tr_gradient_border\">\r\n              <img\r\n                alt=\"user-img\"\r\n                src={\r\n                  this.state.profileImage == \"\"\r\n                    ? require(\"../images/user.png\")\r\n                    : this.state.profileImage\r\n                }\r\n              />\r\n              <div className=\"tr_audioplayer\">\r\n                <div className=\"tr_audioplayer-playpause\" title=\"Play\">\r\n                  <a>Play</a>\r\n                </div>\r\n                <div className=\"tr_audioplayer-time tr_audioplayer-time-current\">\r\n                  00:00\r\n                </div>\r\n                <div className=\"tr_audioplayer-bar\">\r\n                  <div className=\"tr_audioplayer-bar-loaded\"></div>\r\n                  <div className=\"tr_audioplayer-bar-played\"></div>\r\n                </div>\r\n                <div className=\"tr_audioplayer-time tr_audioplayer-time-duration\"></div>\r\n                <div className=\"volume-container\">\r\n                  <div className=\"volume-button\">\r\n                    <div className=\"volume icono-volumeMedium\"></div>\r\n                  </div>\r\n                  <div className=\"volume-slider\">\r\n                    <div className=\"volume-slider-root\">\r\n                      <div className=\"volume-percentage\"></div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {!this.props.previewInTooltip && (\r\n            <div className=\"btn-wrap videoShow\">\r\n              {this.props.data.length > 0 && (\r\n                <Button\r\n                  type=\"link\"\r\n                  disabled={this.props.onDone}\r\n                  className=\"trial_button_close\"\r\n                  onClick={(e) => {\r\n                    audio.pause();\r\n                    clearInterval(timeInterval);\r\n                    this.props.closeButtonHandler(e);\r\n                  }}\r\n                >\r\n                  <CloseOutlined />\r\n                </Button>\r\n              )}\r\n              {1 < tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary ex_mr_10\"\r\n                    onClick={(e) => {\r\n                      audio.pause();\r\n                      clearInterval(timeInterval);\r\n                      this.onClickToManagePopoverButton(e, \"prev\");\r\n                    }}\r\n                  >\r\n                    Previous\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n              {this.props.data.length > tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary\"\r\n                    onClick={(e) => {\r\n                      audio.pause();\r\n                      clearInterval(timeInterval);\r\n\r\n                      this.handleWithoutLogin(\r\n                        e,\r\n                        \"next\",\r\n                        this.props.data[this.props.tourStep - 1].type,\r\n                        this.props.tourStep\r\n                      );\r\n                    }}\r\n                  >\r\n                    Next\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n              {this.props.data.length === tourStep && (\r\n                <React.Fragment>\r\n                  <button\r\n                    disabled={this.props.onDone}\r\n                    className=\"ant-btn ant-btn-primary\"\r\n                    onClick={() => {\r\n                      audio.pause();\r\n                      this.onClickToDoneTour(tourStep);\r\n                    }}\r\n                  >\r\n                    Done\r\n                  </button>\r\n                </React.Fragment>\r\n              )}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AudioTour;\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/Modal/SendTipModal.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/imageResizer.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/near-api-js/utils/exponential-backoff.js",[],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/components/login.js",["723","724","725","726"],"/* eslint-disable react/jsx-no-target-blank */\r\nimport React, { useRef, createRef } from \"react\";\r\nimport { Form, Input, Button, Col } from \"antd\";\r\nimport axios from \"axios\";\r\n\r\nimport { getAllNotification } from \"../common/axios\";\r\nimport { keyPairGenerate } from \"../code/generateKey\";\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: \"\",\r\n      isAuth: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  // Antd form reference\r\n  formRef = React.createRef();\r\n\r\n  // Facebook response function\r\n  responseFacebook = (response) => {\r\n    console.log(response);\r\n  };\r\n\r\n  // On click to submit function\r\n  onClickToSubmit = (values) => {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_MS1_URL}user/login`, values, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res, err) => {\r\n        if (res.status === 200) {\r\n          const { responseCode, responseMessage } = res.data.data.response;\r\n\r\n          if (responseCode === 208 || responseCode === 404) {\r\n            this.setState({ errors: responseMessage });\r\n\r\n            setTimeout(() => {\r\n              this.setState({ errors: \"\" });\r\n            }, 3000);\r\n          } else {\r\n            const { jwt, user } = res.data.data.response.data;\r\n\r\n            chrome.storage.local.set(\r\n              {\r\n                isAuth: true,\r\n                reload: true,\r\n                userData: user,\r\n                authToken: jwt,\r\n                keypair: keyPairGenerate(),\r\n                trailDeleteModal: { value: null },\r\n              },\r\n              function () {\r\n                // bkg.console.log(\"JWT, USER\", jwt, user)\r\n              }\r\n            );\r\n\r\n            this.props.clickToRedirect(\"userProfile\");\r\n\r\n            chrome.storage.local.set({ notification: true });\r\n\r\n            this.setState({ isAuth: true });\r\n          }\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  // Validate password with regular expression function\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n\r\n    var digit = /^(.*[0-9]+.*)$/;\r\n    var upper = /^(.*[A-Z]+.*)$/;\r\n    var lower = /^(.*[a-z]+.*)$/;\r\n\r\n    if (value && !digit.test(value)) {\r\n      callback(\"Password must contain one digit\");\r\n    }\r\n\r\n    if (value && !upper.test(value)) {\r\n      callback(\"Password must contain one uppercase letter\");\r\n    }\r\n\r\n    if (value && !lower.test(value)) {\r\n      callback(\"Password must contain one lowercase letter\");\r\n    }\r\n\r\n    if (value && value.length <= 8) {\r\n      callback(\"Password must be 8 digit\");\r\n    }\r\n\r\n    if (value && this.state.confirmDirty) {\r\n      this.formRef.validateFields([\"confirm\"], { force: true });\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"trailMain\">\r\n        <div className=\"auth_tr_wrapper\">\r\n          <div className=\"trailit_userPanal trailit_Big\">\r\n            <div className=\"trailit_userPanalRightBox\">\r\n              <div className=\"trailit_userPanalHeaderBox login_header\">\r\n                <img\r\n                  width=\"62px\"\r\n                  height=\"70px\"\r\n                  alt=\"white_logo\"\r\n                  src={require(\"../images/trailit_logo-white-not-next-01.svg\")}\r\n                />\r\n                <span className=\"welcome_text\">Welcome to Trailit</span>\r\n              </div>\r\n              <div className=\"trailit_userPanalContentBox\">\r\n                {this.state.errors && (\r\n                  <p className=\"tr_error\">{this.state.errors}</p>\r\n                )}\r\n                <div className=\"pt-1\">\r\n                  <Form\r\n                    className=\"row\"\r\n                    ref={this.formRef}\r\n                    name=\"control-ref\"\r\n                    onFinish={this.onClickToSubmit}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                  >\r\n                    <div className=\"signup_message\">\r\n                      Enter your details to login. If you have not logged in\r\n                      please{\" \"}\r\n                      <b>\r\n                        <a\r\n                          className=\"tr_link\"\r\n                          target=\"_blank\"\r\n                          href=\"http://169.61.16.14/?signUp=true\"\r\n                        >\r\n                          Sign Up Now\r\n                        </a>\r\n                      </b>\r\n                    </div>\r\n                    <Col md={12}>\r\n                      <button type=\"button\" className=\"trailit_facebook\">\r\n                        Sign In with Facebook\r\n                      </button>\r\n                      <button type=\"button\" className=\"trailit_google\">\r\n                        Sign In with Google\r\n                      </button>\r\n                      <hr className=\"trailit_dark trail_or\" />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        className=\"form-input\"\r\n                        rules={[\r\n                          {\r\n                            type: \"email\",\r\n                            message: \"Please enter valid email!\",\r\n                          },\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter email!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Email\" className=\"tr_input\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                      <Form.Item\r\n                        name=\"password\"\r\n                        className=\"form-input\"\r\n                        rules={[\r\n                          {\r\n                            // min: 3,\r\n                            required: true,\r\n                            message: \"Please enter password!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          className=\"tr_input\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={12} className=\"text-center mb-3 mb-1\">\r\n                      {/* <Button\r\n                        type=\"submit\"\r\n                        className=\"py-2 px-3 btn-sm btn-pink\"\r\n                      >\r\n                        Sign in\r\n                      </Button> */}\r\n                      <Button\r\n                        disabled={this.state.isLoading}\r\n                        htmlType=\"submit\"\r\n                        className=\"py-2 px-3 btn-sm btn-pink\"\r\n                      >\r\n                        Sign in\r\n                      </Button>\r\n                    </Col>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n\r\n// {/* <img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"login-img\" />\r\n// <div className=\"tr_title\">Welcome to the Trailit.</div>\r\n// <div className=\"tr_subtitle\">\r\n// \tEnter your details to login. If you have not login details than\r\n// \t<a className=\"tr_link fw_400\" target=\"_blank\" href=\"http://169.61.16.14/?signUp=true\">\r\n// \t\tSignup Now\r\n// \t</a>\r\n// </div>\r\n// {this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n// <div className=\"tr_label\">Signin</div>\r\n// <Form\r\n// \tref={ this.formRef }\r\n// \tname=\"control-ref\"\r\n// \tonFinish={ this.onClickToSubmit }\r\n// \tonFinishFailed={ this.onFinishFailed }\r\n// >\r\n// \t<Form.Item\r\n// \t\tname=\"email\"\r\n// \t\trules={[{\r\n// \t\t\t// type: 'email',\r\n// \t\t\t// message: 'Please enter valid email!',\r\n// \t\t},\r\n// \t\t{\r\n// \t\t\trequired: true,\r\n// \t\t\tmessage: 'Please enter your email!',\r\n// \t\t}]}\r\n// \t>\r\n// \t\t{/* {getFieldDecorator('email', {\r\n// \t\t\trules: [\r\n// \t\t\t{\r\n// \t\t\t\ttype: 'email',\r\n// \t\t\t\tmessage: 'Please enter valid email!',\r\n// \t\t\t},\r\n// \t\t\t{\r\n// \t\t\t\trequired: true,\r\n// \t\t\t\tmessage: 'Please enter your email!',\r\n// \t\t\t},\r\n// \t\t\t],\r\n// \t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n// \t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n// \t</Form.Item>\r\n// \t<Form.Item\r\n// \t\tname=\"password\"\r\n// \t\trules={[{\r\n// \t\t\trequired: true,\r\n// \t\t\tmin: 3,\r\n// \t\t\tmessage: 'Please input your password!',\r\n// \t\t}]}\r\n// \t>\r\n// \t\t{/* {getFieldDecorator('password', {\r\n// \t\t\trules: [\r\n// \t\t\t\t{\r\n// \t\t\t\t\trequired: true,\r\n// \t\t\t\t\tmessage: 'Please input your password!',\r\n// \t\t\t\t}\r\n// \t\t\t],\r\n// \t\t})(<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />)} */}\r\n// \t\t<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />\r\n// \t</Form.Item>\r\n// \t<Form.Item className=\"last_fg\">\r\n// \t\t<a className=\"tr_link flex_grow_1\" href=\"javascript:;\">\r\n// \t\t\tForgot password?\r\n// \t\t</a>\r\n// \t\t<Button\r\n// \t\t\tdisabled={ this.state.isLoading }\r\n// \t\t\ttype=\"primary\"\r\n// \t\t\thtmlType=\"submit\"\r\n// \t\t\tclassName=\"tr_button\"\r\n// \t\t>\r\n// \t\t\tLog in now\r\n// \t\t</Button>\r\n// \t</Form.Item>\r\n// </Form> */}\r\n","/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/celo/index.js",[],["727","728"],"/home/chirag/Desktop/codezeros_company/working_project/trailit_project/trailit_extension/building_extension/src/common/interceptor.js",[],{"ruleId":"729","severity":1,"message":"730","line":42,"column":3,"nodeType":"731","messageId":"732","endLine":42,"endColumn":14},{"ruleId":"729","severity":1,"message":"733","line":46,"column":3,"nodeType":"731","messageId":"732","endLine":46,"endColumn":17},{"ruleId":"729","severity":1,"message":"734","line":79,"column":10,"nodeType":"731","messageId":"732","endLine":79,"endColumn":17},{"ruleId":"735","severity":1,"message":"736","line":1289,"column":37,"nodeType":"737","messageId":"738","endLine":1289,"endColumn":39},{"ruleId":"735","severity":1,"message":"739","line":1290,"column":44,"nodeType":"737","messageId":"738","endLine":1290,"endColumn":46},{"ruleId":"729","severity":1,"message":"740","line":2256,"column":13,"nodeType":"731","messageId":"732","endLine":2256,"endColumn":28},{"ruleId":"729","severity":1,"message":"741","line":2256,"column":30,"nodeType":"731","messageId":"732","endLine":2256,"endColumn":38},{"ruleId":"735","severity":1,"message":"739","line":2527,"column":26,"nodeType":"737","messageId":"738","endLine":2527,"endColumn":28},{"ruleId":"735","severity":1,"message":"736","line":2938,"column":38,"nodeType":"737","messageId":"738","endLine":2938,"endColumn":40},{"ruleId":"735","severity":1,"message":"739","line":3063,"column":32,"nodeType":"737","messageId":"738","endLine":3063,"endColumn":34},{"ruleId":"729","severity":1,"message":"742","line":3211,"column":9,"nodeType":"731","messageId":"732","endLine":3211,"endColumn":15},{"ruleId":"729","severity":1,"message":"743","line":3212,"column":9,"nodeType":"731","messageId":"732","endLine":3212,"endColumn":18},{"ruleId":"729","severity":1,"message":"744","line":3212,"column":20,"nodeType":"731","messageId":"732","endLine":3212,"endColumn":40},{"ruleId":"729","severity":1,"message":"745","line":3213,"column":9,"nodeType":"731","messageId":"732","endLine":3213,"endColumn":30},{"ruleId":"746","severity":1,"message":"747","line":3285,"column":70,"nodeType":"748","messageId":"749","endLine":3285,"endColumn":72},{"ruleId":"735","severity":1,"message":"739","line":3726,"column":26,"nodeType":"737","messageId":"738","endLine":3726,"endColumn":28},{"ruleId":"729","severity":1,"message":"750","line":3843,"column":15,"nodeType":"731","messageId":"732","endLine":3843,"endColumn":20},{"ruleId":"729","severity":1,"message":"751","line":4251,"column":11,"nodeType":"731","messageId":"732","endLine":4251,"endColumn":19},{"ruleId":"729","severity":1,"message":"752","line":4290,"column":7,"nodeType":"731","messageId":"732","endLine":4290,"endColumn":11},{"ruleId":"729","severity":1,"message":"753","line":4318,"column":11,"nodeType":"731","messageId":"732","endLine":4318,"endColumn":28},{"ruleId":"754","severity":1,"message":"755","line":4649,"column":27,"nodeType":"756","endLine":4652,"endColumn":29},{"ruleId":"754","severity":1,"message":"755","line":4653,"column":27,"nodeType":"756","endLine":4656,"endColumn":29},{"ruleId":"729","severity":1,"message":"757","line":5301,"column":31,"nodeType":"731","messageId":"732","endLine":5301,"endColumn":44},{"ruleId":"729","severity":1,"message":"741","line":5301,"column":57,"nodeType":"731","messageId":"732","endLine":5301,"endColumn":65},{"ruleId":"758","replacedBy":"759"},{"ruleId":"760","replacedBy":"761"},{"ruleId":"729","severity":1,"message":"762","line":2,"column":8,"nodeType":"731","messageId":"732","endLine":2,"endColumn":12},{"ruleId":"729","severity":1,"message":"763","line":3,"column":18,"nodeType":"731","messageId":"732","endLine":3,"endColumn":30},{"ruleId":"729","severity":1,"message":"764","line":5,"column":8,"nodeType":"731","messageId":"732","endLine":5,"endColumn":16},{"ruleId":"729","severity":1,"message":"765","line":7,"column":8,"nodeType":"731","messageId":"732","endLine":7,"endColumn":14},{"ruleId":"729","severity":1,"message":"766","line":11,"column":10,"nodeType":"731","messageId":"732","endLine":11,"endColumn":23},{"ruleId":"729","severity":1,"message":"767","line":11,"column":25,"nodeType":"731","messageId":"732","endLine":11,"endColumn":40},{"ruleId":"729","severity":1,"message":"768","line":30,"column":10,"nodeType":"731","messageId":"732","endLine":30,"endColumn":33},{"ruleId":"735","severity":1,"message":"736","line":46,"column":22,"nodeType":"737","messageId":"738","endLine":46,"endColumn":24},{"ruleId":"729","severity":1,"message":"769","line":160,"column":11,"nodeType":"731","messageId":"732","endLine":160,"endColumn":19},{"ruleId":"729","severity":1,"message":"769","line":203,"column":24,"nodeType":"731","messageId":"732","endLine":203,"endColumn":32},{"ruleId":"746","severity":1,"message":"770","line":206,"column":25,"nodeType":"748","messageId":"749","endLine":206,"endColumn":27},{"ruleId":"735","severity":1,"message":"736","line":210,"column":37,"nodeType":"737","messageId":"738","endLine":210,"endColumn":39},{"ruleId":"735","severity":1,"message":"739","line":216,"column":19,"nodeType":"737","messageId":"738","endLine":216,"endColumn":21},{"ruleId":"735","severity":1,"message":"739","line":217,"column":20,"nodeType":"737","messageId":"738","endLine":217,"endColumn":22},{"ruleId":"735","severity":1,"message":"736","line":225,"column":24,"nodeType":"737","messageId":"738","endLine":225,"endColumn":26},{"ruleId":"729","severity":1,"message":"771","line":234,"column":9,"nodeType":"731","messageId":"732","endLine":234,"endColumn":23},{"ruleId":"729","severity":1,"message":"769","line":235,"column":22,"nodeType":"731","messageId":"732","endLine":235,"endColumn":30},{"ruleId":"735","severity":1,"message":"736","line":240,"column":55,"nodeType":"737","messageId":"738","endLine":240,"endColumn":57},{"ruleId":"735","severity":1,"message":"739","line":250,"column":22,"nodeType":"737","messageId":"738","endLine":250,"endColumn":24},{"ruleId":"735","severity":1,"message":"736","line":312,"column":17,"nodeType":"737","messageId":"738","endLine":312,"endColumn":19},{"ruleId":"729","severity":1,"message":"772","line":339,"column":11,"nodeType":"731","messageId":"732","endLine":339,"endColumn":18},{"ruleId":"746","severity":1,"message":"770","line":340,"column":27,"nodeType":"748","messageId":"749","endLine":340,"endColumn":29},{"ruleId":"735","severity":1,"message":"739","line":341,"column":23,"nodeType":"737","messageId":"738","endLine":341,"endColumn":25},{"ruleId":"735","severity":1,"message":"736","line":347,"column":26,"nodeType":"737","messageId":"738","endLine":347,"endColumn":28},{"ruleId":"729","severity":1,"message":"773","line":382,"column":11,"nodeType":"731","messageId":"732","endLine":382,"endColumn":20},{"ruleId":"729","severity":1,"message":"774","line":382,"column":32,"nodeType":"731","messageId":"732","endLine":382,"endColumn":43},{"ruleId":"735","severity":1,"message":"736","line":386,"column":59,"nodeType":"737","messageId":"738","endLine":386,"endColumn":61},{"ruleId":"729","severity":1,"message":"769","line":423,"column":22,"nodeType":"731","messageId":"732","endLine":423,"endColumn":30},{"ruleId":"746","severity":1,"message":"775","line":425,"column":39,"nodeType":"748","messageId":"776","endLine":425,"endColumn":41},{"ruleId":"735","severity":1,"message":"736","line":464,"column":55,"nodeType":"737","messageId":"738","endLine":464,"endColumn":57},{"ruleId":"735","severity":1,"message":"736","line":524,"column":43,"nodeType":"737","messageId":"738","endLine":524,"endColumn":45},{"ruleId":"735","severity":1,"message":"736","line":530,"column":61,"nodeType":"737","messageId":"738","endLine":530,"endColumn":63},{"ruleId":"758","replacedBy":"777"},{"ruleId":"760","replacedBy":"778"},{"ruleId":"729","severity":1,"message":"779","line":2,"column":10,"nodeType":"731","messageId":"732","endLine":2,"endColumn":16},{"ruleId":"729","severity":1,"message":"780","line":2,"column":49,"nodeType":"731","messageId":"732","endLine":2,"endColumn":60},{"ruleId":"729","severity":1,"message":"781","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":14},{"ruleId":"729","severity":1,"message":"782","line":3,"column":16,"nodeType":"731","messageId":"732","endLine":3,"endColumn":21},{"ruleId":"729","severity":1,"message":"783","line":4,"column":8,"nodeType":"731","messageId":"732","endLine":4,"endColumn":12},{"ruleId":"758","replacedBy":"784"},{"ruleId":"760","replacedBy":"785"},{"ruleId":"729","severity":1,"message":"786","line":2,"column":17,"nodeType":"731","messageId":"732","endLine":2,"endColumn":28},{"ruleId":"729","severity":1,"message":"780","line":2,"column":41,"nodeType":"731","messageId":"732","endLine":2,"endColumn":52},{"ruleId":"729","severity":1,"message":"781","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":14},{"ruleId":"729","severity":1,"message":"782","line":3,"column":16,"nodeType":"731","messageId":"732","endLine":3,"endColumn":21},{"ruleId":"729","severity":1,"message":"773","line":171,"column":11,"nodeType":"731","messageId":"732","endLine":171,"endColumn":20},{"ruleId":"729","severity":1,"message":"787","line":254,"column":23,"nodeType":"731","messageId":"732","endLine":254,"endColumn":31},{"ruleId":"729","severity":1,"message":"788","line":254,"column":33,"nodeType":"731","messageId":"732","endLine":254,"endColumn":37},{"ruleId":"758","replacedBy":"789"},{"ruleId":"760","replacedBy":"790"},{"ruleId":"758","replacedBy":"791"},{"ruleId":"760","replacedBy":"792"},{"ruleId":"758","replacedBy":"793"},{"ruleId":"760","replacedBy":"794"},{"ruleId":"795","severity":1,"message":"796","line":89,"column":48,"nodeType":"797","messageId":"798","endLine":98,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":213,"column":48,"nodeType":"797","messageId":"798","endLine":240,"endColumn":10},{"ruleId":"758","replacedBy":"799"},{"ruleId":"760","replacedBy":"800"},{"ruleId":"795","severity":1,"message":"796","line":212,"column":48,"nodeType":"797","messageId":"798","endLine":214,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":222,"column":48,"nodeType":"797","messageId":"798","endLine":225,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":232,"column":48,"nodeType":"797","messageId":"798","endLine":234,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":241,"column":48,"nodeType":"797","messageId":"798","endLine":243,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":255,"column":48,"nodeType":"797","messageId":"798","endLine":259,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":270,"column":48,"nodeType":"797","messageId":"798","endLine":279,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":286,"column":48,"nodeType":"797","messageId":"798","endLine":288,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":296,"column":48,"nodeType":"797","messageId":"798","endLine":298,"endColumn":10},{"ruleId":"746","severity":1,"message":"775","line":351,"column":35,"nodeType":"748","messageId":"776","endLine":351,"endColumn":37},{"ruleId":"729","severity":1,"message":"801","line":2,"column":31,"nodeType":"731","messageId":"732","endLine":2,"endColumn":37},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"802","severity":1,"message":"803","line":38,"column":5,"nodeType":"756","endLine":38,"endColumn":41},{"ruleId":"804","severity":1,"message":"805","line":9,"column":63,"nodeType":"806","messageId":"807","endLine":9,"endColumn":80},{"ruleId":"808","severity":1,"message":"809","line":10,"column":63,"nodeType":"810","messageId":"811","endLine":10,"endColumn":64},{"ruleId":"812","severity":1,"message":"813","line":163,"column":24,"nodeType":"814","messageId":"815","endLine":163,"endColumn":31},{"ruleId":"746","severity":1,"message":"775","line":242,"column":58,"nodeType":"748","messageId":"776","endLine":242,"endColumn":60},{"ruleId":"795","severity":1,"message":"796","line":31,"column":48,"nodeType":"797","messageId":"798","endLine":36,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":44,"column":48,"nodeType":"797","messageId":"798","endLine":46,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":55,"column":48,"nodeType":"797","messageId":"798","endLine":58,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":68,"column":48,"nodeType":"797","messageId":"798","endLine":70,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":91,"column":48,"nodeType":"797","messageId":"798","endLine":100,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":109,"column":48,"nodeType":"797","messageId":"798","endLine":111,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":119,"column":48,"nodeType":"797","messageId":"798","endLine":121,"endColumn":10},{"ruleId":"812","severity":1,"message":"813","line":133,"column":28,"nodeType":"816","messageId":"815","endLine":133,"endColumn":39},{"ruleId":"729","severity":1,"message":"817","line":2,"column":16,"nodeType":"731","messageId":"732","endLine":2,"endColumn":22},{"ruleId":"729","severity":1,"message":"801","line":2,"column":39,"nodeType":"731","messageId":"732","endLine":2,"endColumn":45},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"729","severity":1,"message":"818","line":3,"column":16,"nodeType":"731","messageId":"732","endLine":3,"endColumn":30},{"ruleId":"729","severity":1,"message":"819","line":6,"column":10,"nodeType":"731","messageId":"732","endLine":6,"endColumn":23},{"ruleId":"729","severity":1,"message":"820","line":7,"column":10,"nodeType":"731","messageId":"732","endLine":7,"endColumn":26},{"ruleId":"729","severity":1,"message":"821","line":9,"column":7,"nodeType":"731","messageId":"732","endLine":9,"endColumn":13},{"ruleId":"735","severity":1,"message":"739","line":41,"column":23,"nodeType":"737","messageId":"738","endLine":41,"endColumn":25},{"ruleId":"729","severity":1,"message":"822","line":50,"column":19,"nodeType":"731","messageId":"732","endLine":50,"endColumn":26},{"ruleId":"729","severity":1,"message":"823","line":51,"column":19,"nodeType":"731","messageId":"732","endLine":51,"endColumn":29},{"ruleId":"729","severity":1,"message":"824","line":73,"column":13,"nodeType":"731","messageId":"732","endLine":73,"endColumn":17},{"ruleId":"825","severity":1,"message":"826","line":77,"column":15,"nodeType":"827","messageId":"828","endLine":77,"endColumn":33,"fix":"829"},{"ruleId":"754","severity":1,"message":"755","line":108,"column":40,"nodeType":"756","endLine":108,"endColumn":100},{"ruleId":"754","severity":1,"message":"755","line":108,"column":100,"nodeType":"756","endLine":108,"endColumn":160},{"ruleId":"802","severity":1,"message":"803","line":113,"column":13,"nodeType":"756","endLine":113,"endColumn":116},{"ruleId":"830","severity":1,"message":"831","line":113,"column":21,"nodeType":"827","messageId":"832","endLine":113,"endColumn":35},{"ruleId":"802","severity":1,"message":"803","line":30,"column":5,"nodeType":"756","endLine":30,"endColumn":41},{"ruleId":"729","severity":1,"message":"833","line":5,"column":7,"nodeType":"731","messageId":"732","endLine":5,"endColumn":15},{"ruleId":"735","severity":1,"message":"739","line":161,"column":42,"nodeType":"737","messageId":"738","endLine":161,"endColumn":44},{"ruleId":"729","severity":1,"message":"834","line":4,"column":10,"nodeType":"731","messageId":"732","endLine":4,"endColumn":16},{"ruleId":"729","severity":1,"message":"821","line":8,"column":7,"nodeType":"731","messageId":"732","endLine":8,"endColumn":13},{"ruleId":"729","severity":1,"message":"835","line":84,"column":24,"nodeType":"731","messageId":"732","endLine":84,"endColumn":33},{"ruleId":"729","severity":1,"message":"836","line":84,"column":35,"nodeType":"731","messageId":"732","endLine":84,"endColumn":41},{"ruleId":"729","severity":1,"message":"837","line":5,"column":7,"nodeType":"731","messageId":"732","endLine":5,"endColumn":14},{"ruleId":"758","replacedBy":"838"},{"ruleId":"760","replacedBy":"839"},{"ruleId":"729","severity":1,"message":"840","line":2,"column":10,"nodeType":"731","messageId":"732","endLine":2,"endColumn":13},{"ruleId":"729","severity":1,"message":"780","line":2,"column":49,"nodeType":"731","messageId":"732","endLine":2,"endColumn":60},{"ruleId":"729","severity":1,"message":"841","line":5,"column":10,"nodeType":"731","messageId":"732","endLine":5,"endColumn":20},{"ruleId":"729","severity":1,"message":"821","line":6,"column":7,"nodeType":"731","messageId":"732","endLine":6,"endColumn":13},{"ruleId":"842","severity":1,"message":"843","line":9,"column":5,"nodeType":"844","messageId":"845","endLine":11,"endColumn":3},{"ruleId":"802","severity":1,"message":"803","line":38,"column":12,"nodeType":"756","endLine":38,"endColumn":42},{"ruleId":"830","severity":1,"message":"831","line":38,"column":20,"nodeType":"827","messageId":"832","endLine":38,"endColumn":41},{"ruleId":"754","severity":1,"message":"755","line":39,"column":7,"nodeType":"756","endLine":39,"endColumn":82},{"ruleId":"729","severity":1,"message":"846","line":13,"column":7,"nodeType":"731","messageId":"732","endLine":13,"endColumn":26},{"ruleId":"729","severity":1,"message":"847","line":25,"column":7,"nodeType":"731","messageId":"732","endLine":25,"endColumn":27},{"ruleId":"729","severity":1,"message":"848","line":39,"column":7,"nodeType":"731","messageId":"732","endLine":39,"endColumn":17},{"ruleId":"729","severity":1,"message":"849","line":101,"column":60,"nodeType":"731","messageId":"732","endLine":101,"endColumn":65},{"ruleId":"735","severity":1,"message":"736","line":104,"column":44,"nodeType":"737","messageId":"738","endLine":104,"endColumn":46},{"ruleId":"758","replacedBy":"850"},{"ruleId":"760","replacedBy":"851"},{"ruleId":"758","replacedBy":"852"},{"ruleId":"760","replacedBy":"853"},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"729","severity":1,"message":"854","line":4,"column":8,"nodeType":"731","messageId":"732","endLine":4,"endColumn":9},{"ruleId":"735","severity":1,"message":"739","line":24,"column":38,"nodeType":"737","messageId":"738","endLine":24,"endColumn":40},{"ruleId":"795","severity":1,"message":"796","line":71,"column":48,"nodeType":"797","messageId":"798","endLine":74,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":43,"column":48,"nodeType":"797","messageId":"798","endLine":48,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":121,"column":48,"nodeType":"797","messageId":"798","endLine":123,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":126,"column":48,"nodeType":"797","messageId":"798","endLine":128,"endColumn":10},{"ruleId":"746","severity":1,"message":"775","line":6,"column":43,"nodeType":"748","messageId":"776","endLine":6,"endColumn":45},{"ruleId":"746","severity":1,"message":"775","line":14,"column":43,"nodeType":"748","messageId":"776","endLine":14,"endColumn":45},{"ruleId":"795","severity":1,"message":"796","line":28,"column":48,"nodeType":"797","messageId":"798","endLine":30,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":39,"column":48,"nodeType":"797","messageId":"798","endLine":45,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":53,"column":48,"nodeType":"797","messageId":"798","endLine":55,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":61,"column":48,"nodeType":"797","messageId":"798","endLine":67,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":74,"column":48,"nodeType":"797","messageId":"798","endLine":83,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":91,"column":48,"nodeType":"797","messageId":"798","endLine":102,"endColumn":10},{"ruleId":"812","severity":1,"message":"813","line":92,"column":28,"nodeType":"816","messageId":"815","endLine":92,"endColumn":39},{"ruleId":"729","severity":1,"message":"855","line":2,"column":8,"nodeType":"731","messageId":"732","endLine":2,"endColumn":9},{"ruleId":"729","severity":1,"message":"840","line":11,"column":25,"nodeType":"731","messageId":"732","endLine":11,"endColumn":28},{"ruleId":"729","severity":1,"message":"856","line":17,"column":3,"nodeType":"731","messageId":"732","endLine":17,"endColumn":21},{"ruleId":"729","severity":1,"message":"841","line":19,"column":3,"nodeType":"731","messageId":"732","endLine":19,"endColumn":13},{"ruleId":"729","severity":1,"message":"734","line":33,"column":10,"nodeType":"731","messageId":"732","endLine":33,"endColumn":17},{"ruleId":"729","severity":1,"message":"857","line":35,"column":5,"nodeType":"731","messageId":"732","endLine":35,"endColumn":22},{"ruleId":"735","severity":1,"message":"739","line":144,"column":25,"nodeType":"737","messageId":"738","endLine":144,"endColumn":27},{"ruleId":"735","severity":1,"message":"739","line":466,"column":30,"nodeType":"737","messageId":"738","endLine":466,"endColumn":32},{"ruleId":"729","severity":1,"message":"741","line":506,"column":13,"nodeType":"731","messageId":"732","endLine":506,"endColumn":21},{"ruleId":"729","severity":1,"message":"858","line":508,"column":11,"nodeType":"731","messageId":"732","endLine":508,"endColumn":19},{"ruleId":"729","severity":1,"message":"859","line":573,"column":7,"nodeType":"731","messageId":"732","endLine":573,"endColumn":23},{"ruleId":"729","severity":1,"message":"860","line":585,"column":7,"nodeType":"731","messageId":"732","endLine":585,"endColumn":24},{"ruleId":"754","severity":1,"message":"755","line":617,"column":15,"nodeType":"756","endLine":617,"endColumn":75},{"ruleId":"754","severity":1,"message":"755","line":618,"column":15,"nodeType":"756","endLine":618,"endColumn":75},{"ruleId":"735","severity":1,"message":"739","line":642,"column":34,"nodeType":"737","messageId":"738","endLine":642,"endColumn":36},{"ruleId":"735","severity":1,"message":"739","line":36,"column":55,"nodeType":"737","messageId":"738","endLine":36,"endColumn":57},{"ruleId":"735","severity":1,"message":"739","line":37,"column":19,"nodeType":"737","messageId":"738","endLine":37,"endColumn":21},{"ruleId":"735","severity":1,"message":"739","line":44,"column":27,"nodeType":"737","messageId":"738","endLine":44,"endColumn":29},{"ruleId":"735","severity":1,"message":"736","line":46,"column":19,"nodeType":"737","messageId":"738","endLine":46,"endColumn":21},{"ruleId":"735","severity":1,"message":"739","line":79,"column":23,"nodeType":"737","messageId":"738","endLine":79,"endColumn":25},{"ruleId":"735","severity":1,"message":"739","line":80,"column":43,"nodeType":"737","messageId":"738","endLine":80,"endColumn":45},{"ruleId":"729","severity":1,"message":"861","line":168,"column":9,"nodeType":"731","messageId":"732","endLine":168,"endColumn":18},{"ruleId":"729","severity":1,"message":"862","line":168,"column":20,"nodeType":"731","messageId":"732","endLine":168,"endColumn":26},{"ruleId":"729","severity":1,"message":"863","line":168,"column":28,"nodeType":"731","messageId":"732","endLine":168,"endColumn":36},{"ruleId":"864","severity":1,"message":"865","line":178,"column":9,"nodeType":"814","messageId":"738","endLine":178,"endColumn":13,"fix":"866"},{"ruleId":"729","severity":1,"message":"867","line":198,"column":7,"nodeType":"731","messageId":"732","endLine":198,"endColumn":20},{"ruleId":"729","severity":1,"message":"868","line":199,"column":7,"nodeType":"731","messageId":"732","endLine":199,"endColumn":19},{"ruleId":"729","severity":1,"message":"869","line":200,"column":7,"nodeType":"731","messageId":"732","endLine":200,"endColumn":20},{"ruleId":"735","severity":1,"message":"736","line":247,"column":39,"nodeType":"737","messageId":"738","endLine":247,"endColumn":41},{"ruleId":"735","severity":1,"message":"736","line":248,"column":39,"nodeType":"737","messageId":"738","endLine":248,"endColumn":41},{"ruleId":"735","severity":1,"message":"736","line":249,"column":39,"nodeType":"737","messageId":"738","endLine":249,"endColumn":41},{"ruleId":"735","severity":1,"message":"739","line":328,"column":56,"nodeType":"737","messageId":"738","endLine":328,"endColumn":58},{"ruleId":"729","severity":1,"message":"870","line":61,"column":17,"nodeType":"731","messageId":"732","endLine":61,"endColumn":28},{"ruleId":"729","severity":1,"message":"871","line":84,"column":21,"nodeType":"731","messageId":"732","endLine":84,"endColumn":26},{"ruleId":"729","severity":1,"message":"872","line":89,"column":21,"nodeType":"731","messageId":"732","endLine":89,"endColumn":29},{"ruleId":"729","severity":1,"message":"871","line":143,"column":17,"nodeType":"731","messageId":"732","endLine":143,"endColumn":22},{"ruleId":"729","severity":1,"message":"872","line":148,"column":17,"nodeType":"731","messageId":"732","endLine":148,"endColumn":25},{"ruleId":"729","severity":1,"message":"779","line":2,"column":23,"nodeType":"731","messageId":"732","endLine":2,"endColumn":29},{"ruleId":"729","severity":1,"message":"821","line":9,"column":7,"nodeType":"731","messageId":"732","endLine":9,"endColumn":13},{"ruleId":"735","severity":1,"message":"739","line":14,"column":14,"nodeType":"737","messageId":"738","endLine":14,"endColumn":16},{"ruleId":"873","severity":1,"message":"874","line":30,"column":8,"nodeType":"731","messageId":"875","endLine":30,"endColumn":10},{"ruleId":"746","severity":1,"message":"775","line":52,"column":19,"nodeType":"748","messageId":"776","endLine":52,"endColumn":21},{"ruleId":"876","severity":1,"message":"877","line":1,"column":1,"nodeType":"878","messageId":"879","endLine":1,"endColumn":14,"fix":"880"},{"ruleId":"735","severity":1,"message":"736","line":47,"column":129,"nodeType":"737","messageId":"738","endLine":47,"endColumn":131},{"ruleId":"729","severity":1,"message":"780","line":2,"column":41,"nodeType":"731","messageId":"732","endLine":2,"endColumn":52},{"ruleId":"729","severity":1,"message":"881","line":12,"column":47,"nodeType":"731","messageId":"732","endLine":12,"endColumn":55},{"ruleId":"758","replacedBy":"882"},{"ruleId":"760","replacedBy":"883"},{"ruleId":"884","severity":1,"message":"885","line":233,"column":6,"nodeType":"886","endLine":233,"endColumn":8,"suggestions":"887"},{"ruleId":"729","severity":1,"message":"888","line":4,"column":7,"nodeType":"731","messageId":"732","endLine":4,"endColumn":13},{"ruleId":"729","severity":1,"message":"889","line":7,"column":7,"nodeType":"731","messageId":"732","endLine":7,"endColumn":16},{"ruleId":"795","severity":1,"message":"796","line":29,"column":48,"nodeType":"797","messageId":"798","endLine":31,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":40,"column":48,"nodeType":"797","messageId":"798","endLine":46,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":54,"column":48,"nodeType":"797","messageId":"798","endLine":56,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":62,"column":48,"nodeType":"797","messageId":"798","endLine":64,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":71,"column":48,"nodeType":"797","messageId":"798","endLine":78,"endColumn":10},{"ruleId":"795","severity":1,"message":"796","line":86,"column":48,"nodeType":"797","messageId":"798","endLine":95,"endColumn":10},{"ruleId":"812","severity":1,"message":"813","line":87,"column":28,"nodeType":"816","messageId":"815","endLine":87,"endColumn":39},{"ruleId":"758","replacedBy":"890"},{"ruleId":"760","replacedBy":"891"},{"ruleId":"729","severity":1,"message":"892","line":20,"column":5,"nodeType":"731","messageId":"732","endLine":20,"endColumn":8},{"ruleId":"729","severity":1,"message":"893","line":153,"column":9,"nodeType":"731","messageId":"732","endLine":153,"endColumn":22},{"ruleId":"729","severity":1,"message":"894","line":2,"column":8,"nodeType":"731","messageId":"732","endLine":2,"endColumn":19},{"ruleId":"729","severity":1,"message":"895","line":53,"column":5,"nodeType":"731","messageId":"732","endLine":53,"endColumn":12},{"ruleId":"729","severity":1,"message":"773","line":233,"column":11,"nodeType":"731","messageId":"732","endLine":233,"endColumn":20},{"ruleId":"729","severity":1,"message":"788","line":343,"column":33,"nodeType":"731","messageId":"732","endLine":343,"endColumn":37},{"ruleId":"802","severity":1,"message":"896","line":464,"column":13,"nodeType":"756","endLine":473,"endColumn":14},{"ruleId":"729","severity":1,"message":"781","line":3,"column":3,"nodeType":"731","messageId":"732","endLine":3,"endColumn":7},{"ruleId":"729","severity":1,"message":"782","line":4,"column":3,"nodeType":"731","messageId":"732","endLine":4,"endColumn":8},{"ruleId":"729","severity":1,"message":"780","line":9,"column":3,"nodeType":"731","messageId":"732","endLine":9,"endColumn":14},{"ruleId":"729","severity":1,"message":"861","line":53,"column":9,"nodeType":"731","messageId":"732","endLine":53,"endColumn":18},{"ruleId":"729","severity":1,"message":"862","line":53,"column":20,"nodeType":"731","messageId":"732","endLine":53,"endColumn":26},{"ruleId":"729","severity":1,"message":"863","line":53,"column":28,"nodeType":"731","messageId":"732","endLine":53,"endColumn":36},{"ruleId":"864","severity":1,"message":"865","line":63,"column":9,"nodeType":"814","messageId":"738","endLine":63,"endColumn":13,"fix":"897"},{"ruleId":"735","severity":1,"message":"739","line":72,"column":25,"nodeType":"737","messageId":"738","endLine":72,"endColumn":27},{"ruleId":"729","severity":1,"message":"898","line":85,"column":19,"nodeType":"731","messageId":"732","endLine":85,"endColumn":31},{"ruleId":"802","severity":1,"message":"803","line":137,"column":21,"nodeType":"756","endLine":137,"endColumn":51},{"ruleId":"830","severity":1,"message":"831","line":137,"column":29,"nodeType":"827","messageId":"832","endLine":137,"endColumn":50},{"ruleId":"795","severity":1,"message":"796","line":37,"column":122,"nodeType":"797","messageId":"798","endLine":42,"endColumn":18},{"ruleId":"729","severity":1,"message":"801","line":2,"column":31,"nodeType":"731","messageId":"732","endLine":2,"endColumn":37},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"802","severity":1,"message":"803","line":40,"column":5,"nodeType":"756","endLine":40,"endColumn":41},{"ruleId":"758","replacedBy":"899"},{"ruleId":"760","replacedBy":"900"},{"ruleId":"729","severity":1,"message":"779","line":3,"column":10,"nodeType":"731","messageId":"732","endLine":3,"endColumn":16},{"ruleId":"735","severity":1,"message":"739","line":25,"column":31,"nodeType":"737","messageId":"738","endLine":25,"endColumn":33},{"ruleId":"729","severity":1,"message":"901","line":44,"column":13,"nodeType":"731","messageId":"732","endLine":44,"endColumn":24},{"ruleId":"735","severity":1,"message":"739","line":71,"column":29,"nodeType":"737","messageId":"738","endLine":71,"endColumn":31},{"ruleId":"735","severity":1,"message":"739","line":72,"column":49,"nodeType":"737","messageId":"738","endLine":72,"endColumn":51},{"ruleId":"729","severity":1,"message":"837","line":92,"column":23,"nodeType":"731","messageId":"732","endLine":92,"endColumn":30},{"ruleId":"729","severity":1,"message":"902","line":102,"column":7,"nodeType":"731","messageId":"732","endLine":102,"endColumn":19},{"ruleId":"754","severity":1,"message":"755","line":113,"column":15,"nodeType":"756","endLine":113,"endColumn":78},{"ruleId":"754","severity":1,"message":"755","line":114,"column":15,"nodeType":"756","endLine":114,"endColumn":78},{"ruleId":"735","severity":1,"message":"736","line":134,"column":33,"nodeType":"737","messageId":"738","endLine":134,"endColumn":35},{"ruleId":"729","severity":1,"message":"903","line":1,"column":8,"nodeType":"731","messageId":"732","endLine":1,"endColumn":19},{"ruleId":"758","replacedBy":"904"},{"ruleId":"760","replacedBy":"905"},{"ruleId":"729","severity":1,"message":"801","line":2,"column":31,"nodeType":"731","messageId":"732","endLine":2,"endColumn":37},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"802","severity":1,"message":"803","line":37,"column":5,"nodeType":"756","endLine":37,"endColumn":41},{"ruleId":"758","replacedBy":"906"},{"ruleId":"760","replacedBy":"907"},{"ruleId":"758","replacedBy":"908"},{"ruleId":"760","replacedBy":"909"},{"ruleId":"729","severity":1,"message":"779","line":2,"column":23,"nodeType":"731","messageId":"732","endLine":2,"endColumn":29},{"ruleId":"758","replacedBy":"910"},{"ruleId":"760","replacedBy":"911"},{"ruleId":"729","severity":1,"message":"781","line":2,"column":10,"nodeType":"731","messageId":"732","endLine":2,"endColumn":14},{"ruleId":"729","severity":1,"message":"782","line":2,"column":16,"nodeType":"731","messageId":"732","endLine":2,"endColumn":21},{"ruleId":"729","severity":1,"message":"801","line":2,"column":31,"nodeType":"731","messageId":"732","endLine":2,"endColumn":37},{"ruleId":"729","severity":1,"message":"783","line":3,"column":8,"nodeType":"731","messageId":"732","endLine":3,"endColumn":12},{"ruleId":"729","severity":1,"message":"894","line":2,"column":8,"nodeType":"731","messageId":"732","endLine":2,"endColumn":19},{"ruleId":"729","severity":1,"message":"769","line":159,"column":11,"nodeType":"731","messageId":"732","endLine":159,"endColumn":19},{"ruleId":"735","severity":1,"message":"739","line":413,"column":43,"nodeType":"737","messageId":"738","endLine":413,"endColumn":45},{"ruleId":"802","severity":1,"message":"896","line":420,"column":19,"nodeType":"756","endLine":420,"endColumn":22},{"ruleId":"729","severity":1,"message":"912","line":2,"column":17,"nodeType":"731","messageId":"732","endLine":2,"endColumn":23},{"ruleId":"729","severity":1,"message":"913","line":2,"column":25,"nodeType":"731","messageId":"732","endLine":2,"endColumn":34},{"ruleId":"729","severity":1,"message":"856","line":6,"column":10,"nodeType":"731","messageId":"732","endLine":6,"endColumn":28},{"ruleId":"729","severity":1,"message":"824","line":86,"column":13,"nodeType":"731","messageId":"732","endLine":86,"endColumn":17},{"ruleId":"758","replacedBy":"914"},{"ruleId":"760","replacedBy":"915"},"no-unused-vars","'getUserData' is defined but never used.","Identifier","unusedVar","'getTrailPublic' is defined but never used.","'resolve' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'currentTourType' is assigned a value but never used.","'tourType' is assigned a value but never used.","'userId' is defined but never used.","'isPreview' is defined but never used.","'isPreviewSingleTrail' is defined but never used.","'followedTrailUserData' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'trail' is assigned a value but never used.","'position' is assigned a value but never used.","'open' is assigned a value but never used.","'localStorageCount' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'mainComponent' is assigned a value but never used.","no-native-reassign",["916"],"no-negated-in-lhs",["917"],"'Tour' is defined but never used.","'notification' is defined but never used.","'ReactDOM' is defined but never used.","'unique' is defined but never used.","'urlStingCheck' is defined but never used.","'getScrollParent' is defined but never used.","'getWindowRelativeOffset' is defined but never used.","'tourStep' is assigned a value but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","'checkFirstStep' is assigned a value but never used.","'content' is assigned a value but never used.","'tourSteps' is assigned a value but never used.","'tourContent' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","expectedInside",["916"],["917"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Icon' is defined but never used.",["916"],["917"],"'ModalHeader' is defined but never used.","'tourSide' is assigned a value but never used.","'play' is assigned a value but never used.",["916"],["917"],["916"],["917"],["916"],["917"],"require-yield","This generator function does not have 'yield'.","FunctionExpression","missingYield",["916"],["917"],"'Avatar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","NewExpression","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'createTrailId' is defined but never used.","'handleFileUpload' is defined but never used.","'chrome' is assigned a value but never used.","'user_id' is assigned a value but never used.","'trail_name' is assigned a value but never used.","'form' is assigned a value but never used.","no-regex-spaces","Spaces are hard to count. Use {2}.","Literal","multipleSpaces",{"range":"918","text":"919"},"no-script-url","Script URL is a form of eval.","unexpectedScriptURL","'receiver' is assigned a value but never used.","'wallet' is defined but never used.","'toAddress' is assigned a value but never used.","'amount' is assigned a value but never used.","'isValid' is assigned a value but never used.",["916"],["917"],"'get' is defined but never used.","'getAllUser' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'onTitleClickHandler' is assigned a value but never used.","'onDescriptionHandler' is assigned a value but never used.","'DragHandle' is assigned a value but never used.","'index' is assigned a value but never used.",["916"],["917"],["916"],["917"],"'$' is defined but never used.","'_' is defined but never used.","'getAllNotification' is defined but never used.","'autoLogoutTimeout' is defined but never used.","'fileType' is assigned a value but never used.","'notificationData' is assigned a value but never used.","'croppedAreaPixels' is assigned a value but never used.","'authToken' is defined but never used.","'reload' is defined but never used.","'userData' is defined but never used.","no-extra-bind","The function binding is unnecessary.",{"range":"920","text":"921"},"'isLoadingLink' is assigned a value but never used.","'isCopiedLink' is assigned a value but never used.","'isCopiedError' is assigned a value but never used.","'description' is assigned a value but never used.","'paths' is assigned a value but never used.","'selector' is assigned a value but never used.","no-self-assign","'el' is assigned to itself.","selfAssignment","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"922","text":"921"},"'textType' is assigned a value but never used.",["916"],["917"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onIframeBodyClick' and 'updateDescription'. Either include them or remove the dependency array.","ArrayExpression",["923"],"'config' is assigned a value but never used.","'publicKey' is assigned a value but never used.",["916"],["917"],"'bkg' is assigned a value but never used.","'storageChange' is assigned a value but never used.","'ReactPlayer' is defined but never used.","'draggie' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md",{"range":"924","text":"921"},"'followerList' is assigned a value but never used.",["916"],["917"],"'trail_title' is assigned a value but never used.","'categoryList' is assigned a value but never used.","'ContractKit' is defined but never used.",["916"],["917"],["916"],["917"],["916"],["917"],["916"],["917"],"'useRef' is defined but never used.","'createRef' is defined but never used.",["916"],["917"],"no-global-assign","no-unsafe-negation",[2282,2284]," {2}",[5086,5097],"",[0,13],{"desc":"925","fix":"926"},[1520,1531],"Update the dependencies array to be: [onIframeBodyClick, updateDescription]",{"range":"927","text":"928"},[7068,7070],"[onIframeBodyClick, updateDescription]"]