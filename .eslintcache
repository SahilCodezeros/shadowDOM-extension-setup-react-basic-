[{"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/Content.js":"1","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/otpVerification.js":"2","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/confirmPassword.js":"3","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/login.js":"4","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/audAndVidCommon.js":"5","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/generateKey.js":"6","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/index.js":"7","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/transaction.js":"8","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account_creator.js":"9","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/connection.js":"10","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/signer.js":"11","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/wallet-account.js":"12","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/index.js":"13","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/wallet/index.js":"14","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/errors.js":"15","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/sendtx.js":"16","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/provider.js":"17","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/serialize.js":"18","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/merge_key_store.js":"19","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/in_memory_key_store.js":"20","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/App.js":"21","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userProfile.js":"22","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/common-index.js":"23","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account.js":"24","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/near.js":"25","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileList.js":"26","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/index.js":"27","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/validation.js":"28","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/rpc_errors.js":"29","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/json-rpc-provider.js":"30","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/exponential-backoff.js":"31","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js":"32","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/generated/rpc_error_types.js":"33","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/index.js":"34","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/axios.js":"35","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/contract.js":"36","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userCUSD.js":"37","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/api/index.js":"38","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/SendTipForm.js":"39","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/index.js":"40","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/keystore.js":"41","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/browser_local_storage_key_store.js":"42","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/forgotPassword.js":"43","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/validators.js":"44","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileEdit.js":"45","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/enums.js":"46","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/network.js":"47","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/index.js":"48","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userVerification.js":"49","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/socket.js":"50","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/getBalance.js":"51","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/key_pair.js":"52","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/signup.js":"53","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileAdd.js":"54","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/index.js":"55","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userConfirmation.js":"56","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/web.js":"57","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/format.js":"58","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account_multisig.js":"59","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/reportWebVitals.js":"60"},{"size":1436,"mtime":1606988265978,"results":"61","hashOfConfig":"62"},{"size":1436,"mtime":1606982881265,"results":"63","hashOfConfig":"62"},{"size":1910,"mtime":1606982881253,"results":"64","hashOfConfig":"62"},{"size":5332,"mtime":1606994278902,"results":"65","hashOfConfig":"62"},{"size":1011,"mtime":1606982944334,"results":"66","hashOfConfig":"62"},{"size":992,"mtime":1606982944598,"results":"67","hashOfConfig":"62"},{"size":256,"mtime":1606982881233,"results":"68","hashOfConfig":"62"},{"size":8620,"mtime":1606982944482,"results":"69","hashOfConfig":"62"},{"size":2500,"mtime":1606982944438,"results":"70","hashOfConfig":"62"},{"size":1335,"mtime":1606982944450,"results":"71","hashOfConfig":"62"},{"size":3148,"mtime":1606982944482,"results":"72","hashOfConfig":"62"},{"size":13274,"mtime":1606982944502,"results":"73","hashOfConfig":"62"},{"size":290,"mtime":1606982944474,"results":"74","hashOfConfig":"62"},{"size":1037,"mtime":1606982944350,"results":"75","hashOfConfig":"62"},{"size":722,"mtime":1606982944486,"results":"76","hashOfConfig":"62"},{"size":4189,"mtime":1606982944602,"results":"77","hashOfConfig":"62"},{"size":1139,"mtime":1606982944478,"results":"78","hashOfConfig":"62"},{"size":10911,"mtime":1606982944498,"results":"79","hashOfConfig":"62"},{"size":4026,"mtime":1606982944474,"results":"80","hashOfConfig":"62"},{"size":3609,"mtime":1606982944470,"results":"81","hashOfConfig":"62"},{"size":3039,"mtime":1606984967775,"results":"82","hashOfConfig":"62"},{"size":13761,"mtime":1606982881269,"results":"83","hashOfConfig":"62"},{"size":827,"mtime":1606982944446,"results":"84","hashOfConfig":"62"},{"size":18770,"mtime":1606982944430,"results":"85","hashOfConfig":"62"},{"size":5257,"mtime":1606982944474,"results":"86","hashOfConfig":"62"},{"size":11041,"mtime":1606982881245,"results":"87","hashOfConfig":"62"},{"size":438,"mtime":1606982944490,"results":"88","hashOfConfig":"62"},{"size":354,"mtime":1606982881249,"results":"89","hashOfConfig":"62"},{"size":2522,"mtime":1606982944490,"results":"90","hashOfConfig":"62"},{"size":8301,"mtime":1606982944478,"results":"91","hashOfConfig":"62"},{"size":1318,"mtime":1606982944486,"results":"92","hashOfConfig":"62"},{"size":5827,"mtime":1606982944474,"results":"93","hashOfConfig":"62"},{"size":4925,"mtime":1606982944462,"results":"94","hashOfConfig":"62"},{"size":1023,"mtime":1606978812272,"results":"95","hashOfConfig":"62"},{"size":4283,"mtime":1606982944334,"results":"96","hashOfConfig":"62"},{"size":3352,"mtime":1606982944450,"results":"97","hashOfConfig":"62"},{"size":4743,"mtime":1606982881237,"results":"98","hashOfConfig":"62"},{"size":250,"mtime":1606982944342,"results":"99","hashOfConfig":"62"},{"size":3888,"mtime":1606982944330,"results":"100","hashOfConfig":"62"},{"size":428,"mtime":1606982944470,"results":"101","hashOfConfig":"62"},{"size":79,"mtime":1606982944470,"results":"102","hashOfConfig":"62"},{"size":4661,"mtime":1606982944470,"results":"103","hashOfConfig":"62"},{"size":1380,"mtime":1606982881253,"results":"104","hashOfConfig":"62"},{"size":2121,"mtime":1606982944502,"results":"105","hashOfConfig":"62"},{"size":10162,"mtime":1606982881241,"results":"106","hashOfConfig":"62"},{"size":477,"mtime":1606982944482,"results":"107","hashOfConfig":"62"},{"size":0,"mtime":1606982944490,"results":"108","hashOfConfig":"62"},{"size":502,"mtime":1606982881257,"results":"109","hashOfConfig":"62"},{"size":1509,"mtime":1606982881273,"results":"110","hashOfConfig":"62"},{"size":105,"mtime":1606982944362,"results":"111","hashOfConfig":"62"},{"size":584,"mtime":1606982944598,"results":"112","hashOfConfig":"62"},{"size":3856,"mtime":1606982944490,"results":"113","hashOfConfig":"62"},{"size":6000,"mtime":1606994255158,"results":"114","hashOfConfig":"62"},{"size":4952,"mtime":1606982881241,"results":"115","hashOfConfig":"62"},{"size":582,"mtime":1606982944342,"results":"116","hashOfConfig":"62"},{"size":624,"mtime":1606982881269,"results":"117","hashOfConfig":"62"},{"size":3368,"mtime":1606982944498,"results":"118","hashOfConfig":"62"},{"size":3712,"mtime":1606982944486,"results":"119","hashOfConfig":"62"},{"size":11325,"mtime":1606982944446,"results":"120","hashOfConfig":"62"},{"size":362,"mtime":1606808398378,"results":"121","hashOfConfig":"62"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"125"},"8bb7ud",{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"129"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"133"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"137"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"140"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"156"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"140"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"140"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"174"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"151"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"140"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"133"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"192"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"137"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"198","usedDeprecatedRules":"137"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"188"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"192"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"140"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"140"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"140"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"140"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"151"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"156"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"240","usedDeprecatedRules":"140"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"243","usedDeprecatedRules":"140"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"133"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"151"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"137"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"129"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"192"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"151"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"266","usedDeprecatedRules":"140"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"192"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"272","messages":"273","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"274","usedDeprecatedRules":"129"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"129"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"281","usedDeprecatedRules":"151"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"151"},"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/Content.js",["284"],"import * as React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Content.css';\n\n/*global chrome*/\n\nexport class Test extends React.Component {\n    \n    render() {\n        console.log('content.js loaded');\n\n        return (\n            <div className=\"container\" id=\"top\">\n                <h2 className=\"h2 ff-mp-b c-gradient\">\n                    TESTING Shadow dom \n                </h2>\n                <button onClick={ () => console.log('hiii') }>Hiii</button>\n            </div>\n        );\n    };\n};\n\n// extension-test(content.js)\nconst extensionTestID = 'extension-div';\nlet extensionTest = document.getElementById(extensionTestID);\n\nif (!extensionTest) {\n  extensionTest = document.createElement('div');\n  extensionTest.setAttribute('id', extensionTestID);\n  window.document.body.append(extensionTest);\n  extensionTest.attachShadow({mode: 'open'});\n}\n\n// Select our shadow host\nlet extensionRoot = document.getElementById('extension-div');\nif (extensionRoot) {\n    // Create the shadow root\n    const shadowRoot = extensionRoot.shadowRoot;\n\n    if (shadowRoot) {\n        let div = shadowRoot.getElementById('extension');\n        if (!div) {\n            // Create a div element\n            div = document.createElement('div');\n            div.setAttribute('id', 'extension');\n\n            // Append div to shadow DOM\n            shadowRoot.appendChild(div);\n            ReactDOM.render(<Test/>, div);\n        }\n    }\n}",["285","286"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/otpVerification.js",["287","288","289"],"import React from 'react';\r\nimport { Form, Icon, Input, Button, Avatar } from 'antd';\r\n\r\nclass OtpVerification extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFields((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\t// const { getFieldDecorator } = this.props.form;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Forgot Password?</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">We will send OTP for your password recovery to your account.</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname=\"username\" \r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your OTP!',\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your OTP!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Code\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Code\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OtpVerification;\r\n// export default Form.create({ name: 'normal_login' })(OtpVerification);\r\n",["290","291"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/confirmPassword.js",["292","293","294"],"import React from 'react';\r\nimport { Form, Icon, Input, Button, Avatar } from 'antd';\r\n\r\nclass ConfirmPassword extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFields((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\t// const { getFieldDecorator } = this.props.form;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Set Password</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">Please enter your password to login into the Trailit account.</div>\r\n\t\t\t\t<div className=\"tr_label\">Enter Password</div>\r\n\t\t\t\t<Form onSubmit={this.onClickToSubmit}>\r\n\t\t\t\t\t<Form.Item name=\"password\" rules={[{ required: true, message: 'Please input Password!' }]}>\r\n\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t\t{/* {getFieldDecorator('password', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input Password!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item name=\"ConfirmPassword\" rules={[{ required: true, message: 'Please input Confirm Password!' }]}>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('ConfirmPassword', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input Confirm Password!' }],\r\n\t\t\t\t\t\t})(<Input type=\"password\" placeholder=\"Confirm Password\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Confirm Password\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ConfirmPassword;\r\n// export default Form.create({ name: 'normal_login' })(ConfirmPassword);\r\n",["295","296"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/login.js",["297","298","299","300","301","302","303","304"],"import React, { useRef, createRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport { getAllNotification } from '../common/axios';\r\nimport { keyPairGenerate } from '../code/generateKey';\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terrors: \"\",\r\n\t\t\tisAuth: false\r\n\t\t}\r\n\t}\r\n\r\n\t// Antd form reference\r\n\tformRef = React.createRef();\r\n\t\r\n\t// Facebook response function\r\n\tresponseFacebook = (response) => {\r\n\t\tconsole.log(response);\r\n\t}\r\n\r\n\t// On click to submit function\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('hiii', values);\r\n\r\n\t\taxios.post(`${process.env.REACT_APP_MS1_URL}user/login`, values, { withCredentials: true })\r\n\t\t\t.then((res, err) => {\r\n\t\t\t\tconsole.log('res', res);\r\n\t\t\t\tconsole.log('err', err);\r\n\t\t\t\tif (res.status === 200) {\r\n\r\n\t\t\t\t\tconst { responseCode, responseMessage } = res.data.data.response;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (responseCode === 208 || responseCode === 404) {\r\n\r\n\t\t\t\t\t\tthis.setState({errors: responseMessage});\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.setState({ errors: \"\" });\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst { jwt, user } = res.data.data.response.data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchrome.storage.local.set({ isAuth: true, auth_Tokan: jwt, userData: user, reload: true, keypair: keyPairGenerate() }, function() {\r\n\t\t\t\t\t\t\t// bkg.console.log(\"JWT, USER\", jwt, user)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.props.clickToRedirect('userProfile');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchrome.storage.local.set({ notification: true })\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ isAuth: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\t\r\n\t// Validate password with regular expression function\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n\t\tconst { form } = this.props;\r\n\t\t\r\n\t\tvar digit = /^(.*[0-9]+.*)$/;\r\n\t\tvar upper = /^(.*[A-Z]+.*)$/;\r\n\t\tvar lower = /^(.*[a-z]+.*)$/;\r\n\r\n\t\tif (value && !digit.test(value)) {\r\n\t\t\tcallback('Password must contain one digit');\r\n\t\t}\r\n\r\n\t\tif (value && !upper.test(value)) {\r\n\t\t\tcallback('Password must contain one uppercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && !lower.test(value)) {\r\n\t\t\tcallback('Password must contain one lowercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && value.length <= 8) {\r\n\t\t\tcallback('Password must be 8 digit');\r\n\t\t}\r\n\r\n\t\tif (value && this.state.confirmDirty) {\r\n\t\t\tthis.formRef.validateFields(['confirm'], { force: true });\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t};\r\n\r\n\tonFinishFailed = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n\t\r\n\trender() {\r\n\t\t// const { getFieldDecorator } = this.props.form;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t// <ReactShadowRoot>\r\n\t\t\t// \t<style>{ loginStyle }</style>\t\t\t\r\n\t\t\t\t// <div className={'trailMain'}>\r\n\t\t\t\t<div style={{ \r\n\t\t\t\t\theight: '600px',\r\n\t\t\t\t\twidth: '380px'\r\n\t\t\t\t}}>\r\n\t\t\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t\t\t<img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"login-img\" />\r\n\t\t\t\t\t\t<div className=\"tr_title\">Welcome to the Trailit.</div>\r\n\t\t\t\t\t\t<div className=\"tr_subtitle\">\r\n\t\t\t\t\t\t\tEnter your details to login. If you have not login details than\r\n\t\t\t\t\t\t\t<a href=\"javascript:;\" onClick={(e) => this.props.clickToRedirect('signup')} className=\"tr_link fw_400\">\r\n\t\t\t\t\t\t\t\tSignup Now\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n\t\t\t\t\t\t<div className=\"tr_label\">Signin</div>\r\n\t\t\t\t\t\t<Form \r\n\t\t\t\t\t\t\tref={ this.formRef } \r\n\t\t\t\t\t\t\tname=\"control-ref\"\r\n\t\t\t\t\t\t\tonFinish={ this.onClickToSubmit }\r\n\t\t\t\t\t\t\tonFinishFailed={ this.onFinishFailed }\t\r\n\t\t\t\t\t\t>\t\r\n\t\t\t\t\t\t\t<Form.Item \r\n\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\t\t\t// type: 'email',\r\n\t\t\t\t\t\t\t\t\t// message: 'Please enter valid email!',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmessage: 'Please enter your email!',\r\n\t\t\t\t\t\t\t\t}]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* {getFieldDecorator('email', {\r\n\t\t\t\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\t\t\t\tmessage: 'Please enter valid email!',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\t\tmessage: 'Please enter your email!',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item \r\n\t\t\t\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmin: 3,\r\n\t\t\t\t\t\t\t\t\tmessage: 'Please input your password!',\r\n\t\t\t\t\t\t\t\t}]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* {getFieldDecorator('password', {\r\n\t\t\t\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\t\t\tmessage: 'Please input your password!',\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t})(<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item className=\"last_fg\">\r\n\t\t\t\t\t\t\t\t<a className=\"tr_link flex_grow_1\" href=\"javascript:;\">\r\n\t\t\t\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\t\t\tLog in now\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t// </ReactShadowRoot>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n// export default Form.create()(Login);\r\n",["305","306"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/audAndVidCommon.js",[],["307","308"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/generateKey.js",["309","310"],"const { KeyPair } = require('../near-api-js/common-index.js');\n// const URL = require('url').URL;\n\nconst config = require('./config.json');\n\nconst keyPair = KeyPair.fromRandom('ed25519');\nconst publicKey = keyPair.getPublicKey().toString();\n\nconsole.log(`This should be saved to storage: ${keyPair.toString()}`);\n\nexport function keyPairGenerate() {\n    // const url = new URL(`${config.walletUrl}/login/`);\n    // url.searchParams.set('title', 'Trailit');\n    // url.searchParams.set('public_key', publicKey);\n    // url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n    // console.log(`Navigate to ${url.toString()} to authorize the above keypair`);\n    return keyPair.toString();\n};\n\n// const url = new URL(`${config.walletUrl}/login/`);\n// url.searchParams.set('title', 'Trailit');\n// url.searchParams.set('public_key', publicKey);\n// url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n// console.log(`Navigate to ${url.toString()} to authorize the above keypair`);","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/transaction.js",[],["311","312"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account_creator.js",[],["313","314"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/connection.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/signer.js",[],["315","316"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/wallet-account.js",["317","318"],"import { Account } from './account';\nimport { SCHEMA, createTransaction } from './transaction';\nimport { KeyPair, serialize, PublicKey } from './utils';\nimport { base_decode } from './utils/serialize';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\nexport class WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * walletAccount.isSignedIn();\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * walletAccount.getAccountId();\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param contractId The NEAR account where the contract is deployed\n     * @param title Name of the application that will appear as requesting access in Wallet\n     * @param successUrl Optional url to redirect upon success\n     * @param failureUrl Optional url to redirect upon failure\n     *\n     * @example\n     *   walletAccount.requestSignIn(\n     *     account-with-deploy-contract,\n     *     \"Guest Book\",\n     *     \"https://example.com/success.html\",\n     *     \"https://example.com/error.html\");\n     */\n    requestSignIn(contractId, title, successUrl, failureUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getAccountId() || (yield this._keyStore.getKey(this._networkId, this.getAccountId()))) {\n                return Promise.resolve();\n            }\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('title', title);\n            newUrl.searchParams.set('contract_id', contractId);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            newUrl.searchParams.set('app_url', currentUrl.origin);\n            const accessKey = KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions\n     * @param transactions Array of Transaction objects that will be requested to sign\n     * @param callbackUrl The url to navigate to after the user is prompted to sign\n     */\n    requestSignTransactions(transactions, callbackUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL('sign', this._walletBaseUrl);\n            newUrl.searchParams.set('transactions', transactions\n                .map(transaction => serialize.serialize(SCHEMA, transaction))\n                .map(serialized => Buffer.from(serialized).toString('base64'))\n                .join(','));\n            newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle situation when access key is not added\n            if (accountId && publicKey) {\n                this._authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n                yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     *\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexport const WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using (@link WalletConnection) when no local key is available.\n */\nclass ConnectedWalletAccount extends Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, receiverId, actions);\n                }\n                catch (e) {\n                    // TODO: Use TypedError when available\n                    if (e.message.includes('does not have enough balance')) {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const publicKey = PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + 1;\n            const status = yield this.connection.provider.status();\n            const blockHash = base_decode(status.sync_info.latest_block_hash);\n            const transaction = createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions([transaction], window.location.href);\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === \"0\") && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/wallet/index.js",["319"],"import ContractKit, { newKit } from '@celo/contractkit';\r\n\r\nclass Wallet {\r\n  constructor(address, privateKey) {\r\n    this.contractKit = newKit('https://alfajores-forno.celo-testnet.org');\r\n    this.contractKit.addAccount(privateKey); // Hardcoded Private Key for now\r\n    \r\n    this.address = address;\r\n  }\r\n\r\n  async transfer(to, amount) {  \r\n    const stableToken = await this.contractKit.contracts.getStableToken();\r\n    const weiTransferAmount = this.contractKit.web3.utils.toWei(amount, 'ether');\r\n    const tx = await stableToken.transfer(to, weiTransferAmount).send({\r\n      from: this.address,\r\n    });\r\n    const hash = await tx.getHash();\r\n    const receipt = await tx.waitReceipt();\r\n    \r\n    return {\r\n      tx,\r\n      hash,\r\n      receipt,\r\n    };\r\n  }\r\n  \r\n  async balance() {\r\n    const stableToken = await this.contractKit.contracts.getStableToken();\r\n    const balance = await stableToken.balanceOf(this.address);\r\n    return this.contractKit.web3.utils.fromWei(balance.toString());\r\n  }\r\n}\r\n\r\nexport default Wallet;\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/errors.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/sendtx.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/provider.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/serialize.js",["320","321","322","323"],"import bs58 from 'bs58';\nimport BN from 'bn.js';\n// TODO: Make sure this polyfill not included when not required\nimport * as encoding from 'text-encoding-utf-8';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\n\nexport function base_encode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58.encode(Buffer.from(value));\n}\n\nexport function base_decode(value) {\n    return Buffer.from(bs58.decode(value));\n}\n\nconst INITIAL_LENGTH = 1024;\n\nexport class BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\n\n/// Binary encoder.\nexport class BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybe_resize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    write_u8(value) {\n        this.maybe_resize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    write_u32(value) {\n        this.maybe_resize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    write_u64(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 8)));\n    }\n    write_u128(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 16)));\n    }\n    write_buffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    write_string(str) {\n        this.maybe_resize();\n        const b = Buffer.from(str, 'utf8');\n        this.write_u32(b.length);\n        this.write_buffer(b);\n    }\n    write_fixed_array(array) {\n        this.write_buffer(Buffer.from(array));\n    }\n    write_array(array, fn) {\n        this.maybe_resize();\n        this.write_u32(array.length);\n        for (const elem of array) {\n            this.maybe_resize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\n\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\n\nexport class BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    read_u8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    read_u32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    read_u64() {\n        const buf = this.read_buffer(8);\n        return new BN(buf, 'le');\n    }\n    read_u128() {\n        const buf = this.read_buffer(16);\n        return new BN(buf, 'le');\n    }\n    read_buffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    read_string() {\n        const len = this.read_u32();\n        const buf = this.read_buffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    read_fixed_array(len) {\n        return new Uint8Array(this.read_buffer(len));\n    }\n    read_array(fn) {\n        const len = this.read_u32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_string\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_fixed_array\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_array\", null);\n\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write_${fieldType}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.write_fixed_array(value);\n            }\n            else {\n                writer.write_array(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null) {\n                        writer.write_u8(0);\n                    }\n                    else {\n                        writer.write_u8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.write_u8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nexport function serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\n\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read_${fieldType}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.read_fixed_array(fieldType[0]);\n            }\n            return reader.read_array(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.read_u8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n\n/// Deserializes object from bytes using schema.\nexport function deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\n",["324","325"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/merge_key_store.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/in_memory_key_store.js",["326","327","328","329","330","331","332"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n/**\n * Simple in-memory keystore for testing purposes.\n */\nexport class InMemoryKeyStore extends KeyStore {\n    constructor() {\n        super();\n        this.keys = {};\n    }\n    /**\n     * Sets an in-memory storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys[`${accountId}:${networkId}`] = keyPair.toString();\n        });\n    }\n    /**\n     * Gets a key from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.keys[`${accountId}:${networkId}`];\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            delete this.keys[`${accountId}:${networkId}`];\n        });\n    }\n    /**\n     * Sets all in-memory keys to empty objects\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.keys = {};\n        });\n    }\n    /**\n     * Get the network(s) from in-memory storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                result.add(parts[1]);\n            });\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from in-memory storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            Object.keys(this.keys).forEach((key) => {\n                const parts = key.split(':');\n                if (parts[parts.length - 1] === networkId) {\n                    result.push(parts.slice(0, parts.length - 1).join(':'));\n                }\n            });\n            return result;\n        });\n    }\n    toString() {\n        return 'InMemoryKeyStore';\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/App.js",["333","334"],"import React from 'react';\nimport $ from 'jquery';\n\nimport {\n  ForgotPassword,\n\tLogin,\n\tUserConfirmation,\n\tUserProfile,\n\tUserVerification,\n\tOtpVerification,\n\tSignup,\n\tConfirmPassword,\n} from './components';\n\nconst chrome = window.chrome;\nlet bkg = chrome.extension.getBackgroundPage();\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tactive: {\n\t\t\t\tlogin: false,\n\t\t\t\tsignup: true,\n\t\t\t\tforgotPassword: false,\n\t\t\t\tuserConfirmation: false,\n\t\t\t\tuserVerification: false,\n\t\t\t\tuserProfile: false,\n\t\t\t\totpVerification: false,\n\t\t\t\tconfirmPassword: false\n\t\t\t},\n\t\t\ttoken: ''\n\t\t};\n\t}\n\t\n\tcomponentDidMount() {\n\t\t$('#my-extension-root-flip').remove()\n\t\tchrome.storage.local.get([\"auth_Tokan\", \"userData\"], function(items) {\n\t\t\tif(items.userData) {\n\t\t\t\tthis.onClickToRedirect('userProfile');\n\t\t\t} else {\n\t\t\t\tthis.onClickToRedirect('login')\n\t\t\t}\n\t\t}.bind(this));\n\t}\n\t\n\t/**\n\t * go to perticular component\n\t*/\n\tonClickToRedirect = (cmp) => {\n\t\tconst { active } = this.state;\n\t\t\n\t\tObject.keys(active).map(res => active[res] = false);\n\t\tactive[cmp] = true;\n\t\t// bkg.console.log(active);\n\t\tthis.setState({active});\n\t}\n\t\n\tonClickToLogout = () => {\n\t\tthis.onClickToRedirect('login');\n\t\tchrome.tabs.query({active: true, currentWindow: true}, tabs => {\n\t\t\tchrome.tabs.sendMessage(tabs[0].id, {status: 'logout'});\n\t\t});\n\t\tchrome.runtime.sendMessage({badgeText: ``});\n\t\tchrome.storage.local.set({trail_web_user_tour: [], notification: true})\n\t\tchrome.storage.local.clear();\n\t}\n\n\trender() {\n\t\tconst {\n\t\t\tlogin,\n\t\t\tforgotPassword,\n\t\t\tuserConfirmation,\n\t\t\tuserVerification,\n\t\t\tuserProfile,\n\t\t\totpVerification,\n\t\t\tsignup,\n\t\t\tconfirmPassword\n\t\t} = this.state.active;\n\n\t\tchrome.storage.local.get([\"isAuth\"], function (items) {\n\t\t\tif (items.isAuth) {\n\t\t\t\tif($('.trail_overlay').attr('class')!==undefined) {\n\t\t\t\t\t$('.trail_overlay').remove();\n\t\t\t\t}\n\t\t\t\t// if($('.my-extension-defaultroot').attr('class')=='block') {\n\t\t\t\t\t$('.my-extension-defaultroot').css({display: 'none'});\n\t\t\t\t// }\n\t\t\n\t\t\t\t// if($('.my-extension-root').attr('class')=='block') {\n\t\t\t\t\t$('.my-extension-root').css({display: 'none'});\n\t\t\t\t// }\n\t\t\t}\n\t\t});\n\t\t\n\t\treturn (\n\t\t\t<div className={'trailMain'}>\n\t\t\t\t{login && <Login clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{forgotPassword && <ForgotPassword clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{userConfirmation && <UserConfirmation clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{userVerification && <UserVerification clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{userProfile && <UserProfile clickToRedirect={this.onClickToRedirect} onClickToLogout={this.onClickToLogout}/>}\n\t\t\t\t{otpVerification && <OtpVerification clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{signup && <Signup clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t\t{confirmPassword && <ConfirmPassword clickToRedirect={this.onClickToRedirect}/>}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nchrome.storage.onChanged.addListener(function(changes, namespace) {\n\tfor (var key in changes) {\n\t  var storageChange = changes[key];\t  \n\t}\n});\n\nexport default App;\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userProfile.js",["335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import React from \"react\";\r\n\r\nimport { socket } from \"../common/socket\";\r\nimport { handleFileUpload } from \"../common/audAndVidCommon\";\r\nimport { wallet, getAddress } from \"../common/celo\";\r\nimport { getBalance } from \"../code/getBalance\";\r\n\r\n// import BgImage from \"../images/trailit_bx_img.png\";\r\nimport {\r\n  getAllNotification,\r\n  getUserSingleTrail,\r\n  getAllUser,\r\n  getAllCategory,\r\n  UpdateProfilePicture,\r\n} from \"../common/axios\";\r\nimport {\r\n  UserProfileEdit,\r\n  UserProfileList,\r\n  UserProfileAdd,\r\n  UserCUSD,\r\n} from \"./User\";\r\nimport $ from \"jquery\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\nclass UserProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      reload: false,\r\n      response: false,\r\n      balance: \"0.00\",\r\n      address: \"0.00\",\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      tab: \"logout\",\r\n      notificationData: [],\r\n      myTrilsListData: [],\r\n      followerLength: 0,\r\n      showMenu: false,\r\n      getOneEditRow: {},\r\n      addRaw: {},\r\n      listTitle: \"My Trails\",\r\n      editTrail: false,\r\n      categoryList: [],\r\n      isLoading: false,\r\n      profileImage: \"\",\r\n      slideBalance: false,\r\n      privateKey: '',\r\n      nearBalance: 0\r\n    };\r\n  }\r\n\r\n  // Get NEAR account balance\r\n  getNearAccountBalance() {\r\n\r\n    // Get NEAR balance of user\r\n    getBalance()\r\n    .then(res => {\r\n      console.log('res', res);\r\n      this.setState({ nearBalance: res });\r\n    })\r\n    .catch();\r\n  };\r\n  \r\n  async componentDidMount() {\r\n    let balance = await wallet.balance();\r\n    let address = await getAddress(\r\n      \"0x8920565d5Bc8cf942eD2E18df4B71b8695a22D9B\"\r\n    );\r\n    this.setState({ isLoading: true });\r\n    chrome.storage.local.get(\r\n      [\"auth_Tokan\", \"userData\", \"reload\", 'keypair'],\r\n      async function (items) {        \r\n        // // Get NEAR balance of user\r\n        this.getNearAccountBalance();\r\n        // getBalance()\r\n        //   .then(res => {\r\n        //     console.log('res', res);\r\n        //     this.setState({ nearBalance: res });\r\n        //   })\r\n        //   .catch();\r\n          \r\n        this.setState({ \r\n          profileImage: items.userData.profileImage,\r\n          privateKey: items.keypair,\r\n          // nearBalance: balance\r\n        });\r\n        \r\n        let followerLength;\r\n        socket.emit(\"userId\", items.userData._id);\r\n        socket.on(\"followerList\", (data) => {\r\n          followerLength = data.length;\r\n          this.setState({\r\n            email: items.userData.email,\r\n            balance: balance,\r\n            address,\r\n            followerLength,\r\n          });\r\n        });\r\n\r\n        const data = {\r\n          user_id: items.userData._id,\r\n          flag: \"unread\",\r\n        };\r\n        \r\n        const result = await getUserSingleTrail(items.userData._id);\r\n        \r\n        if (result.status == 200) {\r\n          this.setState({\r\n            myTrilsListData: result.data.response,\r\n            getOneEditRow: {},\r\n            addRaw: {},\r\n          });\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n\r\n        getAllNotification(data).then(async (res) => {\r\n          const data = res.data.response;\r\n\r\n          if (data.result && data.result.length > 0) {\r\n            let user = await getAllUser();\r\n\r\n            let filterdFollowers = data.result.map((el) => {\r\n              for (let i = 0; i < user.data.data.response.length; i++) {\r\n                if (el.creator_id === user.data.data.response[i]._id) {\r\n                  return {\r\n                    email: user.data.data.response[i].email,\r\n                    pictures: user.data.data.response[i].pictures,\r\n                    creator_id: user.data.data.response[i]._id,\r\n                    currUserId: el.user_id,\r\n                    created: el.created,\r\n                  };\r\n                }\r\n              }\r\n            });\r\n\r\n            filterdFollowers = filterdFollowers.sort((a, b) => {\r\n              return b.created - a.created;\r\n            });\r\n\r\n            // Update notificationData state\r\n            this.setState({\r\n              notificationData: filterdFollowers,\r\n              getOneEditRow: {},\r\n              addRaw: {},\r\n            });\r\n          }\r\n        });\r\n\r\n        this.setState({\r\n          email: items.userData.email,\r\n          balance: balance,\r\n          address,\r\n        });\r\n\r\n        chrome.storage.local.set({ reload: false });\r\n\r\n        if (items.reload) {\r\n          chrome.tabs.query(\r\n            { active: true, lastFocusedWindow: true },\r\n            (tabs) => {\r\n              chrome.tabs.reload();\r\n            }\r\n          );\r\n        }\r\n      }.bind(this)\r\n    );\r\n    \r\n    let categoryResult = await getAllCategory();\r\n    if (categoryResult.status == 200) {\r\n      this.setState({ categoryList: categoryResult.data.response });\r\n    }\r\n    \r\n    if (document.querySelector(\"#my-extension-defaultroot\")) {\r\n      document.querySelector(\"#my-extension-defaultroot\").style.display =\r\n        \"none\";\r\n    }\r\n\r\n    if (document.querySelector(\"#my-extension-root-flip\")) {\r\n      document.querySelector(\"#my-extension-root-flip\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  onClickToList = (listTitle) => {\r\n    chrome.storage.local.get(\r\n      [\"auth_Tokan\", \"userData\", \"reload\"],\r\n      async function (items) {\r\n        const result = await getUserSingleTrail(items.userData._id);\r\n\r\n        if (result.status == 200) {\r\n          this.setState({ myTrilsListData: result.data.response });\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    this.setState({ listTitle });\r\n  };\r\n\r\n  onChangeTrailEdit = (editTrail) => {\r\n    this.setState({ editTrail, slideBalance: false });\r\n  };\r\n\r\n  onClickToCreateTrail = (e) => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ listTitle: \"My Trails\", slideBalance: false});\r\n    $(\"body\").attr(\"class\", \"trailit_EditTrailShow\");\r\n  };\r\n\r\n  getEditData = (res) => {\r\n    this.setState({ getOneEditRow: res });\r\n  };\r\n\r\n  handleClickMenu = (e, status) => {\r\n    e.stopPropagation();\r\n    this.setState({ showMenu: status });\r\n  };\r\n\r\n  onAddRaw = (data) => {\r\n    this.setState({ addRaw: data });\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ isLoading: true });\r\n\r\n    handleFileUpload(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          profileImage: data.response.result.fileUrl,\r\n        });\r\n\r\n        chrome.storage.local.get(\r\n          [\"auth_Tokan\", \"userData\", \"reload\"],\r\n          async function (items) {\r\n            try {\r\n              let r = await UpdateProfilePicture({\r\n                email: items.userData.email,\r\n                profileImage: data.response.result.fileUrl,\r\n              });\r\n\r\n              if (r.status == 200) {\r\n                chrome.storage.local.set({ userData: r.data.data.response });\r\n              }\r\n\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            } catch (e) {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            }\r\n          }.bind(this)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { tourType } = this.state;\r\n    const file = e.target.files[0];\r\n    const fileType = file.type.split(\"/\");\r\n    e.target.value = null;\r\n\r\n    // Upload file function\r\n    this.uploadFile(file);\r\n  };\r\n\r\n  onSlide = () => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ slideBalance: true });\r\n    $(\"body\").attr(\"class\", \"trailit_cUSDForm\");\r\n  };\r\n\r\n  onHideSlide = () => {\r\n    // Get NEAR balance of user\r\n    this.getNearAccountBalance();\r\n\r\n    this.setState({ slideBalance: false });    \r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n\r\n  render() {\r\n    // console.log('getBalance', getBalance());\r\n    const {\r\n      isLoading,\r\n      listTitle,\r\n      myTrilsListData,\r\n      categoryList,\r\n      notificationData,\r\n      editTrail,\r\n      getOneEditRow,\r\n      addRaw,\r\n\t    profileImage,\r\n      slideBalance,\r\n      nearBalance\r\n    } = this.state;\r\n    \r\n    let list = [];\r\n    if (listTitle == \"My Trails\") {\r\n      list = myTrilsListData;\r\n    } else if (listTitle == \"Followed\") {\r\n      list = notificationData;\r\n    }\r\n\r\n    return (\r\n      <div className=\"trailit_userPanal trailit_Big\">\r\n        {editTrail && (\r\n          <UserProfileEdit\r\n            categoryList={categoryList}\r\n            data={getOneEditRow}\r\n            getEditData={this.getEditData}\r\n          />\r\n        )}\r\n        {!editTrail && !slideBalance && (\r\n          <UserProfileAdd onAddRaw={this.onAddRaw} addRaw={addRaw} />\r\n        )}\r\n\t\t    {slideBalance && <UserCUSD privateKey={this.state.privateKey} onHideSlide={ this.onHideSlide } />}\r\n        {isLoading && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img class=\"ring1\" src={require(`../images/loding1.png`)} />\r\n              <img class=\"ring2\" src={require(`../images/loding2.png`)} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"trailit_userPanalRightBox\">\r\n          <div className=\"trailit_userPanalHeaderBox\">\r\n            <div className=\"trailit_userIMG\">\r\n              <img\r\n                src={\r\n                  profileImage == \"\"\r\n                    ? require(\"../images/user.png\")\r\n                    : this.state.profileImage\r\n                }\r\n                alt=\"user\"\r\n              />\r\n              <input type=\"file\" name=\"media\" onChange={this.handleChange} />\r\n              <span className=\"trailitUploadICon\">\r\n                <img src={require(\"../images/edit.svg\")} alt=\"..\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"trailit_userBxs\">\r\n              <div className=\"trailit_userName trailit_ellips\">Jon Jones</div>\r\n              <div className=\"trailit_userSubName trailit_ellips\">\r\n                Founder, Creator, Designer\r\n              </div>\r\n              <div className=\"trailit_userName cursor_pointer\" onClick={this.onSlide}>\r\n                {this.state.nearBalance} <span className=\"trailit_userSubName\"> NEAR</span>\r\n              </div>\r\n              <div className=\"trailit_3Boxs\">\r\n                <div className=\"trailit_3Boxs1\">\r\n                  <div className=\"trailit_userName\">100k</div>\r\n                  <div className=\"trailit_userSubName\">Likes</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs2\">\r\n                  <div className=\"trailit_userName\">5.2k</div>\r\n                  <div className=\"trailit_userSubName\">Followers</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs3\">\r\n                  <div className=\"trailit_userName\">120</div>\r\n                  <div className=\"trailit_userSubName\">Following</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"trailit_dotsMenuMain\"\r\n              onMouseLeave={(e) => this.handleClickMenu(e, false)}\r\n            >\r\n              <div className=\"trailit_dotsMenu\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => this.handleClickMenu(e, true)}\r\n                  className=\"trailit_dotsButton\"\r\n                >\r\n                  <img src={require(\"../images/dots.svg\")} alt=\"dots\" />\r\n                </button>\r\n                {this.state.showMenu && (\r\n                  <div className=\"trailit_dotsMenuList\">\r\n                    <button type=\"button\">Settings</button>\r\n                    <button type=\"button\">Notifications</button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState({ showMenu: false });\r\n                        this.props.onClickToLogout();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"trailit_userPanalContentBox\">\r\n            <UserProfileList\r\n              profileImage={profileImage}\r\n              title={listTitle}\r\n              list={list}\r\n              getOneEditRow={getOneEditRow}\r\n              addRaw={addRaw}\r\n              onEdit={this.onChangeTrailEdit}\r\n              getRow={this.getEditData}\r\n              isLoading={false}\r\n            />\r\n            <div className=\"trailit_userPanalFooterBox\">\r\n              {listTitle == \"My Trails\" && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"trailit_btnPink\"\r\n                  onClick={(e) => this.onClickToList(\"Followed\")}\r\n                >\r\n                  Followed\r\n                </button>\r\n              )}\r\n              {listTitle == \"Followed\" && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"trailit_btnPink\"\r\n                  onClick={(e) => this.onClickToList(\"My Trails\")}\r\n                >\r\n                  My Trails\r\n                </button>\r\n              )}\r\n              <button\r\n                type=\"button\"\r\n                className=\"trailit_btnPink\"\r\n                onClick={this.onClickToCreateTrail}\r\n              >\r\n                Create Trail\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/common-index.js",[],["350","351"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account.js",["352","353","354","355","356","357","358","359","360"],"import BN from 'bn.js';\nimport { transfer, createAccount, signTransaction, deployContract, addKey, functionCall, fullAccessKey, functionCallAccessKey, deleteKey, stake, deleteAccount } from './transaction';\nimport { TypedError, ErrorContext } from './providers';\nimport { base_decode, base_encode } from './utils/serialize';\nimport { PublicKey } from './utils/key_pair';\nimport { PositionalArgsError } from './utils/errors';\nimport { parseRpcError } from './utils/rpc_errors';\nimport exponentialBackoff from './utils/exponential-backoff';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nconst DEFAULT_FUNC_CALL_GAS = new BN('30000000000000');\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default number of retries before giving up on a transaction.\nconst TX_STATUS_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_STATUS_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_STATUS_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\n/**\n * More information on [the Account spec](https://nomicon.io/DataStructures/Account.html)\n */\nexport class Account {\n    constructor(connection, accountId) {\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    get ready() {\n        return this._ready || (this._ready = Promise.resolve(this.fetchState()));\n    }\n    /**\n     * Helper function when getting the state of a NEAR account\n     * @returns Promise<void>\n     */\n    fetchState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._state = yield this.connection.provider.query(`account/${this.accountId}`, '');\n        });\n    }\n    /**\n     * Returns the state of a NEAR account\n     * @returns {Promise<AccountState>}\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            return this._state;\n        });\n    }\n    printLogsAndFailures(contractId, results) {\n        for (const result of results) {\n            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n            this.printLogs(contractId, result.logs, '\\t');\n            if (result.failure) {\n                console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n            }\n        }\n    }\n    printLogs(contractId, logs, prefix = '') {\n        for (const log of logs) {\n            console.log(`${prefix}Log [${contractId}]: ${log}`);\n        }\n    }\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const status = yield this.connection.provider.status();\n            const nonce = ++accessKey.nonce;\n            // TODO: get latest_block_hash from block query using `final` finality\n            return yield signTransaction(receiverId, nonce, actions, base_decode(status.sync_info.latest_block_hash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions The transaction [Action as described in the spec](https://nomicon.io/RuntimeSpec/Actions.html).\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    signAndSendTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_STATUS_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                        try {\n                            return yield this.connection.provider.sendTransaction(signedTx);\n                        }\n                        catch (error) {\n                            if (error.type === 'TimeoutError') {\n                                console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} as it has timed out`);\n                                return null;\n                            }\n                            throw error;\n                        }\n                    }));\n                    if (!result) {\n                        throw new TypedError(`Exceeded ${TX_STATUS_RETRY_NUMBER} attempts for transaction ${base_encode(txHash)}.`, 'RetriesExceeded', new ErrorContext(base_encode(txHash)));\n                    }\n                    return result;\n                }\n                catch (error) {\n                    if (error.message.match(/Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/)) {\n                        console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    error.context = new ErrorContext(base_encode(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                throw new TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n                if (it.outcome.logs.length ||\n                    (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                    return acc.concat({\n                        'receiptIds': it.outcome.receipt_ids,\n                        'logs': it.outcome.logs,\n                        'failure': typeof it.outcome.status.Failure != 'undefined' ? parseRpcError(it.outcome.status.Failure) : null\n                    });\n                }\n                else\n                    return acc;\n            }, []);\n            this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n            if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw parseRpcError(result.status.Failure);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                return null;\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const accessKey = yield this.connection.provider.query(`access_key/${this.accountId}/${publicKey.toString()}`, '');\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                // TODO: Check based on .type when nearcore starts returning query errors in structured format\n                if (e.message.includes('does not exist while viewing')) {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add while signing and sending the transaction\n     * @param data The compiled contract code\n     * @returns {Promise<Account>}\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction(contractId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey), deployContract(data)]);\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(receiverId, [transfer(amount)]);\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction(newAccountId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     * @returns void\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteAccount(beneficiaryId)]);\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deployContract(data)]);\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n     *  or `Uint8Array` instance which represents bytes passed as is.\n     * @param gas max amount of gas that method call can use\n      * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    functionCall(contractId, methodName, args, gas, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            return this.signAndSendTransaction(contractId, [functionCall(methodName, args, gas || DEFAULT_FUNC_CALL_GAS, amount)]);\n        });\n    }\n    /**\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     * @returns {Promise<FinalExecutionOutcome>}\n     * TODO: expand this API to support more options.\n     */\n    addKey(publicKey, contractId, methodName, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let accessKey;\n            if (contractId === null || contractId === undefined || contractId === '') {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, !methodName ? [] : [methodName], amount);\n            }\n            return this.signAndSendTransaction(this.accountId, [addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteKey(PublicKey.from(publicKey))]);\n        });\n    }\n    /**\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [stake(amount, PublicKey.from(publicKey))]);\n        });\n    }\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new PositionalArgsError();\n        }\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @returns {Promise<any>}\n     */\n    viewFunction(contractId, methodName, args, { parse = parseJsonFromRawResponse } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            const result = yield this.connection.provider.query(`call/${contractId}/${methodName}`, base_encode(JSON.stringify(args)));\n            if (result.logs) {\n                this.printLogs(contractId, result.logs);\n            }\n            return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n        });\n    }\n    /**\n     * @returns array of {access_key: AccessKey, public_key: PublicKey} items.\n     */\n    getAccessKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query(`access_key/${this.accountId}`, '');\n            // A breaking API change introduced extra information into the\n            // response, so it now returns an object with a `keys` field instead\n            // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n            if (Array.isArray(response)) {\n                return response;\n            }\n            return response.keys;\n        });\n    }\n    /**\n     * Returns account details in terms of authorized apps and transactions\n     * @returns {Promise<any>}\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const result = { authorizedApps: [], transactions: [] };\n            accessKeys.map((item) => {\n                if (item.access_key.permission.FunctionCall !== undefined) {\n                    const perm = item.access_key.permission.FunctionCall;\n                    result.authorizedApps.push({\n                        contractId: perm.receiver_id,\n                        amount: perm.allowance,\n                        publicKey: item.public_key,\n                    });\n                }\n            });\n            return result;\n        });\n    }\n    /**\n     * Returns calculated account balance\n     * @returns {Promise<AccountBalance>}\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const genesisConfig = yield this.connection.provider.experimental_genesisConfig();\n            const state = yield this.state();\n            const costPerByte = new BN(genesisConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = new BN(state.storage_usage).mul(costPerByte);\n            const staked = new BN(state.locked);\n            const totalBalance = new BN(state.amount).add(staked);\n            const availableBalance = totalBalance.sub(BN.max(staked, stateStaked));\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n}\n",["361","362"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/near.js",["363"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Connection } from './connection';\nimport { Contract } from './contract';\nimport { readKeyFile } from './key_stores/unencrypted_file_system_keystore';\nimport { LocalAccountCreator, UrlAccountCreator } from './account_creator';\nimport { InMemoryKeyStore, MergeKeyStore } from './key_stores';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport class Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new BN(config.initialBalance) : new BN('500000000000000000000000000');\n            this.accountCreator = new LocalAccountCreator(new Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     *\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, accountId);\n            yield account.state();\n            return account;\n        });\n    }\n    /**\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new Account(this.connection, accountId);\n        });\n    }\n    /**\n     * @deprecated Use `new nearApi.Contract(yourAccount, contractId, { viewMethods, changeMethods })` instead.\n     * @param contractId\n     * @param options\n     */\n    loadContract(contractId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, options.sender);\n            return new Contract(account, contractId, options);\n        });\n    }\n    /**\n     * @deprecated Use `yourAccount.sendMoney` instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    sendTokens(amount, originator, receiver) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n            const account = new Account(this.connection, originator);\n            const result = yield account.sendMoney(receiver, amount);\n            return result.transaction_outcome.id;\n        });\n    }\n}\n/**\n * Initialize connection to Near network.\n */\nexport function connect(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Try to find extra key in `KeyPath` if provided.\n        if (config.keyPath && config.deps && config.deps.keyStore) {\n            try {\n                const accountKeyFile = yield readKeyFile(config.keyPath);\n                if (accountKeyFile[0]) {\n                    // TODO: Only load key if network ID matches\n                    const keyPair = accountKeyFile[1];\n                    const keyPathStore = new InMemoryKeyStore();\n                    yield keyPathStore.setKey(config.networkId, accountKeyFile[0], keyPair);\n                    if (!config.masterAccount) {\n                        config.masterAccount = accountKeyFile[0];\n                    }\n                    config.deps.keyStore = new MergeKeyStore([config.deps.keyStore, keyPathStore]);\n                    console.log(`Loaded master account ${accountKeyFile[0]} key from ${config.keyPath} with public key = ${keyPair.getPublicKey()}`);\n                }\n            }\n            catch (error) {\n                console.warn(`Failed to load master account key from ${config.keyPath}: ${error}`);\n            }\n        }\n        return new Near(config);\n    });\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileList.js",["364","365","366","367","368","369","370","371","372","373","374","375","376","377","378","379"],"import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport _ from 'lodash';\r\n\r\nimport { getUserOneTrail } from '../../common/axios';\r\nimport BgImage from '../../images/trailit_bx_img.png';\r\n\r\nconst chrome = window.chrome;\r\n\r\nconst resizeScreen = () => {\r\n    return window.innerWidth <= 760;\r\n}\r\n\r\nclass UserProfileList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showMenu: false,\r\n            isLoading: this.props.isLoading,\r\n            list: this.props.list,\r\n            isLoadingLink: false,\r\n            isCopiedLink: false,\r\n            isCopiedError: false            \r\n        }\r\n    }\r\n\r\n    styleBgImg = {\r\n\t\tbackground: `url(${BgImage}) no-repeat scroll center center / cover`\r\n\t};\r\n\r\n    async componentWillReceiveProps(nextProps, prevState) {\r\n        const { addRaw, getOneEditRow } = nextProps;\r\n\r\n        let list = await nextProps.list;\r\n        if(!_.isEmpty(addRaw)) {\r\n            let findRow = await list.find(r => r.trail_id==addRaw.trail_id);\r\n            if(findRow==undefined) {\r\n                list.push(addRaw);\r\n            }\r\n        }\r\n\r\n        if(!_.isEmpty(getOneEditRow)) {\r\n            let findInd = await list.findIndex(r => r.trail_id==getOneEditRow.trail_id);\r\n            if(findInd!=-1) {\r\n                list[findInd] = getOneEditRow;\r\n            }\r\n        }\r\n        \r\n        this.setState({isLoading: nextProps.isLoading, list: list});\r\n    }\r\n\r\n    onClickToEdit = (e, res) => {\r\n        e.stopPropagation();\r\n        $('body').attr('class', 'trailit_EditTrailShow');\r\n        this.props.getRow(res);\r\n        this.props.onEdit(true);\r\n        this.setState({showMenu: false});\r\n    }\r\n\r\n    handleClickMenu = (e) => {\r\n        e.stopPropagation();\r\n        this.setState({showMenu: !this.state.showMenu});\r\n    }\r\n    \r\n    onMouseLeave = (e) => {\r\n        if (this.state.showMenu) {\r\n            // Set show menu state\r\n            this.setState({showMenu: false});\r\n        }\r\n    }\r\n    \r\n    onPublishLink = async (e, res) => {\r\n        e.stopPropagation();\r\n        this.setState({isLoadingLink: true});\r\n        let screen = resizeScreen()?'mobile':'web';\r\n        let result = await getUserOneTrail(res.user_id, res.trail_id, screen);\r\n        if(result.status == 200) {\r\n            if(result.data.response.statusCode == 200) {\r\n                let trailList = result.data.response.result\r\n                if(result.data.response.result.length > 0) {\r\n                    const trailId = res.trail_id;\r\n                    const URL = trailList[0].url;\r\n                    let qryString = URL.split(\"?\").length>1?\"&\":\"?\";\r\n                    const trailUrl = `http://go.trialit.co/live/${URL}${qryString}trailUserId=${res.user_id}&trailId=${trailId}&trailPreview=true&tourStep=1`;\r\n                    \r\n                    function copyStringToClipboard (str) {\r\n                        // Create new element\r\n                        var el = document.createElement('textarea');\r\n                        \r\n                        // Set value (string to be copied)\r\n                        el.value = str;\r\n\r\n                        // Set non-editable to avoid focus and move outside of view\r\n                        el.setAttribute('readonly', '');\r\n                        el.style = {position: 'absolute', left: '-9999px'};\r\n                        document.body.appendChild(el);\r\n\r\n                        // Select text inside element\r\n                        el.select();\r\n                        \r\n                        // Copy text to clipboard\r\n                        document.execCommand('copy');\r\n\r\n                        // Remove temporary element\r\n                        document.body.removeChild(el);\r\n                    };\r\n                    \r\n                    this.setState({isCopiedLink: true});\r\n\r\n                    setTimeout(() => {\r\n                        this.setState({isCopiedLink: false});\r\n                    }, 2000);\r\n\r\n                    copyStringToClipboard(trailUrl);\r\n                } else {\r\n                    this.setState({isCopiedError: true});\r\n\r\n                    setTimeout(() => {\r\n                        this.setState({isCopiedError: false});\r\n                    }, 2000);\r\n                }\r\n            }\r\n        }\r\n        this.setState({isLoadingLink: false});\r\n    }\r\n\r\n    onBoxClick = (e, res) => {\r\n\t\te.preventDefault();\r\n        // ...query for the active tab...\t\t\r\n        chrome.runtime.sendMessage('', {\r\n            type: 'DOMInfo',\r\n            status: true\r\n        });\r\n\t\t\r\n\t\tthis.setState(prevState => {\r\n\t\t\treturn {\r\n\t\t\t\treload: !prevState.reload\r\n\t\t\t};\r\n        });\r\n        \r\n        chrome.storage.local.set({ \r\n            trail_id: res.trail_id,\r\n            trail_web_user_tour: undefined\r\n        }, (items) => console.log(\"trail_web_user_tourtrail_web_user_tour\", items));\r\n        \r\n        let auth_Tokan, reload, userData\r\n        chrome.storage.local.get([\"auth_Tokan\", \"userData\", \"reload\", \"openButton\"], function(items) {\r\n            // auth_Tokan = items.auth_Tokan, reload = items.reload, userData = items.userData;\r\n            // chrome.storage.local.clear();\r\n            \r\n            if(items.openButton === undefined) {\r\n\t\t\t\tchrome.storage.local.set({ openButton: 'ManageTrail'});\r\n\t\t\t}\r\n        }.bind(this));\r\n\r\n        window.close();\r\n\t}\r\n    \r\n    render() {\r\n        \r\n        const { isLoadingLink, isCopiedLink, isCopiedError, isLoading, list } = this.state;\r\n        const { profileImage } = this.props;\r\n        \r\n        return (\r\n            <div className=\"trailit_userPanalContentInnerBox\">\r\n                {isLoadingLink && <div className=\"trailit_loaderBox\">\r\n                   <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../../images/loding1.png`)} /><img class=\"ring2\" src={require(`../../images/loding2.png`)} /></div>\r\n                </div>}\r\n                {isCopiedLink && <div class=\"trailit_18600 trailit_mb3\" style={{color: 'green'}}>Your link successfully copied</div>}\r\n                {isCopiedError && <div class=\"trailit_18600 trailit_mb3\" style={{color: 'red'}}>Please add trails data</div>}\r\n                <div className=\"trailit_18600 trailit_mb3\">{this.props.title}</div>\r\n                <div className=\"trailit_scrollBoxs\">\r\n                    <div className=\"trailit_Row\">\r\n                        {isLoading && <div className=\"trailit_noData\">Loading...</div>}\r\n                        {(list.length === 0 && !isLoading) && <div className=\"trailit_noData\">Data Not Available</div>}\r\n                        {list.map(res => {\r\n                            \r\n                            let styles = \"\";\r\n                            let stlStatus=false;\r\n                            \r\n                            if(res.cover_image_url!=null && res.cover_image_url!=\"null\" && res.cover_image_url!=\"\" && res.cover_image_url!=undefined) {\r\n                                stlStatus=true;\r\n                                styles = {\r\n                                    background: `url(${res.cover_image_url}) no-repeat scroll center center / cover`\r\n                                };\r\n                            }\r\n                            \r\n                            return (\r\n                                <div className=\"trailit_col6\">\r\n                                    <div className=\"trailit_bx\" onClick={(e) => this.onBoxClick(e, res)} onMouseLeave={this.onMouseLeave}>\r\n                                        <div className=\"img\">\r\n                                        <span className=\"img_bg\" style={stlStatus?styles:this.styleBgImg}>\r\n                                            <div className=\"trailit_img_content\">\r\n                                                <div className=\"trailit_top\">\r\n                                                    <div className=\"trailit_dotsMenu\">\r\n                                                    <button type=\"button\" onClick={this.handleClickMenu} className=\"trailit_dotsButton\">\r\n                                                    <img width=\"16px\" src={require('../../images/dots.svg')} alt=\"dots\"/>\r\n                                                    </button>\r\n                                                    {this.state.showMenu && \r\n                                                    <div className=\"trailit_dotsMenuList\">\r\n                                                        <button type=\"button\" onClick={(e) => this.onPublishLink(e, res)}>Share</button>\r\n                                                        <button type=\"button\" onClick={(e) => this.onClickToEdit(e, res)}>Edit</button>\r\n                                                        <button type=\"button\">Publish</button>\r\n                                                        <button type=\"button\">Delete</button>\r\n                                                    </div>\r\n                                                    }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"trailit_bottom\">\r\n                                                    <div className=\"trailit_bottom_content d-flex justify-content-between\">\r\n                                                        <div className=\"trailit_10_500_roboto trailit_text_white align-items-center d-flex\">\r\n                                                            <img alt=\"twitter\" className=\"trialit_user\" src={profileImage==''?require(\"../../images/user.png\"):profileImage}/>\r\n                                                            <span className=\"trailit_ml2 trailit_ellipsis_40\">{res.trail_name}</span>\r\n                                                        </div>\r\n                                                        <div className=\"trailit_8_500_roboto trailit_text_white align-items-center d-flex\">\r\n                                                            <img alt=\"twitter\" width=\"11px\" src={require(\"../../images/trailit_coin.png\")}/>\r\n                                                            <span className=\"trailit_ml2\">94</span>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </span>\r\n                                        </div>\r\n                                        <div className=\"trailit_bx_title\">\r\n                                            <div className=\"trailit_10_500 trailit_ellips_2line\">{res.trail_description}</div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                        )})}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileList;","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/validation.js",["380"],"import _ from 'lodash';\r\n\r\nexport const isValidated = (data) => {\r\n    const errors = {};\r\n    let isValid = false;\r\n\r\n    if(_.isEmpty(data.trail_title)) {\r\n        errors.trail_title = \"Please enter trail title\";\r\n    } else {\r\n        delete errors.trail_title;\r\n    }\r\n    \r\n    return {\r\n        errors,\r\n        isValid: _.isEmpty(errors)\r\n    }\r\n}","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/rpc_errors.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/providers/json-rpc-provider.js",["381","382","383","384","385","386","387"],"import depd from 'depd';\nimport { Provider } from './provider';\nimport { fetchJson } from '../utils/web';\nimport { TypedError, ErrorContext } from '../utils/errors';\nimport { base_encode } from '../utils/serialize';\nimport { parseRpcError } from '../utils/rpc_errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport { TypedError, ErrorContext };\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nexport class JsonRpcProvider extends Provider {\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Get the current network (ex. test, beta, etc…)\n     * @returns {Promise<Network>}\n     */\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                name: 'test',\n                chainId: 'test'\n            };\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @returns {Promise<NodeStatusResult>}\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#send-transaction-wait-until-done)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = signedTransaction.encode();\n            return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatus(txHash, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', [base_encode(txHash), accountId]);\n        });\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.nearprotocol.com/docs/interaction/rpc#query)\n     * @param path Path parameter for the RPC (ex. \"contract/my_token\")\n     * @param data Data parameter (ex. \"\", \"AQ4\", or whatever is needed)\n     */\n    query(path, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.sendJsonRpc('query', [path, data]);\n            if (result && result.error) {\n                throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#block)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            let { blockId } = blockQuery;\n            if (typeof blockQuery !== 'object') {\n                const deprecate = depd('JsonRpcProvider.block(blockId)');\n                deprecate('use `block({ blockId })` or `block({ finality })` instead');\n                blockId = blockQuery;\n            }\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details of a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#chunk)\n     * @param chunkId Hash of a chunk ID or shard ID\n     * @returns {Promise<ChunkResult>}\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by given block id.\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#validators)\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets EXPERIMENTAL_genesis_config from RPC\n     * @returns {Promise<GenesisConfig>}\n     */\n    experimental_genesisConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_genesis_config', []);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     * @deprecated Use `lightClientProof` instead\n     */\n    experimental_lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const deprecate = depd('JsonRpcProvider.experimental_lightClientProof(request)');\n            deprecate('use `lightClientProof` instead');\n            return yield this.lightClientProof(request);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                method,\n                params,\n                id: (_nextId++),\n                jsonrpc: '2.0'\n            };\n            const response = yield fetchJson(this.connection, JSON.stringify(request));\n            if (response.error) {\n                if (typeof response.error.data === 'object') {\n                    if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                        // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                        throw new TypedError(response.error.data.error_message, response.error.data.error_type);\n                    }\n                    else {\n                        throw parseRpcError(response.error.data);\n                    }\n                }\n                else {\n                    const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                    // NOTE: All this hackery is happening because structured errors not implemented\n                    // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                    if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')) {\n                        throw new TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                    }\n                    else {\n                        throw new TypedError(errorMessage);\n                    }\n                }\n            }\n            return response.result;\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/exponential-backoff.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js",["388"],"import fs from 'fs';\nimport path from 'path';\nimport { promisify as _promisify } from 'util';\nimport { KeyPair } from '../utils/key_pair';\nimport { KeyStore } from './keystore';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst promisify = (fn) => {\n    if (!fn) {\n        return () => {\n            throw new Error('Trying to use unimplemented function. `fs` module not available in web build?');\n        };\n    }\n    return _promisify(fn);\n};\n\nconst exists = promisify(fs.exists);\nconst readFile = promisify(fs.readFile);\nconst writeFile = promisify(fs.writeFile);\nconst unlink = promisify(fs.unlink);\nconst readdir = promisify(fs.readdir);\nconst mkdir = promisify(fs.mkdir);\n\nexport function loadJsonFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const content = yield readFile(filename);\n        return JSON.parse(content.toString());\n    });\n}\n\nfunction ensureDir(dir) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            yield mkdir(dir, { recursive: true });\n        }\n        catch (err) {\n            if (err.code !== 'EEXIST') {\n                throw err;\n            }\n        }\n    });\n}\n\nexport function readKeyFile(filename) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const accountInfo = yield loadJsonFile(filename);\n        // The private key might be in private_key or secret_key field.\n        let privateKey = accountInfo.private_key;\n        if (!privateKey && accountInfo.secret_key) {\n            privateKey = accountInfo.secret_key;\n        }\n        return [accountInfo.account_id, KeyPair.fromString(privateKey)];\n    });\n}\n\nexport class UnencryptedFileSystemKeyStore extends KeyStore {\n    constructor(keyDir) {\n        super();\n        this.keyDir = path.resolve(keyDir);\n    }\n    /**\n     * Sets a storage item in a file, unencrypted\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield ensureDir(`${this.keyDir}/${networkId}`);\n            const content = { account_id: accountId, public_key: keyPair.getPublicKey().toString(), private_key: keyPair.toString() };\n            yield writeFile(this.getKeyFilePath(networkId, accountId), JSON.stringify(content));\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Find key / account id.\n            if (!(yield exists(this.getKeyFilePath(networkId, accountId)))) {\n                return null;\n            }\n            const accountKeyPair = yield readKeyFile(this.getKeyFilePath(networkId, accountId));\n            return accountKeyPair[1];\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (yield exists(this.getKeyFilePath(networkId, accountId))) {\n                yield unlink(this.getKeyFilePath(networkId, accountId));\n            }\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const network of yield this.getNetworks()) {\n                for (const account of yield this.getAccounts(network)) {\n                    yield this.removeKey(network, account);\n                }\n            }\n        });\n    }\n    getKeyFilePath(networkId, accountId) {\n        return `${this.keyDir}/${networkId}/${accountId}.json`;\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const files = yield readdir(this.keyDir);\n            const result = new Array();\n            files.forEach((item) => {\n                result.push(item);\n            });\n            return result;\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!(yield exists(`${this.keyDir}/${networkId}`))) {\n                return [];\n            }\n            const files = yield readdir(`${this.keyDir}/${networkId}`);\n            return files\n                .filter(file => file.endsWith('.json'))\n                .map(file => file.replace(/.json$/, ''));\n        });\n    }\n    \n    toString() {\n        return `UnencryptedFileSystemKeyStore(${this.keyDir})`;\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/generated/rpc_error_types.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/axios.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/contract.js",["389"],"import BN from 'bn.js';\nimport { getTransactionLastResult } from './providers';\nimport { PositionalArgsError, ArgumentTypeError } from './utils/errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the mutable and non-mutable methods\n */\nexport class Contract {\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                }))\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, gas, amount, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args))) {\n                        throw new PositionalArgsError();\n                    }\n                    validateBNLike({ gas, amount });\n                    const rawResult = yield this.account.functionCall(this.contractId, methodName, args, gas, amount);\n                    return getTransactionLastResult(rawResult);\n                }))\n            });\n        });\n    }\n}\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !BN.isBN(argValue) && isNaN(argValue)) {\n            throw new ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userCUSD.js",["390","391","392","393"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport { wallet } from '../../common/celo';\r\nimport SendTipForm from '../../common/SendTipForm';\r\nimport { sendTransection } from '../../code/sendtx';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass userCUSD extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      privateKey: this.props.privateKey,\r\n      isSuccess: false,\r\n      setError: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({privateKey: this.props.privateKey})\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  sendTip = async (e, toAddress, amount) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ sendLoader: true });\r\n    \r\n    const { privateKey } = this.state;\r\n    sendTransection(privateKey, toAddress, amount)\r\n      .then(res => {\r\n\r\n        if (res && res.code && res.code === 400) {\r\n          throw new Error(res.err);\r\n        }\r\n\r\n        // Set is success state\r\n        this.setState({ isSuccess: true });\r\n\r\n        setTimeout(() => {          \r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ isSuccess: false });\r\n        }, 5000);\r\n      })\r\n      .catch(err => {  \r\n        console.log('err', err);\r\n        \r\n        this.setState({ setError: err.message });\r\n\r\n        setTimeout(() => {          \r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ setError: false });\r\n        }, 5000);\r\n      });\r\n    // await wallet.transfer(this.state.toAddress, this.state.amount);\r\n    // let balance = await wallet.balance();\r\n    // this.setState({\r\n    //   toAddress: \"\",\r\n    //   amount: \"\",\r\n    //   balance,\r\n    //   sendLoader: false,\r\n    // });\r\n  };\r\n\r\n  onClear = () => {\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n  onSlide = () => {\r\n    this.setState({ slideBalance: !this.state.slideBalance });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, toAddress, amount, sendLoader } = this.state;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalLeftBox\">\r\n        { \r\n          this.state.isSuccess ?\r\n            <div className=\"tr_description\">\r\n              <p \r\n                style={{ color: \"#0c8026\", textAlign: 'center' }}\r\n              >\r\n                Transaction completed successfully.\r\n              </p>\r\n            </div>\r\n          :\r\n            \r\n            !this.state.setError ?\r\n              <SendTipForm \r\n                isLoading={ isLoading }\r\n                sendLoader={ sendLoader }\r\n                sendTip={ this.sendTip }\r\n                onCancel={ this.onClear }\r\n              />\r\n              \r\n            :\r\n              <div className=\"tr_description\">\r\n                <p \r\n                  style={{ color: \"#d21e1e\", textAlign: 'center' }}\r\n                >\r\n                  { this.state.setError }\r\n                </p>\r\n              </div>          \r\n        }        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userCUSD;\r\n\r\n// {/* <div>\r\n//   { isLoading && (\r\n//     <div className=\"trailit_loaderBox\">\r\n//       <div class=\"trial_spinner\">\r\n//         <img class=\"ring1\" src={require(`../../images/loding1.png`)} alt=\"loader\" />\r\n//         <img class=\"ring2\" src={require(`../../images/loding2.png`)} alt=\"loader\" />\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n//   {/* <div className=\"tr_description\">\r\n//     <p>Microtipping enabled through Celo Blockchain cUSD</p>\r\n//   </div> */}\r\n//   <form>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your to address\"\r\n//         name=\"toAddress\"\r\n//         onChange={this.onChangeInput}\r\n//         value={toAddress}\r\n//       />\r\n//     </div>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your amount\"\r\n//         name=\"amount\"\r\n//         onChange={this.onChangeInput}\r\n//         value={amount}\r\n//       />\r\n//     </div>\r\n//     <div className=\"trailit_userPanalFooterBox\">\r\n//       <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>\r\n//         Cancel\r\n//       </button>\r\n//       <button\r\n//         type=\"submit\"\r\n//         onClick={this.sendTip}\r\n//         disabled={sendLoader}\r\n//         className=\"trailit_btnPink\"\r\n//       >\r\n//         {sendLoader ? \"Loading...\" : \"Send Tip\"}\r\n//       </button>\r\n//     </div>\r\n//   </form>\r\n// </div> */}\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/api/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/SendTipForm.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/index.js",[],["394","395"],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/keystore.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/key_stores/browser_local_storage_key_store.js",["396","397","398","399","400","401","402"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\nexport class BrowserLocalStorageKeyStore extends KeyStore {\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Sets a local storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/forgotPassword.js",["403"],"import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nclass ForgotPassword extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFields((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\t// const { getFieldDecorator } = this.props.form;\r\n\t\t\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Forgot Password?</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">Enter your email to find your account</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item name=\"username\" rules={[{ required: true, message: 'Please input your Email!' }]}>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your Email!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default ForgotPassword;\r\n// export default Form.create({ name: 'normal_login' })(ForgotPassword);\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/validators.js",["404","405"],"'use strict';\nimport BN from 'bn.js';\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params numSeats: number of seats.\n */\nexport function findSeatPrice(validators, numSeats) {\n    const stakes = validators.map(v => new BN(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new BN(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new BN(1), right = stakesSum.add(new BN(1));\n    while (!left.eq(right.sub(new BN(1)))) {\n        const mid = left.add(right).div(new BN(2));\n        let found = false;\n        let currentSum = new BN(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nexport function diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileEdit.js",["406","407","408","409","410","411","412","413","414","415","416","417","418"],"import React, { PureComponent } from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { isValidated } from './validation';\r\nimport { UpdateSingleTrail } from '../../common/axios';\r\nimport { handleFileUpload } from '../../common/audAndVidCommon';\r\n\r\nclass UserProfileEdit extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryList: [],\r\n            cover_image_url: \"\",\r\n            trail_categor_id: '',\r\n            trail_description: '',\r\n            trail_id: '',\r\n            trail_title: '',\r\n            trail_user_status: '',\r\n            cover_image_name: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false,\r\n            fileLoading: false\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        // let categoryResult = await getAllCategory();\r\n        // if(categoryResult.status == 200) {\r\n        //     this.setState({categoryList: categoryResult.data.response});\r\n        // }\r\n        \r\n        const { data, categoryList } = this.props;\r\n        \r\n        this.setState({\r\n            categoryList: categoryList,\r\n            cover_image_url: data.cover_image_url,\r\n            trail_categor_id: data.trail_categor_id,\r\n            trail_description: data.trail_description,\r\n            trail_id: data.trail_id,\r\n            trail_title: data.trail_name,\r\n            trail_user_status: data.trail_user_status,\r\n        });\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps, prevState) {\r\n        const { data, categoryList } = nextProps;\r\n        \r\n        this.setState({\r\n            categoryList: categoryList,\r\n            cover_image_url: data.cover_image_url,\r\n            trail_categor_id: data.trail_categor_id,\r\n            trail_description: data.trail_description,\r\n            trail_id: data.trail_id,\r\n            trail_title: data.trail_name,\r\n            trail_user_status: data.trail_user_status,\r\n        });\r\n    }\r\n    \r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value}, () => {\r\n            if(this.state.isSubmit) {\r\n                const { errors, isValid } = isValidated(this.state);\r\n                this.setState({errors});\r\n            }\r\n        });\r\n    }\r\n    \r\n    uploadFile = (file) => {\r\n        this.setState({ isLoading: true });\r\n        handleFileUpload(file)\r\n            .then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n            .then(res => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t})\r\n            .then(data => {\r\n                this.setState({\r\n                    cover_image_url: data.response.result.fileUrl,\r\n                    cover_image_name: file.name,\r\n                    isLoading: false\r\n                });\r\n\t\t\t})\r\n            .catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error fetching profile ' + err);\r\n\t\t\t});\r\n    };\r\n    \r\n    handleChange = (e) => {\r\n        const { tourType } = this.state;\r\n        const file = e.target.files[0];\r\n\t\tconst fileType = file.type.split('/');\r\n        e.target.value = null;\r\n        // Upload file function\r\n        this.uploadFile(file);\r\n\t};\r\n    \r\n    onCheckedUserPrivate = async  (e) => {\r\n        if(e.target.value == null || e.target.value == \"\") {\r\n            e.target.value = \"public\";\r\n        }\r\n                \r\n        let trail_user_status = (e.target.value==\"public\")?'private':'public';\r\n        \r\n        await this.setState({trail_user_status: trail_user_status}, () => {\r\n            console.log(\"trail_user_statusfffffffff\", this.state.trail_user_status);\r\n        })\r\n    }\r\n    \r\n    onChangeSelect = async (e) => {\r\n        await this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    \r\n    onClear = () => {\r\n        this.setState({\r\n            categoryList: [],\r\n            cover_image_url: \"\",\r\n            trail_categor_id: '',\r\n            trail_description: '',\r\n            trail_id: '',\r\n            trail_title: '',\r\n            trail_user_status: '',\r\n            cover_image_name: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false,\r\n            fileLoading: false\r\n        });\r\n    }\r\n    \r\n    onClickToSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({isSubmit: true, isLoading: true});\r\n        const { errors, isValid } = isValidated(this.state);\r\n    \r\n        if(!isValid) {\r\n            this.setState({errors})\r\n        } else {\r\n            const result = await UpdateSingleTrail(this.state.trail_id, this.state);\r\n            this.setState({isLoading: false});\r\n            if(result.status == 200) {\r\n                if(result.data.response.statusCode == 400) {\r\n                    this.setState({errors: {trail_already_exist: result.data.response.result}})\r\n                    setTimeout(() => {\r\n                        this.setState({errors: {}});\r\n                    }, 2000);\r\n                } else {\r\n                    this.props.getEditData(result.data.response[0]);\r\n                    this.onClear();\r\n                    $('body').attr('class', '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { isLoading, cover_image_url, cover_image_name, trail_categor_id, trail_description, trail_id, trail_title, trail_user_status, errors } = this.state;\r\n        const { categoryList } = this.props;\r\n        \r\n        return(\r\n            <div className=\"trailit_userPanalLeftBox\">\r\n                {isLoading && <div className=\"trailit_loaderBox\">\r\n                   <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../../images/loding1.png`)} /><img class=\"ring2\" src={require(`../../images/loding2.png`)} /></div>\r\n                </div>}\r\n                <div className=\"trailit_editZTitle trialit_mb4\">Edit Trail</div>\r\n                <form>\r\n                {errors.trail_already_exist!==undefined && <div className=\"trailit-already-exist-error\">{errors.trail_already_exist}</div>}\r\n                    <div className=\"d-block\">\r\n                        <input type=\"text\" className=\"trailit_inputTitle trailit_mb3\" placeholder=\"Trail Title\" name=\"trail_title\" value={trail_title} onChange={this.onChangeInput}/>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                        <textarea rows=\"5\" className=\"trailit_inputIntro trailit_mb3\" placeholder=\"Type Introduction here ...\" name=\"trail_description\" value={trail_description} onChange={this.onChangeInput}></textarea>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                        <select className=\"trailit_selectBox trailit_mb3\" name=\"trail_categor_id\" value={trail_categor_id} onChange={this.onChangeSelect}>\r\n                            <option value=\"\">Select your category</option>\r\n                            {categoryList.map(res => (<option value={parseInt(res.trail_category_id)}>{res.trail_category_name}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <label className=\"trailit_12700 d-block trailit_mb3\">COVER IMAGE</label>\r\n                    <label className=\"trailit_12500 d-block trialit_mb1\">{(cover_image_name==\"\" || cover_image_url==\"\")?`Choose a photo that represents your trail. Max 8MB.`:(cover_image_name?cover_image_name:cover_image_url)}</label>\r\n                    <div className=\"trailit_uploadImage trialit_mb4\">\r\n                        <input type=\"file\" name=\"media\" onChange={this.handleChange}/>\r\n                        <label className=\"d-block\">Upload Image</label>\r\n                    </div>\r\n                    <label className=\"trailit_12700 d-block trailit_mb3\">ADD MORE CONTENT</label>\r\n                    {/* <div className=\"d-flex\">\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/image.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Image</span>\r\n                        </label>\r\n                        </div>\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Video</span>\r\n                        </label>\r\n                        </div>\r\n                        <button type=\"button\" className=\"trailit_addMoreOther\">\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Other</span>\r\n                        </button>\r\n                    </div> */}\r\n                    {/* <ul className=\"trailit_HashTagsList\">\r\n                        <li>Visual Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                        <li>Concept Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                    </ul>\r\n                    <div>\r\n                        <input type=\"text\" className=\"trailit_inputHashTags trailit_mb3\" placeholder=\"Hashtags\"/>\r\n                    </div> */}\r\n                    <div className=\"d-block trailit_checkbox trailit_mb3\">\r\n                        <input type=\"checkbox\" name=\"\" value={trail_user_status} checked={trail_user_status=='private'} onClick={this.onCheckedUserPrivate}/>\r\n                        <span></span>\r\n                        <label>Make this trail private</label>\r\n                        <button type=\"button\" className=\"trailit_deleteIcon\"><img src={require(\"../../images/delete.svg\")} alt=\"delete\"/></button>\r\n                    </div>\r\n                    <div className=\"trailit_userPanalFooterBox\">\r\n                        <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>Cancel</button>\r\n                        <button type=\"button\" className=\"trailit_btnPink\" onClick={this.onClickToSubmit}>Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileEdit;","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/enums.js",["419","420"],"export class Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexport class Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/network.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userVerification.js",["421","422","423"],"import React from 'react';\r\nimport { Form, Icon, Input, Button, Avatar } from 'antd';\r\n\r\nclass UserVerification extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = e => {\r\n\t\te.preventDefault();\r\n\t\tthis.props.form.validateFields((err, values) => {\r\n\t\t\tif (!err) {\r\n\t\t\t\tconsole.log('Received values of form: ', values);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\trender() {\r\n\t\t// const { getFieldDecorator } = this.props.form;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Veryfication</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_30\">\r\n\t\t\t\t\tWe will sent you a code for your verification to entered email address.\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"tr_label\">Enter Otp</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true, \r\n\t\t\t\t\t\t\tmessage: 'Please input your Email!'\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your Email!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Code\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Code\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default UserVerification;\r\n// export default Form.create({ name: 'normal_login' })(UserVerification);\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/socket.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/code/getBalance.js",["424"],"const nearAPI = require('../near-api-js/common-index.js');\nconst config = require('./config.json');\n// const account = 'testuser1.testnet';\nconst sender = '3piivr9bo.testnet';\nconst receiver = 'testuser1.testnet';\n\nexport async function getBalance() {\n  const provider = new nearAPI.providers.JsonRpcProvider(config.nodeUrl);\n  const state = await provider.query(`account/${sender}`, '');\n  // console.log(`Account ID: ${sender}`);\n  console.log(`Balance: ${nearAPI.utils.format.formatNearAmount(state.amount, 4)}`);\n  return nearAPI.utils.format.formatNearAmount(state.amount, 4);\n}\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/key_pair.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/signup.js",["425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440"],"import React from 'react';\r\nimport { Form, Icon, Upload, Input, Button, Avatar  } from 'antd';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nimport { createTrailId } from '../common/axios';\r\nimport { handleFileUpload } from '../common/audAndVidCommon';\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\nclass Signup extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: \"\",\r\n      fileLoading: false,\r\n      profileImage: '',\r\n      filename: ''\r\n    }\r\n  }\r\n\r\n  // Antd form reference\r\n  formRef = React.createRef();\r\n  \r\n  onFinishFailed = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n  \r\n  /**\r\n   * onClick to submit\r\n  */\r\n  onClickToSubmit = values => {\r\n    // this.formRef.validateFields((err, values) => {\r\n      // if (!err) {\r\n        values = {...values, profileImage: this.state.profileImage};\r\n        axios.post(`${process.env.REACT_APP_MS1_URL}user/register`, values, {withCredentials: true}).then(res => {\r\n        \tif(res.status == 200) {\r\n            const { responseCode, responseMessage } = res.data.data.response;\r\n            \r\n            if(responseCode === 208) {\r\n              this.setState({errors: responseMessage});\r\n              setTimeout(() => {\r\n                this.setState({errors: \"\"});\r\n              }, 3000)\r\n            } else {\r\n              const user_id = res.data.data.response.userProfile.id;\r\n              const trail_name = 'init trail';\r\n              this.setState({profileImage: '', filename: ''});\r\n              // Use user_id to create trail_id in user_tour table\r\n              // createTrailId(user_id, trail_name);\r\n              \r\n              this.props.clickToRedirect('userConfirmation');\r\n            }\r\n        \t}\r\n        })\r\n      // }\r\n    // });\r\n  };\r\n  \r\n  /**\r\n\t * Validate password with regular expression\r\n\t*/\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    \r\n\t\tvar digit = /^(.*[0-9]+.*)$/;\r\n\t\tvar upper = /^(.*[A-Z]+.*)$/;\r\n\t\tvar lower = /^(.*[a-z]+.*  )$/;\r\n    \r\n    if (value && !digit.test(value)) {\r\n\t\t\tcallback('Password must contain one digit');\r\n\t\t}\r\n\r\n\t\tif (value && !upper.test(value)) {\r\n      callback\r\n      ('Password must contain one uppercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && !lower.test(value)) {\r\n\t\t\tcallback('Password must contain one lowercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && value.length <= 8) {\r\n\t\t\tcallback('Password must be 8 digit');\r\n\t\t}\r\n\r\n\t\tif (value && this.state.confirmDirty) {\r\n\t\t\tthis.formRef.validateFields(['confirm'], { force: true });\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t};\r\n\r\n  render() {\r\n    \r\n    // const { getFieldDecorator } = this.props.form;\r\n    \r\n    return (\r\n      <div className={'trailMain'}>\r\n        <div className=\"tr_wrapper\">\r\n        {this.state.fileLoading && <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../images/loding1.png`)} /><img class=\"ring2\" src={require(`../images/loding2.png`)} /></div>\r\n        </div>}\r\n        <img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"trailit_icon\"/>\r\n          <div className=\"tr_title\">Welcome to the Trailit.</div>\r\n          <div className=\"tr_subtitle\">Enter your details to signup. If you have already signup than \r\n            <a href=\"javascript:;\" onClick={(e) => this.props.clickToRedirect('login')} className=\"tr_link fw_400\">Signin Now</a>\r\n          </div>\r\n          {this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n          <div className=\"tr_label\">Signup</div>\r\n          <Form \r\n            ref={ this.formRef }\r\n            name=\"normal_login\"\r\n            onFinish={ this.onClickToSubmit }\r\n            onFinishFailed={ this.onFinishFailed }\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{\r\n                type: 'email',\r\n                message: 'Please enter valid email!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter your email!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('email', {\r\n                  rules: [\r\n                  {\r\n                    type: 'email',\r\n                    message: 'Please enter valid email!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter your email!',\r\n                  },\r\n                  ],\r\n                })(\r\n                <Input\r\n                  placeholder=\"Enter your email\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[{\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                  }\r\n                ],\r\n              })(\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\" className=\"tr_input\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\" onClick={this.onClickToSubmit}>\r\n                Signup Now\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;\r\n// export default Form.create()(Signup);\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/User/userProfileAdd.js",["441","442","443","444","445","446","447","448","449","450"],"import React, { Component } from 'react';\r\nimport $ from 'jquery';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { isValidated } from './validation';\r\nimport { getAllCategory, createTrailId } from '../../common/axios';\r\n\r\nconst chrome = window.chrome;\r\nclass userProfileAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryList: [],\r\n            trail_description: '',\r\n            trail_title: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        let categoryResult = await getAllCategory();\r\n        \r\n        if(categoryResult.status == 200) {\r\n\t\t\tthis.setState({categoryList: categoryResult.data.response});\r\n        }\r\n    }\r\n    \r\n    onClear = () => {\r\n        this.setState({\r\n            trail_description: '',\r\n            trail_title: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false\r\n        })\r\n    }\r\n    \r\n    onClickToSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { trail_title } = this.state\r\n        this.setState({isSubmit: true, isLoading: true});\r\n        const { errors, isValid } = isValidated(this.state);\r\n        \r\n        if(!isValid) {\r\n            this.setState({errors})\r\n        } else {\r\n            const { trail_title, trail_description } = this.state;\r\n            chrome.storage.local.get([\"trail_web_user_tour\", \"userData\"], async function (items) {\r\n                let obj = {\r\n                    user_id: items.userData._id,\r\n                    trail_name: trail_title,\r\n                    trail_description,\r\n                    trail_category_id: 1,\r\n                    trail_user_status: 'private',\r\n                    cover_image_url: ''\r\n                }\r\n                \r\n                const result = await createTrailId(obj);\r\n                \r\n                this.setState({isLoading: false});\r\n                if(result.status == 200) {\r\n                    console.log(\"result.statusaaaaaa\", result.data);\r\n                    if(result.data.response.statusCode == 400) {\r\n                        this.setState({errors: {trail_already_exist: result.data.response.result}})\r\n                        setTimeout(() => {\r\n                            this.setState({errors: {}});\r\n                        }, 2000);\r\n                    } else {\r\n                        this.onClear();\r\n                        this.props.onAddRaw(result.data.response[0]);\r\n                        console.log(\"DDDFDFDFSSSSSSSSDSDSDSDSDSDSD\");\r\n                        $('body').attr('class', '');\r\n                    }\r\n                }\r\n            }.bind(this));\r\n        }\r\n    }\r\n    \r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value}, () => {\r\n            if(this.state.isSubmit) {\r\n                const { errors, isValid } = isValidated(this.state);\r\n                this.setState({errors});\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { isLoading, categoryList, trail_title, trail_description, errors } = this.state;\r\n        \r\n        return(\r\n            <div className=\"trailit_userPanalLeftBox\">\r\n                 {isLoading && <div className=\"trailit_loaderBox\">\r\n                   <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../../images/loding1.png`)} /><img class=\"ring2\" src={require(`../../images/loding2.png`)} /></div>\r\n                </div>}\r\n                <div className=\"trailit_editZTitle trialit_mb4\">Add Trail</div>\r\n                <form onSubmit={this.onClickToSubmit} name=\"add-trail-frm\">\r\n                    {errors.trail_already_exist!==undefined && <div className=\"trailit-already-exist-error\">{errors.trail_already_exist}</div>}\r\n                    <div className=\"d-block\">\r\n                        <input type=\"text\" className=\"trailit_inputTitle trailit_mb3\" name=\"trail_title\" value={trail_title} onChange={this.onChangeInput} placeholder=\"Trail Title\"/>\r\n                        {errors.trail_title!=undefined && <div className=\"trailit-validation-error\">{errors.trail_title}</div>}\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                        <textarea rows=\"5\" className=\"trailit_inputIntro trailit_mb3\" name=\"trail_description\" value={trail_description} onChange={this.onChangeInput} placeholder=\"Type Introduction here ...\"></textarea>\r\n                    </div>\r\n                    <div className=\"trailit_userPanalFooterBox\">\r\n                        <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>Cancel</button>\r\n                        <button type=\"button\" onClick={this.onClickToSubmit} className=\"trailit_btnPink\">Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default userProfileAdd;","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/common/celo/index.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/components/userConfirmation.js",["451","452","453","454"],"import React from 'react';\r\nimport { Form, Icon, Input, Button, Avatar } from 'antd';\r\n\r\nclass UserConfirmation extends React.Component {\r\n    render() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"text_center\">\r\n\t\t\t\t\t<div className=\"tr_title f_36 mt_55\">Thank You...!</div>\r\n\t\t\t\t\t<div className=\"tr_subtitle mt_55\">Thank you for the register into the trailit.</div>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button mt_55\" onClick={() => this.props.clickToRedirect('login')}>\r\n\t\t\t\t\t\tLogin now\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t} \r\n}\r\n\r\nexport default UserConfirmation;\r\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/web.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/utils/format.js",[],"/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/near-api-js/account_multisig.js",["455","456","457"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Contract } from './contract';\nimport { parseNearAmount } from './utils/format';\nimport { PublicKey } from './utils/key_pair';\nimport { addKey, deleteKey, deployContract, functionCall, functionCallAccessKey } from './transaction';\nimport { fetchJson } from './utils/web';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst NETWORK_ID = process.env.REACT_APP_NETWORK_ID || 'default';\nconst CONTRACT_HELPER_URL = process.env.CONTRACT_HELPER_URL || 'https://helper.testnet.near.org';\nexport const MULTISIG_STORAGE_KEY = '__multisigRequest';\nexport const MULTISIG_ALLOWANCE = new BN(process.env.MULTISIG_ALLOWANCE || parseNearAmount('1'));\nexport const MULTISIG_GAS = new BN(process.env.MULTISIG_GAS || '100000000000000');\nexport const MULTISIG_DEPOSIT = new BN('0');\nexport const MULTISIG_CHANGE_METHODS = ['add_request', 'add_request_and_confirm', 'delete_request', 'confirm'];\nexport const MULTISIG_VIEW_METHODS = ['get_request_nonce', 'list_request_ids'];\nexport const MULTISIG_CONFIRM_METHODS = ['confirm'];\n;\n// in memory request cache for node w/o localStorage\nlet storageFallback = {\n    [MULTISIG_STORAGE_KEY]: null\n};\nexport class AccountMultisig extends Account {\n    constructor(connection, accountId, storage) {\n        super(connection, accountId);\n        this.storage = storage;\n        this.contract = getContract(this);\n    }\n    addKey(publicKey, contractId, methodName, amount) {\n        const _super = Object.create(null, {\n            addKey: { get: () => super.addKey }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (contractId) {\n                return _super.addKey.call(this, publicKey, contractId, MULTISIG_CHANGE_METHODS.join(), MULTISIG_ALLOWANCE);\n            }\n            return _super.addKey.call(this, publicKey);\n        });\n    }\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            if (this.isDeleteAction(actions)) {\n                return yield _super.signAndSendTransaction.call(this, accountId, actions);\n            }\n            yield this.deleteUnconfirmedRequests();\n            const requestId = yield this.getRequestNonce();\n            this.setRequest({ accountId, requestId, actions });\n            const args = new Uint8Array(new TextEncoder().encode(JSON.stringify({\n                request: {\n                    receiver_id: receiverId,\n                    actions: convertActions(actions, accountId, receiverId)\n                }\n            })));\n            return yield _super.signAndSendTransaction.call(this, accountId, [\n                functionCall('add_request_and_confirm', args, MULTISIG_GAS, MULTISIG_DEPOSIT)\n            ]);\n        });\n    }\n    signAndSendTransactions(transactions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (let { receiverId, actions } of transactions) {\n                yield this.signAndSendTransaction(receiverId, actions);\n            }\n        });\n    }\n    deployMultisig(contractBytes) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            // replace account keys & recovery keys with limited access keys; DO NOT replace seed phrase keys\n            const accountKeys = (yield this.getAccessKeys()).map((ak) => ak.public_key);\n            const seedPhraseKeys = (yield this.getRecoveryMethods()).data\n                .filter(({ kind, publicKey }) => kind === 'phrase' && publicKey !== null && accountKeys.includes(publicKey))\n                .map((rm) => rm.publicKey);\n            const fak2lak = accountKeys.filter((k) => !seedPhraseKeys.includes(k)).map(toPK);\n            const confirmOnlyKey = toPK((yield this.postSignedJson('/2fa/getAccessKey', { accountId })).publicKey);\n            const newArgs = new Uint8Array(new TextEncoder().encode(JSON.stringify({ 'num_confirmations': 2 })));\n            const actions = [\n                ...fak2lak.map((pk) => deleteKey(pk)),\n                ...fak2lak.map((pk) => addKey(pk, functionCallAccessKey(accountId, MULTISIG_CHANGE_METHODS, null))),\n                addKey(confirmOnlyKey, functionCallAccessKey(accountId, MULTISIG_CONFIRM_METHODS, null)),\n                deployContract(contractBytes),\n                functionCall('new', newArgs, MULTISIG_GAS, MULTISIG_DEPOSIT),\n            ];\n            console.log('deploying multisig contract for', accountId);\n            return yield _super.signAndSendTransaction.call(this, accountId, actions);\n        });\n    }\n    deleteUnconfirmedRequests() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { contract } = this;\n            const request_ids = yield this.getRequestIds();\n            for (const request_id of request_ids) {\n                try {\n                    yield contract.delete_request({ request_id });\n                }\n                catch (e) {\n                    console.warn(\"Attempt to delete an earlier request before 15 minutes failed. Will try again.\");\n                }\n            }\n        });\n    }\n    // helpers\n    getRequestNonce() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.contract.get_request_nonce();\n        });\n    }\n    getRequestIds() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.contract.list_request_ids();\n        });\n    }\n    isDeleteAction(actions) {\n        return actions && actions[0] && actions[0].functionCall && actions[0].functionCall.methodName === 'delete_request';\n    }\n    getRequest() {\n        if (this.storage) {\n            return JSON.parse(this.storage.getItem(MULTISIG_STORAGE_KEY) || `{}`);\n        }\n        return storageFallback[MULTISIG_STORAGE_KEY];\n    }\n    setRequest(data) {\n        if (this.storage) {\n            return this.storage.setItem(MULTISIG_STORAGE_KEY, JSON.stringify(data));\n        }\n        storageFallback[MULTISIG_STORAGE_KEY] = data;\n    }\n    // default helpers for CH\n    sendRequestCode() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const { requestId, actions } = this.getRequest();\n            if (this.isDeleteAction(actions)) {\n                return;\n            }\n            const method = yield this.get2faMethod();\n            yield this.postSignedJson('/2fa/send', {\n                accountId,\n                method,\n                requestId,\n            });\n            return requestId;\n        });\n    }\n    verifyRequestCode(securityCode) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const request = this.getRequest();\n            if (!request) {\n                throw new Error('no request pending');\n            }\n            const { requestId } = request;\n            return yield this.postSignedJson('/2fa/verify', {\n                accountId,\n                securityCode,\n                requestId\n            });\n        });\n    }\n    getRecoveryMethods() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            return {\n                accountId,\n                data: yield this.postSignedJson('/account/recoveryMethods', { accountId })\n            };\n        });\n    }\n    get2faMethod() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let { data } = yield this.getRecoveryMethods();\n            if (data && data.length) {\n                data = data.find((m) => m.kind.indexOf('2fa-') === 0);\n            }\n            if (!data)\n                return null;\n            const { kind, detail } = data;\n            return { kind, detail };\n        });\n    }\n    signatureFor() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { accountId } = this;\n            const blockNumber = String((yield this.connection.provider.status()).sync_info.latest_block_height);\n            const signed = yield this.connection.signer.signMessage(Buffer.from(blockNumber), accountId, NETWORK_ID);\n            const blockNumberSignature = Buffer.from(signed.signature).toString('base64');\n            return { blockNumber, blockNumberSignature };\n        });\n    }\n    postSignedJson(path, body) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield fetchJson(CONTRACT_HELPER_URL + path, JSON.stringify(Object.assign(Object.assign({}, body), (yield this.signatureFor()))));\n        });\n    }\n}\n// helpers\nconst toPK = (pk) => PublicKey.from(pk);\nconst convertPKForContract = (pk) => pk.toString().replace('ed25519:', '');\nconst getContract = (account) => {\n    return new Contract(account, account.accountId, {\n        viewMethods: MULTISIG_VIEW_METHODS,\n        changeMethods: MULTISIG_CHANGE_METHODS,\n    });\n};\nconst convertActions = (actions, accountId, receiverId) => actions.map((a) => {\n    const type = a.enum;\n    const { gas, publicKey, methodName, args, deposit, accessKey, code } = a[type];\n    const action = {\n        type: type[0].toUpperCase() + type.substr(1),\n        gas: (gas && gas.toString()) || undefined,\n        public_key: (publicKey && convertPKForContract(publicKey)) || undefined,\n        method_name: methodName,\n        args: (args && Buffer.from(args).toString('base64')) || undefined,\n        code: (code && Buffer.from(code).toString('base64')) || undefined,\n        amount: (deposit && deposit.toString()) || undefined,\n        deposit: (deposit && deposit.toString()) || '0',\n        permission: undefined,\n    };\n    if (accessKey) {\n        if (receiverId === accountId && accessKey.permission.enum !== 'fullAccess') {\n            action.permission = {\n                receiver_id: accountId,\n                allowance: MULTISIG_ALLOWANCE.toString(),\n                method_names: MULTISIG_CHANGE_METHODS,\n            };\n        }\n        if (accessKey.permission.enum === 'functionCall') {\n            const { receiverId: receiver_id, methodNames: method_names, allowance } = accessKey.permission.functionCall;\n            action.permission = {\n                receiver_id,\n                allowance: (allowance && allowance.toString()) || undefined,\n                method_names\n            };\n        }\n    }\n    return action;\n});\n","/home/chirag/Desktop/codezeros_company/working_project/building_extension/src/reportWebVitals.js",[],{"ruleId":"458","severity":1,"message":"459","line":6,"column":10,"nodeType":"460","messageId":"461","endLine":6,"endColumn":16},{"ruleId":"462","replacedBy":"463"},{"ruleId":"464","replacedBy":"465"},{"ruleId":"458","severity":1,"message":"466","line":2,"column":16,"nodeType":"467","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"468","line":2,"column":37,"nodeType":"467","messageId":"461","endLine":2,"endColumn":43},{"ruleId":"469","severity":1,"message":"470","line":43,"column":5,"nodeType":"471","endLine":43,"endColumn":41},{"ruleId":"462","replacedBy":"472"},{"ruleId":"464","replacedBy":"473"},{"ruleId":"458","severity":1,"message":"466","line":2,"column":16,"nodeType":"467","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"468","line":2,"column":37,"nodeType":"467","messageId":"461","endLine":2,"endColumn":43},{"ruleId":"469","severity":1,"message":"470","line":44,"column":5,"nodeType":"471","endLine":44,"endColumn":41},{"ruleId":"462","replacedBy":"474"},{"ruleId":"464","replacedBy":"475"},{"ruleId":"458","severity":1,"message":"476","line":1,"column":17,"nodeType":"467","messageId":"461","endLine":1,"endColumn":23},{"ruleId":"458","severity":1,"message":"477","line":1,"column":25,"nodeType":"467","messageId":"461","endLine":1,"endColumn":34},{"ruleId":"458","severity":1,"message":"478","line":5,"column":10,"nodeType":"467","messageId":"461","endLine":5,"endColumn":28},{"ruleId":"458","severity":1,"message":"479","line":70,"column":11,"nodeType":"467","messageId":"461","endLine":70,"endColumn":15},{"ruleId":"469","severity":1,"message":"470","line":119,"column":8,"nodeType":"471","endLine":119,"endColumn":112},{"ruleId":"480","severity":1,"message":"481","line":119,"column":16,"nodeType":"482","messageId":"483","endLine":119,"endColumn":30},{"ruleId":"469","severity":1,"message":"470","line":175,"column":9,"nodeType":"471","endLine":175,"endColumn":64},{"ruleId":"480","severity":1,"message":"481","line":175,"column":49,"nodeType":"482","messageId":"483","endLine":175,"endColumn":63},{"ruleId":"462","replacedBy":"484"},{"ruleId":"464","replacedBy":"485"},{"ruleId":"462","replacedBy":"486"},{"ruleId":"464","replacedBy":"487"},{"ruleId":"458","severity":1,"message":"488","line":4,"column":7,"nodeType":"467","messageId":"461","endLine":4,"endColumn":13},{"ruleId":"458","severity":1,"message":"489","line":7,"column":7,"nodeType":"467","messageId":"461","endLine":7,"endColumn":16},{"ruleId":"462","replacedBy":"490"},{"ruleId":"464","replacedBy":"491"},{"ruleId":"462","replacedBy":"492"},{"ruleId":"464","replacedBy":"493"},{"ruleId":"462","replacedBy":"494"},{"ruleId":"464","replacedBy":"495"},{"ruleId":"496","severity":1,"message":"497","line":89,"column":48,"nodeType":"498","messageId":"499","endLine":98,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":213,"column":48,"nodeType":"498","messageId":"499","endLine":240,"endColumn":10},{"ruleId":"458","severity":1,"message":"500","line":1,"column":8,"nodeType":"467","messageId":"461","endLine":1,"endColumn":19},{"ruleId":"501","severity":1,"message":"502","line":9,"column":63,"nodeType":"503","messageId":"504","endLine":9,"endColumn":80},{"ruleId":"505","severity":1,"message":"506","line":10,"column":63,"nodeType":"507","messageId":"508","endLine":10,"endColumn":64},{"ruleId":"509","severity":1,"message":"510","line":163,"column":24,"nodeType":"511","messageId":"512","endLine":163,"endColumn":31},{"ruleId":"513","severity":1,"message":"514","line":242,"column":58,"nodeType":"515","messageId":"516","endLine":242,"endColumn":60},{"ruleId":"462","replacedBy":"517"},{"ruleId":"464","replacedBy":"518"},{"ruleId":"496","severity":1,"message":"497","line":29,"column":48,"nodeType":"498","messageId":"499","endLine":31,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":40,"column":48,"nodeType":"498","messageId":"499","endLine":46,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":54,"column":48,"nodeType":"498","messageId":"499","endLine":56,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":62,"column":48,"nodeType":"498","messageId":"499","endLine":64,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":71,"column":48,"nodeType":"498","messageId":"499","endLine":78,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":86,"column":48,"nodeType":"498","messageId":"499","endLine":95,"endColumn":10},{"ruleId":"509","severity":1,"message":"510","line":87,"column":28,"nodeType":"519","messageId":"512","endLine":87,"endColumn":39},{"ruleId":"458","severity":1,"message":"520","line":16,"column":5,"nodeType":"467","messageId":"461","endLine":16,"endColumn":8},{"ruleId":"458","severity":1,"message":"521","line":113,"column":8,"nodeType":"467","messageId":"461","endLine":113,"endColumn":21},{"ruleId":"522","severity":1,"message":"523","line":114,"column":27,"nodeType":"524","messageId":"525","endLine":114,"endColumn":29},{"ruleId":"513","severity":1,"message":"526","line":130,"column":57,"nodeType":"515","messageId":"527","endLine":130,"endColumn":59},{"ruleId":"522","severity":1,"message":"523","line":177,"column":31,"nodeType":"524","messageId":"525","endLine":177,"endColumn":33},{"ruleId":"522","severity":1,"message":"523","line":197,"column":27,"nodeType":"524","messageId":"525","endLine":197,"endColumn":29},{"ruleId":"522","severity":1,"message":"523","line":253,"column":28,"nodeType":"524","messageId":"525","endLine":253,"endColumn":30},{"ruleId":"458","severity":1,"message":"528","line":275,"column":13,"nodeType":"467","messageId":"461","endLine":275,"endColumn":21},{"ruleId":"458","severity":1,"message":"529","line":277,"column":11,"nodeType":"467","messageId":"461","endLine":277,"endColumn":19},{"ruleId":"458","severity":1,"message":"530","line":311,"column":7,"nodeType":"467","messageId":"461","endLine":311,"endColumn":18},{"ruleId":"522","severity":1,"message":"523","line":315,"column":19,"nodeType":"524","messageId":"525","endLine":315,"endColumn":21},{"ruleId":"522","severity":1,"message":"523","line":317,"column":26,"nodeType":"524","messageId":"525","endLine":317,"endColumn":28},{"ruleId":"531","severity":1,"message":"532","line":337,"column":15,"nodeType":"471","endLine":337,"endColumn":75},{"ruleId":"531","severity":1,"message":"532","line":338,"column":15,"nodeType":"471","endLine":338,"endColumn":75},{"ruleId":"522","severity":1,"message":"523","line":347,"column":32,"nodeType":"524","messageId":"525","endLine":347,"endColumn":34},{"ruleId":"522","severity":1,"message":"523","line":423,"column":26,"nodeType":"524","messageId":"525","endLine":423,"endColumn":28},{"ruleId":"522","severity":1,"message":"523","line":432,"column":26,"nodeType":"524","messageId":"525","endLine":432,"endColumn":28},{"ruleId":"462","replacedBy":"533"},{"ruleId":"464","replacedBy":"534"},{"ruleId":"496","severity":1,"message":"497","line":212,"column":48,"nodeType":"498","messageId":"499","endLine":214,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":222,"column":48,"nodeType":"498","messageId":"499","endLine":225,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":232,"column":48,"nodeType":"498","messageId":"499","endLine":234,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":241,"column":48,"nodeType":"498","messageId":"499","endLine":243,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":255,"column":48,"nodeType":"498","messageId":"499","endLine":259,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":270,"column":48,"nodeType":"498","messageId":"499","endLine":279,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":286,"column":48,"nodeType":"498","messageId":"499","endLine":288,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":296,"column":48,"nodeType":"498","messageId":"499","endLine":298,"endColumn":10},{"ruleId":"513","severity":1,"message":"514","line":351,"column":35,"nodeType":"515","messageId":"516","endLine":351,"endColumn":37},{"ruleId":"462","replacedBy":"535"},{"ruleId":"464","replacedBy":"536"},{"ruleId":"496","severity":1,"message":"497","line":71,"column":48,"nodeType":"498","messageId":"499","endLine":74,"endColumn":10},{"ruleId":"522","severity":1,"message":"523","line":37,"column":58,"nodeType":"524","messageId":"525","endLine":37,"endColumn":60},{"ruleId":"522","severity":1,"message":"523","line":38,"column":23,"nodeType":"524","messageId":"525","endLine":38,"endColumn":25},{"ruleId":"522","severity":1,"message":"523","line":44,"column":63,"nodeType":"524","messageId":"525","endLine":44,"endColumn":65},{"ruleId":"522","severity":1,"message":"537","line":45,"column":23,"nodeType":"524","messageId":"525","endLine":45,"endColumn":25},{"ruleId":"522","severity":1,"message":"523","line":78,"column":26,"nodeType":"524","messageId":"525","endLine":78,"endColumn":28},{"ruleId":"522","severity":1,"message":"523","line":79,"column":48,"nodeType":"524","messageId":"525","endLine":79,"endColumn":50},{"ruleId":"458","severity":1,"message":"538","line":147,"column":13,"nodeType":"467","messageId":"461","endLine":147,"endColumn":23},{"ruleId":"458","severity":1,"message":"539","line":147,"column":25,"nodeType":"467","messageId":"461","endLine":147,"endColumn":31},{"ruleId":"458","severity":1,"message":"540","line":147,"column":33,"nodeType":"467","messageId":"461","endLine":147,"endColumn":41},{"ruleId":"541","severity":1,"message":"542","line":155,"column":11,"nodeType":"511","messageId":"525","endLine":155,"endColumn":15,"fix":"543"},{"ruleId":"531","severity":1,"message":"532","line":168,"column":47,"nodeType":"471","endLine":168,"endColumn":110},{"ruleId":"531","severity":1,"message":"532","line":168,"column":110,"nodeType":"471","endLine":168,"endColumn":173},{"ruleId":"522","severity":1,"message":"537","line":182,"column":80,"nodeType":"524","messageId":"525","endLine":182,"endColumn":82},{"ruleId":"522","severity":1,"message":"537","line":182,"column":111,"nodeType":"524","messageId":"525","endLine":182,"endColumn":113},{"ruleId":"522","severity":1,"message":"537","line":182,"column":138,"nodeType":"524","messageId":"525","endLine":182,"endColumn":140},{"ruleId":"522","severity":1,"message":"523","line":213,"column":122,"nodeType":"524","messageId":"525","endLine":213,"endColumn":124},{"ruleId":"458","severity":1,"message":"544","line":5,"column":9,"nodeType":"467","messageId":"461","endLine":5,"endColumn":16},{"ruleId":"496","severity":1,"message":"497","line":31,"column":48,"nodeType":"498","messageId":"499","endLine":36,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":44,"column":48,"nodeType":"498","messageId":"499","endLine":46,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":55,"column":48,"nodeType":"498","messageId":"499","endLine":58,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":68,"column":48,"nodeType":"498","messageId":"499","endLine":70,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":91,"column":48,"nodeType":"498","messageId":"499","endLine":100,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":109,"column":48,"nodeType":"498","messageId":"499","endLine":111,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":119,"column":48,"nodeType":"498","messageId":"499","endLine":121,"endColumn":10},{"ruleId":"509","severity":1,"message":"510","line":133,"column":28,"nodeType":"519","messageId":"512","endLine":133,"endColumn":39},{"ruleId":"496","severity":1,"message":"497","line":37,"column":122,"nodeType":"498","messageId":"499","endLine":42,"endColumn":18},{"ruleId":"458","severity":1,"message":"545","line":4,"column":10,"nodeType":"467","messageId":"461","endLine":4,"endColumn":16},{"ruleId":"458","severity":1,"message":"546","line":8,"column":7,"nodeType":"467","messageId":"461","endLine":8,"endColumn":13},{"ruleId":"458","severity":1,"message":"547","line":87,"column":24,"nodeType":"467","messageId":"461","endLine":87,"endColumn":33},{"ruleId":"458","severity":1,"message":"548","line":87,"column":35,"nodeType":"467","messageId":"461","endLine":87,"endColumn":41},{"ruleId":"462","replacedBy":"549"},{"ruleId":"464","replacedBy":"550"},{"ruleId":"496","severity":1,"message":"497","line":28,"column":48,"nodeType":"498","messageId":"499","endLine":30,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":39,"column":48,"nodeType":"498","messageId":"499","endLine":45,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":53,"column":48,"nodeType":"498","messageId":"499","endLine":55,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":61,"column":48,"nodeType":"498","messageId":"499","endLine":67,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":74,"column":48,"nodeType":"498","messageId":"499","endLine":83,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":91,"column":48,"nodeType":"498","messageId":"499","endLine":102,"endColumn":10},{"ruleId":"509","severity":1,"message":"510","line":92,"column":28,"nodeType":"519","messageId":"512","endLine":92,"endColumn":39},{"ruleId":"469","severity":1,"message":"470","line":37,"column":5,"nodeType":"471","endLine":37,"endColumn":41},{"ruleId":"551","severity":1,"message":"552","line":1,"column":1,"nodeType":"553","messageId":"554","endLine":1,"endColumn":14,"fix":"555"},{"ruleId":"522","severity":1,"message":"537","line":47,"column":129,"nodeType":"524","messageId":"525","endLine":47,"endColumn":131},{"ruleId":"458","severity":1,"message":"544","line":63,"column":33,"nodeType":"467","messageId":"461","endLine":63,"endColumn":40},{"ruleId":"458","severity":1,"message":"528","line":92,"column":17,"nodeType":"467","messageId":"461","endLine":92,"endColumn":25},{"ruleId":"458","severity":1,"message":"529","line":94,"column":9,"nodeType":"467","messageId":"461","endLine":94,"endColumn":17},{"ruleId":"522","severity":1,"message":"523","line":101,"column":53,"nodeType":"524","messageId":"525","endLine":101,"endColumn":55},{"ruleId":"522","severity":1,"message":"523","line":105,"column":48,"nodeType":"524","messageId":"525","endLine":105,"endColumn":50},{"ruleId":"522","severity":1,"message":"523","line":143,"column":30,"nodeType":"524","messageId":"525","endLine":143,"endColumn":32},{"ruleId":"522","severity":1,"message":"523","line":144,"column":52,"nodeType":"524","messageId":"525","endLine":144,"endColumn":54},{"ruleId":"458","severity":1,"message":"556","line":159,"column":100,"nodeType":"467","messageId":"461","endLine":159,"endColumn":108},{"ruleId":"531","severity":1,"message":"532","line":165,"column":47,"nodeType":"471","endLine":165,"endColumn":110},{"ruleId":"531","severity":1,"message":"532","line":165,"column":110,"nodeType":"471","endLine":165,"endColumn":173},{"ruleId":"522","severity":1,"message":"523","line":183,"column":92,"nodeType":"524","messageId":"525","endLine":183,"endColumn":94},{"ruleId":"522","severity":1,"message":"523","line":183,"column":115,"nodeType":"524","messageId":"525","endLine":183,"endColumn":117},{"ruleId":"522","severity":1,"message":"523","line":217,"column":108,"nodeType":"524","messageId":"525","endLine":217,"endColumn":110},{"ruleId":"513","severity":1,"message":"514","line":6,"column":43,"nodeType":"515","messageId":"516","endLine":6,"endColumn":45},{"ruleId":"513","severity":1,"message":"514","line":14,"column":43,"nodeType":"515","messageId":"516","endLine":14,"endColumn":45},{"ruleId":"458","severity":1,"message":"466","line":2,"column":16,"nodeType":"467","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"468","line":2,"column":37,"nodeType":"467","messageId":"461","endLine":2,"endColumn":43},{"ruleId":"469","severity":1,"message":"470","line":46,"column":5,"nodeType":"471","endLine":46,"endColumn":41},{"ruleId":"458","severity":1,"message":"557","line":5,"column":7,"nodeType":"467","messageId":"461","endLine":5,"endColumn":15},{"ruleId":"458","severity":1,"message":"466","line":2,"column":16,"nodeType":"467","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"558","line":2,"column":22,"nodeType":"467","messageId":"461","endLine":2,"endColumn":28},{"ruleId":"458","severity":1,"message":"468","line":2,"column":45,"nodeType":"467","messageId":"461","endLine":2,"endColumn":51},{"ruleId":"458","severity":1,"message":"559","line":3,"column":10,"nodeType":"467","messageId":"461","endLine":3,"endColumn":24},{"ruleId":"458","severity":1,"message":"560","line":6,"column":10,"nodeType":"467","messageId":"461","endLine":6,"endColumn":23},{"ruleId":"458","severity":1,"message":"561","line":7,"column":10,"nodeType":"467","messageId":"461","endLine":7,"endColumn":26},{"ruleId":"458","severity":1,"message":"546","line":9,"column":7,"nodeType":"467","messageId":"461","endLine":9,"endColumn":13},{"ruleId":"522","severity":1,"message":"523","line":39,"column":24,"nodeType":"524","messageId":"525","endLine":39,"endColumn":26},{"ruleId":"458","severity":1,"message":"562","line":48,"column":21,"nodeType":"467","messageId":"461","endLine":48,"endColumn":28},{"ruleId":"458","severity":1,"message":"563","line":49,"column":21,"nodeType":"467","messageId":"461","endLine":49,"endColumn":31},{"ruleId":"458","severity":1,"message":"479","line":66,"column":13,"nodeType":"467","messageId":"461","endLine":66,"endColumn":17},{"ruleId":"564","severity":1,"message":"565","line":70,"column":15,"nodeType":"482","messageId":"566","endLine":70,"endColumn":33,"fix":"567"},{"ruleId":"531","severity":1,"message":"532","line":104,"column":40,"nodeType":"471","endLine":104,"endColumn":100},{"ruleId":"531","severity":1,"message":"532","line":104,"column":100,"nodeType":"471","endLine":104,"endColumn":160},{"ruleId":"469","severity":1,"message":"470","line":109,"column":13,"nodeType":"471","endLine":109,"endColumn":116},{"ruleId":"480","severity":1,"message":"481","line":109,"column":21,"nodeType":"482","messageId":"483","endLine":109,"endColumn":35},{"ruleId":"458","severity":1,"message":"568","line":3,"column":10,"nodeType":"467","messageId":"461","endLine":3,"endColumn":25},{"ruleId":"522","severity":1,"message":"523","line":25,"column":34,"nodeType":"524","messageId":"525","endLine":25,"endColumn":36},{"ruleId":"458","severity":1,"message":"569","line":42,"column":17,"nodeType":"467","messageId":"461","endLine":42,"endColumn":28},{"ruleId":"522","severity":1,"message":"523","line":63,"column":34,"nodeType":"524","messageId":"525","endLine":63,"endColumn":36},{"ruleId":"522","severity":1,"message":"523","line":65,"column":56,"nodeType":"524","messageId":"525","endLine":65,"endColumn":58},{"ruleId":"458","severity":1,"message":"544","line":84,"column":33,"nodeType":"467","messageId":"461","endLine":84,"endColumn":40},{"ruleId":"458","severity":1,"message":"570","line":91,"column":28,"nodeType":"467","messageId":"461","endLine":91,"endColumn":40},{"ruleId":"531","severity":1,"message":"532","line":96,"column":47,"nodeType":"471","endLine":96,"endColumn":110},{"ruleId":"531","severity":1,"message":"532","line":96,"column":110,"nodeType":"471","endLine":96,"endColumn":173},{"ruleId":"522","severity":1,"message":"537","line":103,"column":44,"nodeType":"524","messageId":"525","endLine":103,"endColumn":46},{"ruleId":"458","severity":1,"message":"571","line":2,"column":10,"nodeType":"467","messageId":"461","endLine":2,"endColumn":14},{"ruleId":"458","severity":1,"message":"466","line":2,"column":16,"nodeType":"467","messageId":"461","endLine":2,"endColumn":20},{"ruleId":"458","severity":1,"message":"572","line":2,"column":22,"nodeType":"467","messageId":"461","endLine":2,"endColumn":27},{"ruleId":"458","severity":1,"message":"468","line":2,"column":37,"nodeType":"467","messageId":"461","endLine":2,"endColumn":43},{"ruleId":"496","severity":1,"message":"497","line":43,"column":48,"nodeType":"498","messageId":"499","endLine":48,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":121,"column":48,"nodeType":"498","messageId":"499","endLine":123,"endColumn":10},{"ruleId":"496","severity":1,"message":"497","line":126,"column":48,"nodeType":"498","messageId":"499","endLine":128,"endColumn":10},"no-unused-vars","'chrome' is defined but never used.","Program","unusedVar","no-native-reassign",["573"],"no-negated-in-lhs",["574"],"'Icon' is defined but never used.","Identifier","'Avatar' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["573"],["574"],["573"],["574"],"'useRef' is defined but never used.","'createRef' is defined but never used.","'getAllNotification' is defined but never used.","'form' is assigned a value but never used.","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["573"],["574"],["573"],["574"],"'config' is assigned a value but never used.","'publicKey' is assigned a value but never used.",["573"],["574"],["573"],["574"],["573"],["574"],"require-yield","This generator function does not have 'yield'.","FunctionExpression","missingYield","'ContractKit' is defined but never used.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["573"],["574"],"NewExpression","'bkg' is assigned a value but never used.","'storageChange' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'tourType' is assigned a value but never used.","'fileType' is assigned a value but never used.","'nearBalance' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["573"],["574"],["573"],["574"],"Expected '!==' and instead saw '!='.","'auth_Tokan' is defined but never used.","'reload' is defined but never used.","'userData' is defined but never used.","no-extra-bind","The function binding is unnecessary.",{"range":"575","text":"576"},"'isValid' is assigned a value but never used.","'wallet' is defined but never used.","'chrome' is assigned a value but never used.","'toAddress' is assigned a value but never used.","'amount' is assigned a value but never used.",["573"],["574"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"577","text":"576"},"'trail_id' is assigned a value but never used.","'receiver' is assigned a value but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'createTrailId' is defined but never used.","'handleFileUpload' is defined but never used.","'user_id' is assigned a value but never used.","'trail_name' is assigned a value but never used.","no-regex-spaces","Spaces are hard to count. Use {2}.","multipleSpaces",{"range":"578","text":"579"},"'FontAwesomeIcon' is defined but never used.","'trail_title' is assigned a value but never used.","'categoryList' is assigned a value but never used.","'Form' is defined but never used.","'Input' is defined but never used.","no-global-assign","no-unsafe-negation",[5350,5361],"",[0,13],[2187,2189]," {2}"]