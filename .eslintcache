[{"/home/savan/Documents/Portfolio/extension/src/index.js":"1","/home/savan/Documents/Portfolio/extension/src/App.js":"2","/home/savan/Documents/Portfolio/extension/src/reportWebVitals.js":"3","/home/savan/Documents/Portfolio/extension/src/common/audAndVidCommon.js":"4","/home/savan/Documents/Portfolio/extension/src/common/axios.js":"5","/home/savan/Documents/Portfolio/extension/src/css/mainflip.js":"6","/home/savan/Documents/Portfolio/extension/src/css/tooltip.js":"7","/home/savan/Documents/Portfolio/extension/src/components/tooltip.js":"8","/home/savan/Documents/Portfolio/extension/src/components/previewModalComponent.js":"9","/home/savan/Documents/Portfolio/extension/src/near-api-js/common-index.js":"10","/home/savan/Documents/Portfolio/extension/src/common/draggable.js":"11","/home/savan/Documents/Portfolio/extension/src/common/textEditor.js":"12","/home/savan/Documents/Portfolio/extension/src/near-api-js/wallet-account.js":"13","/home/savan/Documents/Portfolio/extension/src/components/login.js":"14","/home/savan/Documents/Portfolio/extension/src/near-api-js/account.js":"15","/home/savan/Documents/Portfolio/extension/src/code/generateKey.js":"16","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/index.js":"17","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/rpc_errors.js":"18","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/browser_local_storage_key_store.js":"19","/home/savan/Documents/Portfolio/extension/src/components/otpVerification.js":"20","/home/savan/Documents/Portfolio/extension/src/near-api-js/validators.js":"21","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/index.js":"22","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/network.js":"23","/home/savan/Documents/Portfolio/extension/src/common/celo/index.js":"24","/home/savan/Documents/Portfolio/extension/src/components/User/userCUSD.js":"25","/home/savan/Documents/Portfolio/extension/src/common/celo/wallet/index.js":"26","/home/savan/Documents/Portfolio/extension/src/common/socket.js":"27","/home/savan/Documents/Portfolio/extension/src/common/trailOverlay.js":"28","/home/savan/Documents/Portfolio/extension/src/components/audioTour.js":"29","/home/savan/Documents/Portfolio/extension/src/components/tooltipOverlay.js":"30","/home/savan/Documents/Portfolio/extension/src/components/SortableItem.js":"31","/home/savan/Documents/Portfolio/extension/src/css/defaultButton.js":"32","/home/savan/Documents/Portfolio/extension/src/css/videoTour.js":"33","/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailTab.js":"34","/home/savan/Documents/Portfolio/extension/src/css/audioTour.js":"35","/home/savan/Documents/Portfolio/extension/src/near-api-js/near.js":"36","/home/savan/Documents/Portfolio/extension/src/near-api-js/signer.js":"37","/home/savan/Documents/Portfolio/extension/src/near-api-js/account_multisig.js":"38","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/enums.js":"39","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/web.js":"40","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/json-rpc-provider.js":"41","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/format.js":"42","/home/savan/Documents/Portfolio/extension/src/components/signup.js":"43","/home/savan/Documents/Portfolio/extension/src/components/userProfile.js":"44","/home/savan/Documents/Portfolio/extension/src/code/getBalance.js":"45","/home/savan/Documents/Portfolio/extension/src/components/User/userProfileEdit.js":"46","/home/savan/Documents/Portfolio/extension/src/components/User/validation.js":"47","/home/savan/Documents/Portfolio/extension/src/common/SendTipForm.js":"48","/home/savan/Documents/Portfolio/extension/src/components/common.js":"49","/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailModal.js":"50","/home/savan/Documents/Portfolio/extension/src/css/myExtensionRootFlip.js":"51","/home/savan/Documents/Portfolio/extension/src/code/sendtx.js":"52","/home/savan/Documents/Portfolio/extension/src/near-api-js/account_creator.js":"53","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/provider.js":"54","/home/savan/Documents/Portfolio/extension/src/components/videoTour.js":"55","/home/savan/Documents/Portfolio/extension/src/css/main.js":"56","/home/savan/Documents/Portfolio/extension/src/components/mySubscription.js":"57","/home/savan/Documents/Portfolio/extension/src/css/textEditor.js":"58","/home/savan/Documents/Portfolio/extension/src/near-api-js/connection.js":"59","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/index.js":"60","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/serialize.js":"61","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/merge_key_store.js":"62","/home/savan/Documents/Portfolio/extension/src/near-api-js/generated/rpc_error_types.js":"63","/home/savan/Documents/Portfolio/extension/src/components/forgotPassword.js":"64","/home/savan/Documents/Portfolio/extension/src/common/celo/api/index.js":"65","/home/savan/Documents/Portfolio/extension/src/common/trailitLogoInPreview.js":"66","/home/savan/Documents/Portfolio/extension/src/components/createModalComponent.js":"67","/home/savan/Documents/Portfolio/extension/src/near-api-js/contract.js":"68","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js":"69","/home/savan/Documents/Portfolio/extension/src/components/userVerification.js":"70","/home/savan/Documents/Portfolio/extension/src/components/userConfirmation.js":"71","/home/savan/Documents/Portfolio/extension/src/components/User/userProfileList.js":"72"},{"size":1219,"mtime":1610339339378,"results":"73","hashOfConfig":"74"},{"size":3061,"mtime":1611145728205,"results":"75","hashOfConfig":"74"},{"size":362,"mtime":1610339339382,"results":"76","hashOfConfig":"74"},{"size":1011,"mtime":1610339339370,"results":"77","hashOfConfig":"74"},{"size":4283,"mtime":1610339339370,"results":"78","hashOfConfig":"74"},{"size":957,"mtime":1610339339374,"results":"79","hashOfConfig":"74"},{"size":1370,"mtime":1611136364407,"results":"80","hashOfConfig":"74"},{"size":12619,"mtime":1611216212410,"results":"81","hashOfConfig":"74"},{"size":12086,"mtime":1611216212410,"results":"82","hashOfConfig":"74"},{"size":827,"mtime":1610339339378,"results":"83","hashOfConfig":"74"},{"size":1318,"mtime":1610339339370,"results":"84","hashOfConfig":"74"},{"size":10578,"mtime":1611216212410,"results":"85","hashOfConfig":"74"},{"size":13274,"mtime":1610339339382,"results":"86","hashOfConfig":"74"},{"size":5102,"mtime":1611216212410,"results":"87","hashOfConfig":"74"},{"size":18770,"mtime":1610339339378,"results":"88","hashOfConfig":"74"},{"size":995,"mtime":1611136364331,"results":"89","hashOfConfig":"74"},{"size":428,"mtime":1610339339378,"results":"90","hashOfConfig":"74"},{"size":2522,"mtime":1610339339378,"results":"91","hashOfConfig":"74"},{"size":4661,"mtime":1610339339378,"results":"92","hashOfConfig":"74"},{"size":1237,"mtime":1610339339374,"results":"93","hashOfConfig":"74"},{"size":2121,"mtime":1610339339382,"results":"94","hashOfConfig":"74"},{"size":438,"mtime":1610339339378,"results":"95","hashOfConfig":"74"},{"size":0,"mtime":1610339339378,"results":"96","hashOfConfig":"74"},{"size":582,"mtime":1610339339370,"results":"97","hashOfConfig":"74"},{"size":4743,"mtime":1610339339374,"results":"98","hashOfConfig":"74"},{"size":1037,"mtime":1610339339370,"results":"99","hashOfConfig":"74"},{"size":105,"mtime":1610339339370,"results":"100","hashOfConfig":"74"},{"size":1950,"mtime":1611216212410,"results":"101","hashOfConfig":"74"},{"size":16683,"mtime":1611216212410,"results":"102","hashOfConfig":"74"},{"size":3350,"mtime":1610339339374,"results":"103","hashOfConfig":"74"},{"size":8637,"mtime":1610339339370,"results":"104","hashOfConfig":"74"},{"size":21571,"mtime":1611136364399,"results":"105","hashOfConfig":"74"},{"size":5689,"mtime":1611136364411,"results":"106","hashOfConfig":"74"},{"size":2281,"mtime":1610339339370,"results":"107","hashOfConfig":"74"},{"size":11124,"mtime":1611216212414,"results":"108","hashOfConfig":"74"},{"size":5257,"mtime":1610339339378,"results":"109","hashOfConfig":"74"},{"size":3148,"mtime":1610339339378,"results":"110","hashOfConfig":"74"},{"size":11325,"mtime":1610339339378,"results":"111","hashOfConfig":"74"},{"size":477,"mtime":1610339339378,"results":"112","hashOfConfig":"74"},{"size":3368,"mtime":1610339339378,"results":"113","hashOfConfig":"74"},{"size":8301,"mtime":1610339339378,"results":"114","hashOfConfig":"74"},{"size":3712,"mtime":1610339339378,"results":"115","hashOfConfig":"74"},{"size":5893,"mtime":1611216212410,"results":"116","hashOfConfig":"74"},{"size":13921,"mtime":1611216212410,"results":"117","hashOfConfig":"74"},{"size":587,"mtime":1611136364335,"results":"118","hashOfConfig":"74"},{"size":10346,"mtime":1611136364351,"results":"119","hashOfConfig":"74"},{"size":354,"mtime":1610339339374,"results":"120","hashOfConfig":"74"},{"size":3888,"mtime":1611216212410,"results":"121","hashOfConfig":"74"},{"size":11673,"mtime":1611216212410,"results":"122","hashOfConfig":"74"},{"size":4554,"mtime":1610339339370,"results":"123","hashOfConfig":"74"},{"size":47452,"mtime":1611216212414,"results":"124","hashOfConfig":"74"},{"size":4189,"mtime":1610339339370,"results":"125","hashOfConfig":"74"},{"size":2500,"mtime":1610339339378,"results":"126","hashOfConfig":"74"},{"size":1139,"mtime":1610339339378,"results":"127","hashOfConfig":"74"},{"size":14399,"mtime":1611216212414,"results":"128","hashOfConfig":"74"},{"size":6159,"mtime":1610339339374,"results":"129","hashOfConfig":"74"},{"size":2617,"mtime":1610339339374,"results":"130","hashOfConfig":"74"},{"size":2660,"mtime":1611136364407,"results":"131","hashOfConfig":"74"},{"size":1335,"mtime":1610339339378,"results":"132","hashOfConfig":"74"},{"size":290,"mtime":1610339339378,"results":"133","hashOfConfig":"74"},{"size":10911,"mtime":1610339339378,"results":"134","hashOfConfig":"74"},{"size":4026,"mtime":1610339339378,"results":"135","hashOfConfig":"74"},{"size":4925,"mtime":1610339339378,"results":"136","hashOfConfig":"74"},{"size":1149,"mtime":1610339339374,"results":"137","hashOfConfig":"74"},{"size":250,"mtime":1610339339370,"results":"138","hashOfConfig":"74"},{"size":940,"mtime":1611136364343,"results":"139","hashOfConfig":"74"},{"size":6522,"mtime":1611216212410,"results":"140","hashOfConfig":"74"},{"size":3352,"mtime":1610339339378,"results":"141","hashOfConfig":"74"},{"size":5827,"mtime":1610339339378,"results":"142","hashOfConfig":"74"},{"size":1309,"mtime":1610339339374,"results":"143","hashOfConfig":"74"},{"size":657,"mtime":1610339339374,"results":"144","hashOfConfig":"74"},{"size":11041,"mtime":1611216212410,"results":"145","hashOfConfig":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},"n3tsqn",{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"165"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"148"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"148"},{"filePath":"176","messages":"177","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"148"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"157"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"148"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"165"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"157"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"201","usedDeprecatedRules":"148"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"165"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"148"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"148"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"157"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"148"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"235","messages":"236","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"157"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"242","messages":"243","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"244","usedDeprecatedRules":"148"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"157"},{"filePath":"250","messages":"251","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":"254","usedDeprecatedRules":"148"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"157"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"260","messages":"261","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"262","usedDeprecatedRules":"148"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"182"},{"filePath":"266","messages":"267","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"268","messages":"269","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"270","usedDeprecatedRules":"148"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"157"},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"281","messages":"282","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"287","usedDeprecatedRules":"148"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"294","messages":"295","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"148"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"308","messages":"309","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"310","messages":"311","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"312","messages":"313","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"314","messages":"315","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"316","messages":"317","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/home/savan/Documents/Portfolio/extension/src/index.js",[],["318","319"],"/home/savan/Documents/Portfolio/extension/src/App.js",["320","321"],"/home/savan/Documents/Portfolio/extension/src/reportWebVitals.js",[],"/home/savan/Documents/Portfolio/extension/src/common/audAndVidCommon.js",[],"/home/savan/Documents/Portfolio/extension/src/common/axios.js",[],["322","323"],"/home/savan/Documents/Portfolio/extension/src/css/mainflip.js",[],"/home/savan/Documents/Portfolio/extension/src/css/tooltip.js",[],"/home/savan/Documents/Portfolio/extension/src/components/tooltip.js",["324","325","326","327","328"],"import React from 'react';\r\nimport { Popover, PopoverBody } from 'reactstrap';\r\nimport $ from 'jquery';\r\n\r\nimport {\r\n    commonTypeSelectonButton, \r\n    commonInitialRenderFunction, \r\n    commonTooltipFormFunction,\r\n    handleFileChange,\r\n    commonFileUploadFunction\r\n} from './common';\r\n\r\nclass Tooltip extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            visible: true,\r\n            selectedForm: 'text',\r\n            fileLoading: false,\r\n            fileAddStatus: false,\r\n            title: '',\r\n            description: '',\r\n            web_url: '',\r\n            tourType: '',\r\n            selectedOption: { value: 'text', label: 'Text' },\r\n            trailStatus: 'text',\r\n            showPreview: false,\r\n            fileName: ''\r\n        }\r\n    }\r\n    \r\n    onSelectOption = trailStatus => {\r\n        this.setState({ trailStatus });\r\n    };\r\n    \r\n    componentDidMount() {\r\n        // this.props.form.resetFields();\r\n        // document.querySelector('.textarea-desc').setAttribute('contenteditable', 'true');\r\n        // document.querySelector('.input-title').setAttribute('contenteditable', 'true');\r\n        \r\n        let bounding = document.querySelector(this.props.uniqueTarget).getBoundingClientRect();\r\n        let targetElement = \"html, body\";\r\n        const y = document.querySelector(this.props.uniqueTarget).getBoundingClientRect().top + document.querySelector(targetElement).scrollTop + bounding.height - 300;\r\n        $(targetElement).stop().animate({\r\n            scrollTop: y\r\n        }, 1000);\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        // this.props.form.resetFields();\r\n    }\r\n    \r\n    /**\r\n     * on click to save tooltip\r\n    */\r\n    onClickToSubmit = e => {\r\n        // e.preventDefault();\r\n        \r\n        let obj = {};\r\n        const { onCancel, onSave, rowData, target, count } = this.props;\r\n        const { description } = this.state;\r\n        \r\n        if (this.state.trailStatus === 'text') {\r\n            // this.props.form.validateFields((err, values) => {\r\n            //     if (err || values.title === '' || (!description || description === '')) {\r\n            //         if (this.props.type === 'Make Edit') {\r\n            //             obj = {\r\n            //                 ...rowData,\r\n            //                 url: document.URL,\r\n            //                 unique_target_one:this.props.uniqueTarget,\r\n            //                 // class: this.props.path[0].className,\r\n            //                 type: 'tooltip',\r\n            //                 responsive: 'mobile',\r\n            //                 mobile_media_type: this.state.trailStatus,\r\n            //                 mobile_title: this.state.title,\r\n            //                 mobile_description: this.state.description,\r\n            //                 web_url: this.state.web_url\r\n            //             };\r\n            //         }\r\n\r\n            //         return;\r\n            //     }\r\n                \r\n                let paths = \"\";\r\n                // this.props.path.map(res => {\r\n                //     return ({localName: res.localName, className: res.className, nodeType: res.nodeType, elementTrgetedIndex: this.props.elementIndex})\r\n                // });\r\n                \r\n                let selector = '';\r\n                // paths.forEach(r => {\r\n                //     // if(pathCount == 0) {\r\n                //         if(r.className) {\r\n                //             let split = r.className.split(' ').filter(r => (r!=='trail_web_user' && r!=='trail_tour_tooltip')).join('.');\r\n                //             if(split) {\r\n                //                 selector = `.${split}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             } else {\r\n                //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             }\r\n                //         } else {\r\n                //             if(r.localName) {\r\n                //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n                //             }\r\n                //         }\r\n                //     // }\r\n                // });\r\n                \r\n                // if(this.props.elementIndex>1) {\r\n                //     selector += `:nth-of-type(${this.props.elementIndex})`;\r\n                // }\r\n                                \r\n                if (this.props.type === 'Make Edit') {\r\n                    obj = {\r\n                        ...rowData,\r\n                        url: document.URL,\r\n                        unique_target_one:this.props.uniqueTarget,\r\n                        // class: this.props.path[0].className,\r\n                        type: 'tooltip',\r\n                        responsive: 'mobile',\r\n                        mobile_media_type: this.state.trailStatus,\r\n                        mobile_title: this.state.title,\r\n                        mobile_description: this.state.description,\r\n                        web_url: this.state.web_url\r\n                    };  \r\n                } else {\r\n                    obj = {\r\n                        url: document.URL,\r\n                        uniqueTarget:this.props.uniqueTarget,\r\n                        // class: this.props.path[0].className,\r\n                        type: 'tooltip',\r\n                        mediaType: this.state.trailStatus,\r\n                        title: this.state.title,\r\n                        description: this.state.description,\r\n                        web_url: this.state.web_url\r\n                    };\r\n                }\r\n            // });\r\n\r\n        } else {\r\n            if (this.state.title === '' && this.state.web_url === '') {\r\n                return;\r\n            }\r\n            \r\n            let paths = \"\";\r\n            // this.props.path.map(res => {\r\n            //     return ({localName: res.localName, className: res.className, nodeType: res.nodeType, elementTrgetedIndex: this.props.elementIndex})\r\n            // });\r\n            \r\n            let selector = '';\r\n            // paths.forEach(r => {\r\n            //     // if(pathCount == 0) {\r\n            //         if(r.className) {\r\n            //             let split = r.className.split(' ').filter(r => (r!=='trail_web_user' && r!=='trail_tour_tooltip')).join('.');\r\n            //             if(split) {\r\n            //                 selector = `.${split}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             } else {\r\n            //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             }\r\n            //         } else {\r\n            //             if(r.localName) {\r\n            //                 selector = `${r.localName}${selector !== \"\"?`>${selector}`:''}`;\r\n            //             }\r\n            //         }\r\n            //     // }\r\n            // });\r\n            \r\n            // if(this.props.elementIndex>1) {\r\n            //     selector += `:nth-of-type(${this.props.elementIndex})`;\r\n            // }\r\n            \r\n            if(this.props.type === 'Make Edit') {\r\n                obj = {\r\n                    ...rowData,\r\n                    type: 'tooltip',\r\n                    mediaType: this.state.trailStatus,\r\n                    unique_target_one:this.props.uniqueTarget,\r\n                    responsive: 'mobile',\r\n                    mobile_media_type: this.state.trailStatus,\r\n                    mobile_title: this.state.title,\r\n                    mobile_description: this.state.description,\r\n                    web_url: this.state.web_url\r\n                };\r\n            } else {\r\n                obj = {\r\n                    ...rowData,\r\n                    type: 'tooltip',\r\n                    mediaType: this.state.trailStatus,\r\n                    uniqueTarget:this.props.uniqueTarget,\r\n                    // class: this.props.path[0].className,\r\n                    url: document.URL,\r\n                    title: this.state.title,\r\n                    web_url: this.state.web_url\r\n                };\r\n            }\r\n        }\r\n        \r\n        // Save trail data\r\n        onSave(obj);\r\n\r\n        // Remove tooltip selected area from window or browser tab\r\n        onCancel(target, count);\r\n        \r\n        // Remove tooltip\r\n        this.setState({\r\n            visible: false\r\n        });\r\n    }\r\n\r\n    // // Text/Audio/Video/image tab handler\r\n    // onClickHandler = (e, tab) => {\r\n    //     e.preventDefault();\r\n    //     // Change form\r\n    //     this.setState({ selectedForm: tab });\r\n    // };\r\n\r\n    /**\r\n     * on click visible popover\r\n    */\r\n    onClickToVisiblePopover = e => {\r\n        const { onCancel, target, count } = this.props;\r\n\r\n        this.setState({\r\n            visible: false\r\n        });\r\n\r\n        document.designMode = 'off';\r\n        onCancel(target, count);\r\n    };\r\n    \r\n    // Input change handler\r\n    onChangeToInput = (e) => {\r\n        e.preventDefault();\r\n        \r\n        this.setState({ [e.target.name]: e.target.value });\r\n    };\r\n    \r\n    uploadFile = (file) => {\r\n        this.setState({ fileLoading: true });\r\n        \r\n        commonFileUploadFunction(file)\r\n\t\t\t.then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n\t\t\t.then(res => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t})\r\n\t\t\t.then(data => {\r\n\t\t\t\tthis.setState({ \r\n                    showPreview: true, \r\n                    fileLoading: false, \r\n                    fileName: file.name, \r\n                    web_url: data.response.result.fileUrl, \r\n                    fileAddStatus: true \r\n                });\r\n            })\r\n            .catch(err => {\r\n\t\t\t\tthis.setState({ fileLoading: false });\r\n\t\t\t\tconsole.log('Error fetching profile ' + err);\r\n\t\t\t});\r\n    };\r\n    \r\n    handleChange = (e) => {\r\n        const { trailStatus } = this.state;\r\n\r\n        // Call common hadler file change function in common file\r\n        handleFileChange(e, trailStatus, this.uploadFile);\r\n    };\r\n    \r\n    // onSaveTrail = (e, data) => {\r\n    //     // saveTrail(this.state.tourType, this.state.title, this.state.web_url, data, (trailData) => {\r\n    //     //     console.log('from line: 154', trailData);\r\n\t// \t// \tthis.setState({ web_url: '', fileAddStatus: false });\r\n\t// \t// \tchrome.storage.local.set({ trail_web_user_tour: trailData, tourType: '' });\r\n    //  // });\r\n    //     this.onClickToSubmit(e);\r\n    // };\r\n    \r\n    selectedTooltipForm = () => {\r\n        const { trailStatus, title, fileName, fileLoading } = this.state;\r\n    \r\n        // Common tooltip form function imported from common file\r\n        return commonTooltipFormFunction(\r\n            trailStatus,\r\n            title,\r\n            fileName,\r\n            fileLoading,\r\n            this.onClickToVisiblePopover,\r\n            this.onClickToSubmit,\r\n            this.onChangeToInput,\r\n            this.handleChange\r\n        );\r\n    };\r\n    \r\n    onTitleChangeHandler = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({ title: e.target.value });\r\n    };\r\n    \r\n    onDescriptionChangeHandler = (value) => {\r\n        this.setState({ description: value });\r\n    };\r\n    \r\n    render() {\r\n        const { title, description, fileName, fileLoading } = this.state;\r\n        let tourType = 'tooltip';\r\n        \r\n        let tooltipForm = commonInitialRenderFunction(\r\n            this.state.trailStatus,\r\n            title,\r\n            description,\r\n            this.onTitleChangeHandler, \r\n            this.onDescriptionChangeHandler,\r\n            this.onClickToVisiblePopover,\r\n            this.onClickToSubmit,\r\n            this.selectedTooltipForm\r\n        );\r\n        \r\n        const { trailStatus } = this.state;\r\n        \r\n        return(\r\n            <React.Fragment>\r\n                <Popover \r\n                    placement=\"top\" \r\n                    className=\"trail_tooltip\" \r\n                    isOpen={this.state.visible} target={'.trail_tour_tooltip'}\r\n                    modifiers={ { arrow: '' } }\r\n                    container={ [ document.getElementById('extension-div').shadowRoot ] }\r\n                >\r\n                    <PopoverBody>\r\n                        { commonTypeSelectonButton(\r\n                            trailStatus, \r\n                            this.onSelectOption, \r\n                            tooltipForm, \r\n                            fileName,\r\n                            fileLoading,\r\n                            tourType\r\n                        ) }\r\n                    </PopoverBody>\r\n                </Popover>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Tooltip;",["329","330"],"/home/savan/Documents/Portfolio/extension/src/components/previewModalComponent.js",["331","332","333","334","335","336","337","338","339","340","341","342","343","344"],"import React from 'react';\r\nimport { Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { CloseOutlined, LeftOutlined, RightOutlined } from '@ant-design/icons';\r\nimport $ from 'jquery';\r\n\r\nimport AudioTour from './audioTour';\r\nimport { stopMediaPlaying } from '../common/stopePlayingMedia';\r\nimport { addTrailitLogo, removeTrailitLogo } from '../common/trailitLogoInPreview';\r\n\r\nconst chrome = window.chrome;\r\nclass PreviewModalComponent extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)            \r\n        this.state = {\r\n            title: '',\r\n            description: '',\r\n            open: true,\r\n            autoPlay: false\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        if (this.props.data[this.props.tourStep - 1].url !== document.URL) {\r\n            window.location.href = this.props.data[this.props.tourStep - 1].url;\r\n        }\r\n\r\n        // setTimeout(() => {\r\n        //     document.querySelectorAll('video').forEach(res => {\r\n        //         console.log('res', res);\r\n        //         if(res.className !== \"preview-video\") {\r\n        //             res.pause()    \r\n        //         }\r\n        //     })\r\n        // }, 1000);\r\n\r\n        // chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n        //     console.log('items', items);\r\n        //     if(items && (!items.AutoPlayMediaToggle || items.AutoPlayMediaToggle)) {\r\n        //         autoplay = items.AutoPlayMediaToggle;\r\n        //         this.setState({ autoPlay: items.AutoPlayMediaToggle });\r\n        //     }\r\n\r\n        // });\r\n\r\n        // Add modal class to dom\r\n        this.addModalClass();\r\n\r\n        // if (document.readyState === 'loading') {\r\n        //     console.log('state loading');            \r\n        // } else if (document.readyState === 'complete') {\r\n        //     console.log('state complete');\r\n        // }\r\n\r\n        if (document.readyState === 'complete') {            \r\n            $(document).ready(() => {\r\n                // Call toggle website media\r\n                this.toggleWebSitesMedia();\r\n            });\r\n\r\n        } else if (document.readyState === 'interactive' && \r\n            (\r\n                document.URL.includes('https://www.youtube.com/')                \r\n            ) \r\n        ) {            \r\n            // document.body.onload = function () { https://www.dailymotion.com/\r\n            //     console.log('body is loaded!!!!');\r\n            //     // Call toggle website media\r\n            //     this.toggleWebSitesMedia();\r\n            // };\r\n            $(document).ready(() => {\r\n                // Call toggle website media\r\n                this.toggleWebSitesMedia();\r\n            });\r\n\r\n        } else if (document.URL.includes('https://twitter.com/')) {\r\n            $(document).ready(() => {\r\n                // Call toggle website media\r\n                this.toggleWebSitesMedia();\r\n            });\r\n        } else {\r\n            $(window).on('load', () => {\r\n                // Call toggle website media\r\n                this.toggleWebSitesMedia();\r\n            });\r\n\r\n            // document.body.onload = async function () {\r\n            //     console.log('in body onload');\r\n            //     // Call toggle website media\r\n            //     await this.toggleWebSitesMedia();\r\n            // };\r\n        }\r\n\r\n        // Add trailit logo\r\n        addTrailitLogo();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        // chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n        //     if(prevState.autoPlay !== items.AutoPlayMediaToggle) {\r\n        //         this.setState({ autoPlay: items.AutoPlayMediaToggle });\r\n        //     }\r\n        // });\r\n\r\n        // Add modal class to dom\r\n        this.addModalClass();\r\n\r\n        // Call toggle website media\r\n        this.toggleWebSitesMedia();\r\n    };\r\n    \r\n    /**\r\n     * Manage popover web user tour button\r\n     * @data tooltip data\r\n     * @step tooltip current step\r\n    */\r\n    onClickToManagePopoverButton = async (event, data, step, tourSide) => {\r\n        let { tourStep } = this.props;\r\n\r\n        await this.toggle();\r\n\r\n        // console.log(\"this.props.data[step - 1]ccccc\", this.props.data[step - 1])\r\n        if(this.props.data[step - 1].url === document.URL) {\r\n            let type = this.props.data[step - 1].type;\r\n            this.props.tour(step, type, tourSide)\r\n        } else {\r\n            // Set loading true to show overlay\r\n            this.props.setLoadingState(true);\r\n            \r\n            let type = this.props.data[step - 1].type;\r\n            this.props.tour(step, type, tourSide)\r\n            window.location.href = this.props.data[step - 1].url;\r\n        }\r\n        // if(document.querySelector('#my-extension-root-flip').classList.value ===\"\") {\r\n        //     document.querySelector('#my-extension-root-flip').classList.remove('trail_flip_box');\r\n        // }\r\n        this.setState({ open: true });        \r\n    }\r\n    \r\n    onClickToDoneTour = (data, step) => {\r\n        let { tourSteps } = this.props;\r\n        this.setState({ open: false });\r\n        if(document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.value === \"\") {\r\n            document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.remove('trail_flip_box');\r\n        }\r\n        chrome.storage.local.set({closeContinue: false});\r\n        this.props.toggle({ removePreviewTrails: true });\r\n    }\r\n    \r\n    onButtonCloseHandler = async (e) => {\r\n        // Call parent component function to close tooltip preview\r\n        if(document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.value === \"\") {\r\n            document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.remove('trail_flip_box');\r\n        }\r\n        await this.props.closeButtonHandler(e);\r\n    };\r\n\r\n    toggle = () => {\r\n        if(document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.value === \"\") {\r\n            document.getElementById('extension-div').shadowRoot.querySelector('#my-extension-root-flip').classList.remove('trail_flip_box');\r\n        }\r\n        this.setState({ open: false });\r\n    };\r\n\r\n    addModalClass = () => {\r\n        $(document).ready(() => {\r\n            const modalDiv = document.getElementById('extension-div').shadowRoot.querySelector('.trail_preview_modal');\r\n                \r\n            if (modalDiv) {\r\n                if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n                    modalDiv.parentNode.parentNode.parentNode.setAttribute('class', 'trial_modal_show trail_preview_modal_main');\r\n                }\r\n            }\r\n        });        \r\n    };\r\n\r\n    toggleWebSitesMedia = () => {\r\n        const { tourStep, data } = this.props;\r\n        if (data[tourStep - 1].mediaType && data[tourStep - 1].mediaType === 'video') {\r\n\r\n            // Stop playing websites audio or video\r\n            stopMediaPlaying();\r\n        }\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        // Remove trailit log\r\n        removeTrailitLogo();\r\n    };\r\n    \r\n    render () {\r\n        const { open } = this.state;\r\n        const { tourStep, tourSide, play} = this.props;\r\n        const { title, description } = this.props.data[tourStep - 1];\r\n        let preview = null;\r\n\r\n        if (this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'video') {            \r\n            preview = (\r\n                <div className=\"tr_preview_video_bx\">\r\n                    <video className=\"preview-video\" disablePictureInPicture controlsList=\"nodownload\" controls allow=\"autoplay\" autoPlay={ this.state.autoPlay }>\r\n                        <source src={this.props.data[tourStep - 1].web_url} />\r\n                    </video>\r\n                </div> \r\n            );\r\n        } else if (this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'audio') {                \r\n            preview = <AudioTour data={this.props.data} toggle={this.props.toggle} tourStep={this.props.tourStep} tour={this.props.tour} previewInTooltip />\r\n        } else if (this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'image') {\r\n            preview = (\r\n                <div className=\"tr_preview_picture_bx\">\r\n                    <img className=\"preview-picture\" src={this.props.data[tourStep - 1].web_url} alt=\"preview-img\" />\r\n                </div>   \r\n            );\r\n        }\r\n\r\n        return(\r\n            <React.Fragment>\r\n                <Modal \r\n                    isOpen={ open } \r\n                    centered={ true }\r\n                    toggle={ this.onButtonCloseHandler } \r\n                    container={ [ document.getElementById('extension-div').shadowRoot ] }\r\n                    className={`tr_modal trail_preview_modal trail_tooltip_done ${this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'text'?'trail_text_only':'' || this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'video' ? 'tr_video_only' : '' || this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'image' ? 'tr_picture_only' : ''  || this.props.data[tourStep - 1].mediaType && this.props.data[tourStep - 1].mediaType === 'audio' ? 'tr_audio_only' : ''}`} \r\n                >\r\n                    {/* <img \r\n                        alt=\"..\"\r\n                        className=\"trailit_IconRightBottom\" \r\n                        src={require(`../images/trailit_icon1.png`)}  \r\n                        onClick={ (e) => {\r\n                            \r\n                            // Call send tip open modal function\r\n                            this.props.onSendTipModalOpen();\r\n                        } }\r\n                    /> */}\r\n                    {/* <ModalHeader toggle={this.toggle}>Create Modal</ModalHeader> */}\r\n                    <ModalBody>\r\n\r\n                        {/* <div className=\"m-0\">\r\n                            <div className=\"trailButtonsWrapper\">\r\n                                <Button className=\"ant-btn ant-btn-primary\" onClick={this.toggle}>Cancel</Button>\r\n                                <Button className=\"ant-btn ant-btn-primary\" onClick={this.onAddStep}>Add Step</Button>\r\n                            </div>\r\n                        </div> */}\r\n                        {this.props.data.length > 0 && <Button type=\"link\" className=\"trial_button_close\" onClick={ this.onButtonCloseHandler }><CloseOutlined type=\"close\" /></Button>}\r\n                        <div className=\"trail_modal_content_main\">\r\n                            <div className=\"trail_modal_title\">{title}</div>\r\n                            {<span className=\"trail_modal_content\" dangerouslySetInnerHTML={{ __html: description }}></span>}\r\n                            { preview }\r\n                        </div>\r\n                        \r\n                        <div className=\"btn-wrap\">\r\n                            {1 < (tourStep) && <Button type=\"link\" className=\"prev\" onClick={(e) => this.onClickToManagePopoverButton(e, this.props.data[tourStep - 1], tourStep - 1, 'prev')}><LeftOutlined type=\"left\" /></Button>}\r\n                            {this.props.data.length > tourStep && <Button type=\"link\" className=\"next\" onClick={(e) => this.onClickToManagePopoverButton(e, this.props.data[tourStep - 1], tourStep + 1, 'next')}><RightOutlined type=\"right\" /></Button>}\r\n                            {this.props.data.length === tourStep && <Button type=\"link\" className=\"next\" onClick={() => this.onClickToDoneTour(this.props.data[tourStep - 1], tourStep)}><RightOutlined type=\"right\" /></Button>}\r\n                        </div>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    };\r\n};\r\n\r\nexport default PreviewModalComponent;","/home/savan/Documents/Portfolio/extension/src/near-api-js/common-index.js",[],"/home/savan/Documents/Portfolio/extension/src/common/draggable.js",[],"/home/savan/Documents/Portfolio/extension/src/common/textEditor.js",["345"],"import React, { useEffect, memo, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBold, faItalic, faUnderline, faLink, faStrikethrough } from '@fortawesome/free-solid-svg-icons';\n\nimport { textEditor1 } from '../css/textEditor';\n\nconst TextEditor = memo((props) => {\n    const { onChange } = props;\n\n    // State\n    const [link, setLink] = useState('');\n\n    // Remove create link container function\n    const removeCreateLinkContainer = () => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Remove create link modal\n        shadowRoot.querySelector('.create-link-container').style.display = 'none';\n\n        // Set set link state\n        setLink('');\n    };\n\n    // On input change handler function\n    const onInputChangeHandler = (e) => {\n\n        // Set link state\n        setLink(e.target.value);\n    };\n\n    // On iframe body click function\n    const onIframeBodyClick = () => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        shadowRoot.querySelector('iframe').contentWindow.document.body.addEventListener('click', (e) => {\n            // Call remove create link container\n            removeCreateLinkContainer();\n\n            if (e.target.tagName === 'BODY') return;\n\n            if (e.target.tagName === 'STRIKE') {\n                // Add active-text-button class to strikeThrough button\n                shadowRoot.querySelector('.strikeThrough').classList.add('active-text-button');\n\n            } else {\n                // Remove active-text-button class to strikeThrough button\n                shadowRoot.querySelector('.strikeThrough').classList.remove('active-text-button');\n            }\n\n            if (e.target.tagName === 'B') {\n                // Add active-text-button class to bold button\n                shadowRoot.querySelector('.bold').classList.add('active-text-button');\n\n            } else {\n                // Remove active-text-button class to bold button\n                shadowRoot.querySelector('.bold').classList.remove('active-text-button');\n            } \n\n            if (e.target.tagName === 'U') {\n                // Add active-text-button class to underline button\n                shadowRoot.querySelector('.underline').classList.add('active-text-button');\n\n            } else {\n                // Remove active-text-button class to underline button\n                shadowRoot.querySelector('.underline').classList.remove('active-text-button');\n            }\n\n            if (e.target.tagName === 'I') {\n                // Add active-text-button class to italic button\n                shadowRoot.querySelector('.italic').classList.add('active-text-button');\n\n            } else {\n                // Remove active-text-button class to italic button\n                shadowRoot.querySelector('.italic').classList.remove('active-text-button');\n            }\n        });\n    };\n\n    // Udate description function\n    const updateDescription = () => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n        if (\n            shadowRoot.querySelector('iframe') && \n            shadowRoot.querySelector('iframe').contentWindow.document.body.getAttribute('eventadded') !== 'true'\n        ) {\n            shadowRoot.querySelector('iframe').contentWindow.document.body.setAttribute('eventadded', 'true');\n            shadowRoot.querySelector('iframe').contentWindow.document.body.addEventListener('keyup', (e) => {\n                e.preventDefault();\n\n                // Call change function of parent component\n                onChange(e.target.innerHTML);\n            });\n        }\n    };\n\n    // On button click handler function\n    const onButtonClickHandler = (command) => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Toggle button\n        shadowRoot.querySelector(`.${command}`).classList.toggle('active-text-button');\n\n        // Execute exec command function\n        shadowRoot.querySelector('iframe').contentWindow.document.execCommand(command, false, null);\n\n        // Get innerHTML of body\n        const description = shadowRoot.querySelector('iframe').contentWindow.document.body.innerHTML;\n\n        // Call on change function\n        onChange(description);\n    };\n\n    // On link click handler function\n    const onLinkClickHandler = (command) => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Toggle button\n        shadowRoot.querySelector(`.${command}`).classList.toggle('active-text-button');\n\n        const linkContainer = shadowRoot.querySelector('.create-link-container');\n        const display = getComputedStyle(linkContainer).display;\n        shadowRoot.querySelector('.create-link-container').style.display = display === 'none' ? 'block' : 'none';\n\n        if (display === 'none') return;\n\n        // Set set link state\n        setLink('');\n    };\n\n    // On create link click handler function\n    const onCreateLinkClickHandler = (command) => {\n        if (!link.includes('https://')) return;\n\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Execute exec command function\n        shadowRoot.querySelector('iframe').contentWindow.document.execCommand(\n            command, \n            false, \n            link\n        );\n\n        // Remove active-text-button class\n        shadowRoot.querySelector('.linkButton').classList.remove('active-text-button');\n\n        // Call remove create link container\n        removeCreateLinkContainer();\n    };\n\n    // On unlink click handler function\n    const onUnlinkClickHandler = (command) => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Execute exec command function\n        shadowRoot.querySelector('iframe').contentWindow.document.execCommand(\n            command, \n            false, \n            null\n        );\n\n        // Remove active-text-button class\n        shadowRoot.querySelector('.linkButton').classList.remove('active-text-button');\n        \n        // Call remove create link container\n        removeCreateLinkContainer();\n    };\n\n    // Enable edit moda function\n    const enableEditMode = () => {\n        const shadowRoot = document.getElementById('extension-div').shadowRoot;\n\n        // Content editable true\n        shadowRoot.querySelector('iframe').contentWindow.document.body.contentEditable = true;\n    };\n\n    useEffect(() => {\n        // Call enable edit mode function\n        enableEditMode();\n\n        // Call update description function\n        updateDescription();  \n        \n        // Call on iframe body click function\n        onIframeBodyClick();\n    }, []);\n\n    // const shadowRoot = document.getElementById('extension-div').shadowRoot;\n    // if (shadowRoot.querySelector('iframe')) {\n    //     if (shadowRoot.querySelector('iframe').contentWindow.document.body.getAttribute('contenteditable') !== 'true') {\n    //         // Call enable edit mode function\n    //         enableEditMode();\n    //     }\n\n    //     if (shadowRoot.querySelector('iframe').contentWindow.document.body.getAttribute('eventadded') !== 'true') {\n    //         // Call update description function\n    //         updateDescription(); \n    //     }\n    // }\n\n    return (\n        <>\n            <style>{ textEditor1 }</style>\n            <div id=\"custom-text-editor\">\n                <div className=\"button-container\">\n                    <button \n                        type=\"button\" \n                        className=\"text-editor-button bold\"\n                        onClick={ (e) => onButtonClickHandler('bold') }\n                    >\n                        <FontAwesomeIcon icon={ faBold } size=\"sm\" />\n                    </button>\n                    <button \n                        type=\"button\" \n                        className=\"text-editor-button italic\"\n                        onClick={ (e) => onButtonClickHandler('italic') }\n                    >\n                        <FontAwesomeIcon icon={ faItalic } size=\"sm\" />\n                    </button>\n                    <button \n                        type=\"button\" \n                        className=\"text-editor-button underline\"\n                        onClick={ (e) => onButtonClickHandler('underline') }\n                    >\n                        <FontAwesomeIcon icon={ faUnderline } size=\"sm\" />\n                    </button>\n                    <button \n                        type=\"button\" \n                        className=\"text-editor-button strikeThrough\"\n                        onClick={ (e) => onButtonClickHandler('strikeThrough') }\n                    >\n                        <FontAwesomeIcon icon={ faStrikethrough } size=\"sm\" />\n                    </button>\n                    <button \n                        type=\"button\" \n                        className=\"text-editor-button linkButton\"\n                        onClick={ (e) => onLinkClickHandler('linkButton') }\n                    >\n                        <FontAwesomeIcon icon={ faLink } size=\"sm\" />\n                    </button>\n                </div>\n                \n                <div className=\"create-link-container\">\n                    <div className=\"create-link\">\n                        <input \n                            value={ link }\n                            className=\"create-link-input\" \n                            onChange={ (e) => onInputChangeHandler(e) }\n                        />\n                        <div className=\"create-link-button-container\">\n                            <input\n                                value=\"Link\"\n                                type=\"button\"\n                                className=\"create-link-button\"\n                                onClick={ (e) => onCreateLinkClickHandler('createLink') }\n                            />\n                            <input\n                                type=\"button\"\n                                value=\"Unlink\"\n                                className=\"create-link-button\"\n                                onClick={ (e) => onUnlinkClickHandler('unlink') }\n                            />\n                        </div>\n                    </div>\n                </div>\n\n                <iframe \n                    name=\"richTextField\" \n                    title=\"custom-text-editor\" \n                    className=\"text-editor-frame\"\n                >\n                </iframe>\n            </div>\n        </>\n    );\n});\n\nexport default TextEditor;","/home/savan/Documents/Portfolio/extension/src/near-api-js/wallet-account.js",["346","347"],"import { Account } from './account';\nimport { SCHEMA, createTransaction } from './transaction';\nimport { KeyPair, serialize, PublicKey } from './utils';\nimport { base_decode } from './utils/serialize';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\nexport class WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * walletAccount.isSignedIn();\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * walletAccount.getAccountId();\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param contractId The NEAR account where the contract is deployed\n     * @param title Name of the application that will appear as requesting access in Wallet\n     * @param successUrl Optional url to redirect upon success\n     * @param failureUrl Optional url to redirect upon failure\n     *\n     * @example\n     *   walletAccount.requestSignIn(\n     *     account-with-deploy-contract,\n     *     \"Guest Book\",\n     *     \"https://example.com/success.html\",\n     *     \"https://example.com/error.html\");\n     */\n    requestSignIn(contractId, title, successUrl, failureUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getAccountId() || (yield this._keyStore.getKey(this._networkId, this.getAccountId()))) {\n                return Promise.resolve();\n            }\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('title', title);\n            newUrl.searchParams.set('contract_id', contractId);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            newUrl.searchParams.set('app_url', currentUrl.origin);\n            const accessKey = KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions\n     * @param transactions Array of Transaction objects that will be requested to sign\n     * @param callbackUrl The url to navigate to after the user is prompted to sign\n     */\n    requestSignTransactions(transactions, callbackUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL('sign', this._walletBaseUrl);\n            newUrl.searchParams.set('transactions', transactions\n                .map(transaction => serialize.serialize(SCHEMA, transaction))\n                .map(serialized => Buffer.from(serialized).toString('base64'))\n                .join(','));\n            newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle situation when access key is not added\n            if (accountId && publicKey) {\n                this._authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n                yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     *\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexport const WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using (@link WalletConnection) when no local key is available.\n */\nclass ConnectedWalletAccount extends Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, receiverId, actions);\n                }\n                catch (e) {\n                    // TODO: Use TypedError when available\n                    if (e.message.includes('does not have enough balance')) {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const publicKey = PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + 1;\n            const status = yield this.connection.provider.status();\n            const blockHash = base_decode(status.sync_info.latest_block_hash);\n            const transaction = createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions([transaction], window.location.href);\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === \"0\") && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/components/login.js",["348","349","350","351","352","353","354","355"],"import React, { useRef, createRef } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport { getAllNotification } from '../common/axios';\r\nimport { keyPairGenerate } from '../code/generateKey';\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\n\r\nclass Login extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\terrors: \"\",\r\n\t\t\tisAuth: false\r\n\t\t}\r\n\t}\r\n\r\n\t// Antd form reference\r\n\tformRef = React.createRef();\r\n\t\r\n\t// Facebook response function\r\n\tresponseFacebook = (response) => {\r\n\t\tconsole.log(response);\r\n\t}\r\n\r\n\t// On click to submit function\r\n\tonClickToSubmit = values => {\r\n\t\taxios.post(`${process.env.REACT_APP_MS1_URL}user/login`, values, { withCredentials: true })\r\n\t\t\t.then((res, err) => {\r\n\t\t\t\tif (res.status === 200) {\r\n\r\n\t\t\t\t\tconst { responseCode, responseMessage } = res.data.data.response;\r\n\t\t\t\t\t\r\n\t\t\t\t\tif (responseCode === 208 || responseCode === 404) {\r\n\r\n\t\t\t\t\t\tthis.setState({errors: responseMessage});\r\n\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\tthis.setState({ errors: \"\" });\r\n\t\t\t\t\t\t}, 3000);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tconst { jwt, user } = res.data.data.response.data;\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchrome.storage.local.set({ isAuth: true, auth_Tokan: jwt, userData: user, reload: true, keypair: keyPairGenerate() }, function() {\r\n\t\t\t\t\t\t\t// bkg.console.log(\"JWT, USER\", jwt, user)\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.props.clickToRedirect('userProfile');\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tchrome.storage.local.set({ notification: true })\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tthis.setState({ isAuth: true });\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t});\t\r\n\t};\r\n\t\r\n\t// Validate password with regular expression function\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n\t\tconst { form } = this.props;\r\n\t\t\r\n\t\tvar digit = /^(.*[0-9]+.*)$/;\r\n\t\tvar upper = /^(.*[A-Z]+.*)$/;\r\n\t\tvar lower = /^(.*[a-z]+.*)$/;\r\n\r\n\t\tif (value && !digit.test(value)) {\r\n\t\t\tcallback('Password must contain one digit');\r\n\t\t}\r\n\r\n\t\tif (value && !upper.test(value)) {\r\n\t\t\tcallback('Password must contain one uppercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && !lower.test(value)) {\r\n\t\t\tcallback('Password must contain one lowercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && value.length <= 8) {\r\n\t\t\tcallback('Password must be 8 digit');\r\n\t\t}\r\n\r\n\t\tif (value && this.state.confirmDirty) {\r\n\t\t\tthis.formRef.validateFields(['confirm'], { force: true });\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t};\r\n\r\n\tonFinishFailed = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n\t\r\n\trender() {\t\t\r\n\t\treturn (\r\n\t\t\t// <ReactShadowRoot>\r\n\t\t\t// \t<style>{ loginStyle }</style>\t\t\t\r\n\t\t\t\t// <div className={'trailMain'}>\r\n\t\t\t\t<div className='trailMain'>\r\n\t\t\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t\t\t<img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"login-img\" />\r\n\t\t\t\t\t\t<div className=\"tr_title\">Welcome to the Trailit.</div>\r\n\t\t\t\t\t\t<div className=\"tr_subtitle\">\r\n\t\t\t\t\t\t\tEnter your details to login. If you have not login details than\r\n\t\t\t\t\t\t\t<a href=\"javascript:;\" onClick={(e) => this.props.clickToRedirect('signup')} className=\"tr_link fw_400\">\r\n\t\t\t\t\t\t\t\tSignup Now\r\n\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n\t\t\t\t\t\t<div className=\"tr_label\">Signin</div>\r\n\t\t\t\t\t\t<Form \r\n\t\t\t\t\t\t\tref={ this.formRef } \r\n\t\t\t\t\t\t\tname=\"control-ref\"\r\n\t\t\t\t\t\t\tonFinish={ this.onClickToSubmit }\r\n\t\t\t\t\t\t\tonFinishFailed={ this.onFinishFailed }\t\r\n\t\t\t\t\t\t>\t\r\n\t\t\t\t\t\t\t<Form.Item \r\n\t\t\t\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\t\t\t// type: 'email',\r\n\t\t\t\t\t\t\t\t\t// message: 'Please enter valid email!',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmessage: 'Please enter your email!',\r\n\t\t\t\t\t\t\t\t}]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* {getFieldDecorator('email', {\r\n\t\t\t\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\ttype: 'email',\r\n\t\t\t\t\t\t\t\t\t\tmessage: 'Please enter valid email!',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\t\tmessage: 'Please enter your email!',\r\n\t\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t})(<Input placeholder=\"Enter your email\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t\t\t<Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item \r\n\t\t\t\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\tmin: 3,\r\n\t\t\t\t\t\t\t\t\tmessage: 'Please input your password!',\r\n\t\t\t\t\t\t\t\t}]}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{/* {getFieldDecorator('password', {\r\n\t\t\t\t\t\t\t\t\trules: [\r\n\t\t\t\t\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\t\t\t\t\tmessage: 'Please input your password!',\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t],\r\n\t\t\t\t\t\t\t\t})(<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t\t\t<Input type=\"password\" placeholder=\"Password\" className=\"tr_input\" />\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t\t<Form.Item className=\"last_fg\">\r\n\t\t\t\t\t\t\t\t<a className=\"tr_link flex_grow_1\" href=\"javascript:;\">\r\n\t\t\t\t\t\t\t\t\tForgot password?\r\n\t\t\t\t\t\t\t\t</a>\r\n\t\t\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\t\t\tLog in now\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t\t</Form>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t// </ReactShadowRoot>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Login;\r\n",["356","357"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/account.js",["358","359","360","361","362","363","364","365","366"],"import BN from 'bn.js';\nimport { transfer, createAccount, signTransaction, deployContract, addKey, functionCall, fullAccessKey, functionCallAccessKey, deleteKey, stake, deleteAccount } from './transaction';\nimport { TypedError, ErrorContext } from './providers';\nimport { base_decode, base_encode } from './utils/serialize';\nimport { PublicKey } from './utils/key_pair';\nimport { PositionalArgsError } from './utils/errors';\nimport { parseRpcError } from './utils/rpc_errors';\nimport exponentialBackoff from './utils/exponential-backoff';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Default amount of gas to be sent with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n// Due to protocol changes that charge upfront for the maximum possible gas price inflation due to\n// full blocks, the price of max_prepaid_gas is decreased to `300 * 10**12`.\n// For discussion see https://github.com/nearprotocol/NEPs/issues/67\nconst DEFAULT_FUNC_CALL_GAS = new BN('30000000000000');\n// Default number of retries with different nonce before giving up on a transaction.\nconst TX_NONCE_RETRY_NUMBER = 12;\n// Default number of retries before giving up on a transaction.\nconst TX_STATUS_RETRY_NUMBER = 12;\n// Default wait until next retry in millis.\nconst TX_STATUS_RETRY_WAIT = 500;\n// Exponential back off for waiting to retry.\nconst TX_STATUS_RETRY_WAIT_BACKOFF = 1.5;\nfunction parseJsonFromRawResponse(response) {\n    return JSON.parse(Buffer.from(response).toString());\n}\n/**\n * More information on [the Account spec](https://nomicon.io/DataStructures/Account.html)\n */\nexport class Account {\n    constructor(connection, accountId) {\n        this.accessKeyByPublicKeyCache = {};\n        this.connection = connection;\n        this.accountId = accountId;\n    }\n    get ready() {\n        return this._ready || (this._ready = Promise.resolve(this.fetchState()));\n    }\n    /**\n     * Helper function when getting the state of a NEAR account\n     * @returns Promise<void>\n     */\n    fetchState() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._state = yield this.connection.provider.query(`account/${this.accountId}`, '');\n        });\n    }\n    /**\n     * Returns the state of a NEAR account\n     * @returns {Promise<AccountState>}\n     */\n    state() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            return this._state;\n        });\n    }\n    printLogsAndFailures(contractId, results) {\n        for (const result of results) {\n            console.log(`Receipt${result.receiptIds.length > 1 ? 's' : ''}: ${result.receiptIds.join(', ')}`);\n            this.printLogs(contractId, result.logs, '\\t');\n            if (result.failure) {\n                console.warn(`\\tFailure [${contractId}]: ${result.failure}`);\n            }\n        }\n    }\n    printLogs(contractId, logs, prefix = '') {\n        for (const log of logs) {\n            console.log(`${prefix}Log [${contractId}]: ${log}`);\n        }\n    }\n    signTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const accessKeyInfo = yield this.findAccessKey(receiverId, actions);\n            if (!accessKeyInfo) {\n                throw new TypedError(`Can not sign transactions for account ${this.accountId} on network ${this.connection.networkId}, no matching key pair found in ${this.connection.signer}.`, 'KeyNotFound');\n            }\n            const { accessKey } = accessKeyInfo;\n            const status = yield this.connection.provider.status();\n            const nonce = ++accessKey.nonce;\n            // TODO: get latest_block_hash from block query using `final` finality\n            return yield signTransaction(receiverId, nonce, actions, base_decode(status.sync_info.latest_block_hash), this.connection.signer, this.accountId, this.connection.networkId);\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving the transaction\n     * @param actions The transaction [Action as described in the spec](https://nomicon.io/RuntimeSpec/Actions.html).\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    signAndSendTransaction(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            let txHash, signedTx;\n            // TODO: TX_NONCE (different constants for different uses of exponentialBackoff?)\n            const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_NONCE_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                [txHash, signedTx] = yield this.signTransaction(receiverId, actions);\n                const publicKey = signedTx.transaction.publicKey;\n                try {\n                    const result = yield exponentialBackoff(TX_STATUS_RETRY_WAIT, TX_STATUS_RETRY_NUMBER, TX_STATUS_RETRY_WAIT_BACKOFF, () => __awaiter(this, void 0, void 0, function* () {\n                        try {\n                            return yield this.connection.provider.sendTransaction(signedTx);\n                        }\n                        catch (error) {\n                            if (error.type === 'TimeoutError') {\n                                console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} as it has timed out`);\n                                return null;\n                            }\n                            throw error;\n                        }\n                    }));\n                    if (!result) {\n                        throw new TypedError(`Exceeded ${TX_STATUS_RETRY_NUMBER} attempts for transaction ${base_encode(txHash)}.`, 'RetriesExceeded', new ErrorContext(base_encode(txHash)));\n                    }\n                    return result;\n                }\n                catch (error) {\n                    if (error.message.match(/Transaction nonce \\d+ must be larger than nonce of the used access key \\d+/)) {\n                        console.warn(`Retrying transaction ${receiverId}:${base_encode(txHash)} with new nonce.`);\n                        delete this.accessKeyByPublicKeyCache[publicKey.toString()];\n                        return null;\n                    }\n                    error.context = new ErrorContext(base_encode(txHash));\n                    throw error;\n                }\n            }));\n            if (!result) {\n                throw new TypedError('nonce retries exceeded for transaction. This usually means there are too many parallel requests with the same access key.', 'RetriesExceeded');\n            }\n            const flatLogs = [result.transaction_outcome, ...result.receipts_outcome].reduce((acc, it) => {\n                if (it.outcome.logs.length ||\n                    (typeof it.outcome.status === 'object' && typeof it.outcome.status.Failure === 'object')) {\n                    return acc.concat({\n                        'receiptIds': it.outcome.receipt_ids,\n                        'logs': it.outcome.logs,\n                        'failure': typeof it.outcome.status.Failure != 'undefined' ? parseRpcError(it.outcome.status.Failure) : null\n                    });\n                }\n                else\n                    return acc;\n            }, []);\n            this.printLogsAndFailures(signedTx.transaction.receiverId, flatLogs);\n            if (typeof result.status === 'object' && typeof result.status.Failure === 'object') {\n                // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                if (result.status.Failure.error_message && result.status.Failure.error_type) {\n                    throw new TypedError(`Transaction ${result.transaction_outcome.id} failed. ${result.status.Failure.error_message}`, result.status.Failure.error_type);\n                }\n                else {\n                    throw parseRpcError(result.status.Failure);\n                }\n            }\n            // TODO: if Tx is Unknown or Started.\n            return result;\n        });\n    }\n    findAccessKey(receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: Find matching access key based on transaction\n            const publicKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            if (!publicKey) {\n                return null;\n            }\n            const cachedAccessKey = this.accessKeyByPublicKeyCache[publicKey.toString()];\n            if (cachedAccessKey !== undefined) {\n                return { publicKey, accessKey: cachedAccessKey };\n            }\n            try {\n                const accessKey = yield this.connection.provider.query(`access_key/${this.accountId}/${publicKey.toString()}`, '');\n                this.accessKeyByPublicKeyCache[publicKey.toString()] = accessKey;\n                return { publicKey, accessKey };\n            }\n            catch (e) {\n                // TODO: Check based on .type when nearcore starts returning query errors in structured format\n                if (e.message.includes('does not exist while viewing')) {\n                    return null;\n                }\n                throw e;\n            }\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param publicKey The public key to add while signing and sending the transaction\n     * @param data The compiled contract code\n     * @returns {Promise<Account>}\n     */\n    createAndDeployContract(contractId, publicKey, data, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            yield this.signAndSendTransaction(contractId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey), deployContract(data)]);\n            const contractAccount = new Account(this.connection, contractId);\n            return contractAccount;\n        });\n    }\n    /**\n     * @param receiverId NEAR account receiving Ⓝ\n     * @param amount Amount to send in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendMoney(receiverId, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(receiverId, [transfer(amount)]);\n        });\n    }\n    /**\n     * @param newAccountId NEAR account name to be created\n     * @param publicKey A public key created from the masterAccount\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    createAccount(newAccountId, publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKey = fullAccessKey();\n            return this.signAndSendTransaction(newAccountId, [createAccount(), transfer(amount), addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param beneficiaryId The NEAR account that will receive the remaining Ⓝ balance from the account being deleted\n     * @returns void\n     */\n    deleteAccount(beneficiaryId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteAccount(beneficiaryId)]);\n        });\n    }\n    /**\n     * @param data The compiled contract code\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deployContract(data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deployContract(data)]);\n        });\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param args arguments to pass to method. Can be either plain JS object which gets serialized as JSON automatically\n     *  or `Uint8Array` instance which represents bytes passed as is.\n     * @param gas max amount of gas that method call can use\n      * @param deposit amount of NEAR (in yoctoNEAR) to send together with the call\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    functionCall(contractId, methodName, args, gas, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            return this.signAndSendTransaction(contractId, [functionCall(methodName, args, gas || DEFAULT_FUNC_CALL_GAS, amount)]);\n        });\n    }\n    /**\n     * @param publicKey A public key to be associated with the contract\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The method name on the contract as it is written in the contract code\n     * @param amount Payment in yoctoⓃ that is sent to the contract during this function call\n     * @returns {Promise<FinalExecutionOutcome>}\n     * TODO: expand this API to support more options.\n     */\n    addKey(publicKey, contractId, methodName, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let accessKey;\n            if (contractId === null || contractId === undefined || contractId === '') {\n                accessKey = fullAccessKey();\n            }\n            else {\n                accessKey = functionCallAccessKey(contractId, !methodName ? [] : [methodName], amount);\n            }\n            return this.signAndSendTransaction(this.accountId, [addKey(PublicKey.from(publicKey), accessKey)]);\n        });\n    }\n    /**\n     * @param publicKey The public key to be deleted\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    deleteKey(publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [deleteKey(PublicKey.from(publicKey))]);\n        });\n    }\n    /**\n     * @param publicKey The public key for the account that's staking\n     * @param amount The account to stake in yoctoⓃ\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    stake(publicKey, amount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.signAndSendTransaction(this.accountId, [stake(amount, PublicKey.from(publicKey))]);\n        });\n    }\n    validateArgs(args) {\n        const isUint8Array = args.byteLength !== undefined && args.byteLength === args.length;\n        if (isUint8Array) {\n            return;\n        }\n        if (Array.isArray(args) || typeof args !== 'object') {\n            throw new PositionalArgsError();\n        }\n    }\n    /**\n     * @param contractId NEAR account where the contract is deployed\n     * @param methodName The view-only method (no state mutations) name on the contract as it is written in the contract code\n     * @param args Any arguments to the view contract method, wrapped in JSON\n     * @returns {Promise<any>}\n     */\n    viewFunction(contractId, methodName, args, { parse = parseJsonFromRawResponse } = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            args = args || {};\n            this.validateArgs(args);\n            const result = yield this.connection.provider.query(`call/${contractId}/${methodName}`, base_encode(JSON.stringify(args)));\n            if (result.logs) {\n                this.printLogs(contractId, result.logs);\n            }\n            return result.result && result.result.length > 0 && parse(Buffer.from(result.result));\n        });\n    }\n    /**\n     * @returns array of {access_key: AccessKey, public_key: PublicKey} items.\n     */\n    getAccessKeys() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const response = yield this.connection.provider.query(`access_key/${this.accountId}`, '');\n            // A breaking API change introduced extra information into the\n            // response, so it now returns an object with a `keys` field instead\n            // of an array: https://github.com/nearprotocol/nearcore/pull/1789\n            if (Array.isArray(response)) {\n                return response;\n            }\n            return response.keys;\n        });\n    }\n    /**\n     * Returns account details in terms of authorized apps and transactions\n     * @returns {Promise<any>}\n     */\n    getAccountDetails() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: update the response value to return all the different keys, not just app keys.\n            // Also if we need this function, or getAccessKeys is good enough.\n            const accessKeys = yield this.getAccessKeys();\n            const result = { authorizedApps: [], transactions: [] };\n            accessKeys.map((item) => {\n                if (item.access_key.permission.FunctionCall !== undefined) {\n                    const perm = item.access_key.permission.FunctionCall;\n                    result.authorizedApps.push({\n                        contractId: perm.receiver_id,\n                        amount: perm.allowance,\n                        publicKey: item.public_key,\n                    });\n                }\n            });\n            return result;\n        });\n    }\n    /**\n     * Returns calculated account balance\n     * @returns {Promise<AccountBalance>}\n     */\n    getAccountBalance() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const genesisConfig = yield this.connection.provider.experimental_genesisConfig();\n            const state = yield this.state();\n            const costPerByte = new BN(genesisConfig.runtime_config.storage_amount_per_byte);\n            const stateStaked = new BN(state.storage_usage).mul(costPerByte);\n            const staked = new BN(state.locked);\n            const totalBalance = new BN(state.amount).add(staked);\n            const availableBalance = totalBalance.sub(BN.max(staked, stateStaked));\n            return {\n                total: totalBalance.toString(),\n                stateStaked: stateStaked.toString(),\n                staked: staked.toString(),\n                available: availableBalance.toString()\n            };\n        });\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/code/generateKey.js",["367","368"],"const { KeyPair } = require('../near-api-js/common-index.js');\n// const URL = require('url').URL;\n\nconst config = require('./config.json');\n\nconst keyPair = KeyPair.fromRandom('ed25519');\nconst publicKey = keyPair.getPublicKey().toString();\n\n// console.log(`This should be saved to storage: ${keyPair.toString()}`);\n\nexport function keyPairGenerate() {\n    // const url = new URL(`${config.walletUrl}/login/`);\n    // url.searchParams.set('title', 'Trailit');\n    // url.searchParams.set('public_key', publicKey);\n    // url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n    // console.log(`Navigate to ${url.toString()} to authorize the above keypair`);\n    return keyPair.toString();\n};\n\n// const url = new URL(`${config.walletUrl}/login/`);\n// url.searchParams.set('title', 'Trailit');\n// url.searchParams.set('public_key', publicKey);\n// url.searchParams.set('success_url', 'http://127.0.0.1:5000');\n// console.log(`Navigate to ${url.toString()} to authorize the above keypair`);","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/rpc_errors.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/browser_local_storage_key_store.js",["369","370","371","372","373","374","375"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\nexport class BrowserLocalStorageKeyStore extends KeyStore {\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Sets a local storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/components/otpVerification.js",["376","377","378"],"import React from 'react';\r\nimport { Form, Input, Button, Avatar } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\n\r\nclass OtpVerification extends React.Component {\r\n\t/**\r\n\t * onClick to submit\r\n\t */\r\n\tonClickToSubmit = values => {\r\n\t\tconsole.log('Received values of form: ', values);\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div className=\"tr_wrapper\">\r\n\t\t\t\t<div className=\"tr_title\">Forgot Password?</div>\r\n\t\t\t\t<div className=\"tr_subtitle mb_40\">We will send OTP for your password recovery to your account.</div>\r\n\t\t\t\t<Form onSubmit={this.handleSubmit}>\r\n\t\t\t\t\t<Form.Item\r\n\t\t\t\t\t\tname=\"username\" \r\n\t\t\t\t\t\trules={[{\r\n\t\t\t\t\t\t\trequired: true,\r\n\t\t\t\t\t\t\tmessage: 'Please input your OTP!',\r\n\t\t\t\t\t\t}]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{/* {getFieldDecorator('username', {\r\n\t\t\t\t\t\t\trules: [{ required: true, message: 'Please input your OTP!' }],\r\n\t\t\t\t\t\t})(<Input placeholder=\"Code\" className=\"tr_input\" />)} */}\r\n\t\t\t\t\t\t<Input placeholder=\"Code\" className=\"tr_input\" />\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t\t<Form.Item>\r\n\t\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\">\r\n\t\t\t\t\t\t\tContinue\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Form.Item>\r\n\t\t\t\t</Form>\r\n\t\t\t\t<a href=\"\" className=\"tr_link back\">\r\n\t\t\t\t\tBACK\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default OtpVerification;\r\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/validators.js",["379","380"],"'use strict';\nimport BN from 'bn.js';\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params numSeats: number of seats.\n */\nexport function findSeatPrice(validators, numSeats) {\n    const stakes = validators.map(v => new BN(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new BN(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new BN(1), right = stakesSum.add(new BN(1));\n    while (!left.eq(right.sub(new BN(1)))) {\n        const mid = left.add(right).div(new BN(2));\n        let found = false;\n        let currentSum = new BN(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nexport function diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/network.js",[],"/home/savan/Documents/Portfolio/extension/src/common/celo/index.js",[],"/home/savan/Documents/Portfolio/extension/src/components/User/userCUSD.js",["381","382","383","384"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\n\r\nimport { wallet } from '../../common/celo';\r\nimport SendTipForm from '../../common/SendTipForm';\r\nimport { sendTransection } from '../../code/sendtx';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass userCUSD extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isLoading: false,\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      privateKey: this.props.privateKey,\r\n      isSuccess: false,\r\n      setError: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({privateKey: this.props.privateKey})\r\n  }\r\n\r\n  onChangeInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  sendTip = async (e, toAddress, amount) => {\r\n    e.preventDefault();\r\n\r\n    this.setState({ sendLoader: true });\r\n    \r\n    const { privateKey } = this.state;\r\n    sendTransection(privateKey, toAddress, amount)\r\n      .then(res => {\r\n\r\n        if (res && res.code && res.code === 400) {\r\n          throw new Error(res.err);\r\n        }\r\n\r\n        // Set is success state\r\n        this.setState({ isSuccess: true });\r\n\r\n        setTimeout(() => {          \r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ isSuccess: false });\r\n        }, 5000);\r\n      })\r\n      .catch(err => {  \r\n        console.log('err', err);\r\n        \r\n        this.setState({ setError: err.message });\r\n\r\n        setTimeout(() => {          \r\n          // Hide side modal\r\n          this.props.onHideSlide();\r\n\r\n          // Set is success state\r\n          this.setState({ setError: false });\r\n        }, 5000);\r\n      });\r\n    // await wallet.transfer(this.state.toAddress, this.state.amount);\r\n    // let balance = await wallet.balance();\r\n    // this.setState({\r\n    //   toAddress: \"\",\r\n    //   amount: \"\",\r\n    //   balance,\r\n    //   sendLoader: false,\r\n    // });\r\n  };\r\n\r\n  onClear = () => {\r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n  onSlide = () => {\r\n    this.setState({ slideBalance: !this.state.slideBalance });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, toAddress, amount, sendLoader } = this.state;\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalLeftBox\">\r\n        { \r\n          this.state.isSuccess ?\r\n            <div className=\"tr_description\">\r\n              <p \r\n                style={{ color: \"#0c8026\", textAlign: 'center' }}\r\n              >\r\n                Transaction completed successfully.\r\n              </p>\r\n            </div>\r\n          :\r\n            \r\n            !this.state.setError ?\r\n              <SendTipForm \r\n                isLoading={ isLoading }\r\n                sendLoader={ sendLoader }\r\n                sendTip={ this.sendTip }\r\n                onCancel={ this.onClear }\r\n              />\r\n              \r\n            :\r\n              <div className=\"tr_description\">\r\n                <p \r\n                  style={{ color: \"#d21e1e\", textAlign: 'center' }}\r\n                >\r\n                  { this.state.setError }\r\n                </p>\r\n              </div>          \r\n        }        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default userCUSD;\r\n\r\n// {/* <div>\r\n//   { isLoading && (\r\n//     <div className=\"trailit_loaderBox\">\r\n//       <div class=\"trial_spinner\">\r\n//         <img class=\"ring1\" src={require(`../../images/loding1.png`)} alt=\"loader\" />\r\n//         <img class=\"ring2\" src={require(`../../images/loding2.png`)} alt=\"loader\" />\r\n//       </div>\r\n//     </div>\r\n//   )}\r\n//   {/* <div className=\"tr_description\">\r\n//     <p>Microtipping enabled through Celo Blockchain cUSD</p>\r\n//   </div> */}\r\n//   <form>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your to address\"\r\n//         name=\"toAddress\"\r\n//         onChange={this.onChangeInput}\r\n//         value={toAddress}\r\n//       />\r\n//     </div>\r\n//     <div className=\"d-block\">\r\n//       <input\r\n//         type=\"text\"\r\n//         className=\"trailit_inputIntro trailit_mb3\"\r\n//         placeholder=\"Enter your amount\"\r\n//         name=\"amount\"\r\n//         onChange={this.onChangeInput}\r\n//         value={amount}\r\n//       />\r\n//     </div>\r\n//     <div className=\"trailit_userPanalFooterBox\">\r\n//       <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>\r\n//         Cancel\r\n//       </button>\r\n//       <button\r\n//         type=\"submit\"\r\n//         onClick={this.sendTip}\r\n//         disabled={sendLoader}\r\n//         className=\"trailit_btnPink\"\r\n//       >\r\n//         {sendLoader ? \"Loading...\" : \"Send Tip\"}\r\n//       </button>\r\n//     </div>\r\n//   </form>\r\n// </div> */}\r\n","/home/savan/Documents/Portfolio/extension/src/common/celo/wallet/index.js",["385"],"/home/savan/Documents/Portfolio/extension/src/common/socket.js",[],"/home/savan/Documents/Portfolio/extension/src/common/trailOverlay.js",[],"/home/savan/Documents/Portfolio/extension/src/components/audioTour.js",["386","387","388","389","390","391"],"import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport $ from 'jquery';\r\nimport { Button } from 'antd';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\n\r\nimport dragElement from '../common/draggable';\r\nimport { audioTourCss1 } from '../css/audioTour';\r\nimport { stopMediaPlaying } from '../common/stopePlayingMedia';\r\nimport { addTrailitLogo, removeTrailitLogo } from '../common/trailitLogoInPreview';\r\n\r\nconst chrome = window.chrome;\r\nlet timeInterval;\r\nlet audio;\r\n\r\nclass AudioTour extends React.PureComponent {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            audioLoad: false,\r\n            audioUrl: '',\r\n            type: 'audio', \r\n            doneTour: false,\r\n            step: 0,\r\n            profileImage: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        let self = this;\r\n        chrome.storage.local.get(['userData'], (items) => {\r\n            self.setState({ \r\n                profileImage: items.userData.profileImage,\r\n                audioLoad: true, \r\n                audioUrl: new Audio(this.props.data[this.props.tourStep - 1].web_url),\r\n                tourStep: this.props.tourStep\r\n            });    \r\n        })\r\n        \r\n        if(this.props.data[this.props.tourStep - 1].url !== document.URL) {\r\n            window.location.href = this.props.data[this.props.tourStep - 1].url;\r\n        }\r\n        \r\n        // if(document.URL.includes('youtube.com')) {\r\n        //     let videoElem = document.querySelector('.video-stream.html5-main-video');\r\n        //     videoElem.addEventListener('onloadeddata', () => {\r\n        //         videoElem.pause();\r\n        //     })\r\n        //     setTimeout(() => {\r\n        //         videoElem.pause();\r\n        //     }, 1000)\r\n        // }\r\n\r\n        // setTimeout(() => {\r\n        //     if(document.querySelector('.audio_wrap_tooltip')!== null) {\r\n        //         document.querySelectorAll('video').forEach(res => {\r\n        //             if(res.className !== \"preview-video\") {\r\n        //                 res.pause()    \r\n        //             }\r\n        //         })\r\n        //     }\r\n        // }, 1000);\r\n        \r\n        // if (document.readyState === 'complete') {\r\n        //     $(document).ready(() => {\r\n                // // Stop playing websites audio or video\r\n                // stopMediaPlaying();\r\n        //     });\r\n        \r\n        // } else {\r\n        //     document.body.onload = function () {\r\n        //         // Stop playing websites audio or video\r\n        //         stopMediaPlaying();\r\n        //     };\r\n        // }\r\n        \r\n        if (document.readyState === 'complete') {            \r\n            $(document).ready(() => {\r\n                // Stop playing websites audio or video\r\n                stopMediaPlaying();\r\n            });\r\n        } else if (document.readyState === 'interactive' && document.URL.includes('https://www.youtube.com/')) {            \r\n            $(document).ready(() => {\r\n                // Stop playing websites audio or video\r\n                stopMediaPlaying();\r\n            });\r\n\r\n        } else {\r\n            document.body.onload = function () {\r\n                // Stop playing websites audio or video\r\n                stopMediaPlaying();\r\n            };\r\n        }\r\n\r\n        // Add trailit logo\r\n        addTrailitLogo();\r\n    };\r\n    \r\n    /**\r\n     * Manage popover web user tour button\r\n     * @data tooltip data\r\n     * @step tooltip current step\r\n    */\r\n    onClickToManagePopoverButton = (event, step, tourSide) => {\r\n        let { tourStep } = this.props;\r\n        if (this.props.data[step - 1].url === document.URL) {\r\n            let type = this.props.data[step - 1].type;\r\n            this.props.tour(step, type, tourSide);\r\n        } else {\r\n            // Set loading true to show overlay\r\n            this.props.setLoadingState(true);\r\n            \r\n            let type = this.props.data[step - 1].type;\r\n            this.props.tour(step, type, tourSide)\r\n            window.location.href = this.props.data[step - 1].url;\r\n        }\r\n    }\r\n    \r\n    onClickToDoneTour = (data, step) => {\r\n        let { tourStep } = this.props;\r\n        chrome.storage.local.set({closeContinue: false});\r\n        this.props.toggle({ removePreviewTrails: true });\r\n        this.setState({doneTour: true});\r\n    }\r\n    \r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.props.tourStep !== prevProps.tourStep && this.props.data[this.props.tourStep - 1].type === this.state.type) {\r\n            this.setState({ audioUrl: new Audio(this.props.data[this.props.tourStep - 1].web_url) });\r\n        } else if (this.props.tourStep !== prevProps.tourStep && this.props.data[this.props.tourStep - 1].type !== this.state.type) {\r\n            const tr_audioplayer = document.getElementById('extension-div').shadowRoot.querySelector(\".tr_audioplayer\");\r\n            const playBtn = tr_audioplayer.querySelector(\".tr_audioplayer-playpause\");\r\n            playBtn.classList.remove(\"tr_audioplayer-playing\"); \r\n            \r\n            this.setState({ audioUrl: '', audioLoad: false });\r\n        }        \r\n    };\r\n    \r\n    cleanup = () => {\r\n        // Clean up \r\n        audio.pause();\r\n        clearInterval(timeInterval);\r\n    };\r\n    \r\n    componentWillUnmount() {\r\n        if (audio && timeInterval) {\r\n            this.cleanup();\r\n        }\r\n\r\n        // Remove trailit log\r\n        removeTrailitLogo();\r\n    }\r\n    \r\n    render() {\r\n        // Do clean up work\r\n        if (audio && timeInterval) {\r\n            this.cleanup();\r\n        }\r\n        \r\n        const tr_audioplayer = document.getElementById('extension-div').shadowRoot.querySelector(\".tr_audioplayer\");\r\n        \r\n        // document.querySelector(\".tr_audioplayer-time-current\").textContent = this.getTimeCodeFromNum(0);\r\n        audio = this.state.audioUrl;\r\n        \r\n        if (this.state.audioLoad) {\r\n            const playBtn = tr_audioplayer.querySelector(\".tr_audioplayer-playpause\");\r\n            if (!this.props.previewInTooltip) {\r\n                const audioWrapTooltip = document.getElementById('extension-div').shadowRoot.querySelector(\".audio_wrap_tooltip\");\r\n                \r\n                //Make the DIV element draggagle:\r\n                dragElement(audioWrapTooltip);\r\n            }\r\n            \r\n            //credit for song: Adrian kreativaweb@gmail.com\r\n            audio.addEventListener(\"loadeddata\", () => {\r\n                if((this.props.data[this.props.tourStep - 1].url === document.URL) && document.getElementById('extension-div').shadowRoot.querySelector('.audio_wrap_tooltip')) {\r\n                        chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n                            \r\n                        if (items.AutoPlayMediaToggle === undefined || items.AutoPlayMediaToggle) {\r\n                                        \r\n                            let audioPromise = audio.play();\r\n                            \r\n                            if (audioPromise !== undefined) {\r\n                                audioPromise\r\n                                    .then(res => {\r\n                                        playBtn.classList.add(\"tr_audioplayer-playing\");\r\n\r\n                                        //check audio percentage and update time accordingly\r\n                                        const progressBar = tr_audioplayer.querySelector(\".tr_audioplayer-bar-played\");\r\n                                        timeInterval = setInterval(() => {\r\n                                            progressBar.style.width = audio.currentTime / audio.duration * 100 + \"%\";\r\n                                            tr_audioplayer.querySelector(\".tr_audioplayer-time-current\").textContent = getTimeCodeFromNum(audio.currentTime);\r\n                                        }, 500);\r\n                                        \r\n                                        audio.volume = .75;\r\n                                    })\r\n                                    .catch((err) => console.log(\"err\", err));\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n                tr_audioplayer.querySelector(\".tr_audioplayer-time-duration\").textContent = isNaN(audio.duration)?0.00:getTimeCodeFromNum(audio.duration);\r\n            });\r\n            \r\n            //Audio ended event\r\n            audio.onended = function() {\r\n                playBtn.classList.remove(\"tr_audioplayer-playing\");\r\n            };\r\n            \r\n            //click on timeline to skip around\r\n            const timeline = tr_audioplayer.querySelector(\".tr_audioplayer-bar\");\r\n            timeline.addEventListener(\"click\", e => {\r\n                const timelineWidth = window.getComputedStyle(timeline).width;\r\n                const timeToSeek = e.offsetX / parseInt(timelineWidth) * audio.duration;\r\n                audio.currentTime = timeToSeek;\r\n            }, false);\r\n            \r\n            //click volume slider to change volume\r\n            const volumeSlider = tr_audioplayer.querySelector(\".volume-slider-root\");\r\n            volumeSlider.addEventListener('click', e => {\r\n                const sliderWidth = window.getComputedStyle(volumeSlider).width;\r\n                const newVolume = e.offsetX / parseInt(sliderWidth);\r\n                audio.volume = newVolume;\r\n                tr_audioplayer.querySelector(\".volume-percentage\").style.width = newVolume * 100 + '%';\r\n            }, false);\r\n            \r\n            //toggle between playing and pausing on button click\r\n            playBtn.addEventListener(\"click\", () => {\r\n                if (audio.paused) {\r\n                    playBtn.classList.add(\"tr_audioplayer-playing\");\r\n                    chrome.storage.local.get(['AutoPlayMediaToggle'], (items) => {\r\n                        if(!items.AutoPlayMediaToggle || items.AutoPlayMediaToggle) {\r\n                            audio.autoplay = true;\r\n                            let audioPromise = audio.play();\r\n                            \r\n                            if (audioPromise !== undefined) {\r\n                                audioPromise\r\n                                    .then(res => {\r\n                                            playBtn.classList.add(\"tr_audioplayer-playing\");                                        \r\n                                        //check audio percentage and update time accordingly\r\n                                        const progressBar = tr_audioplayer.querySelector(\".tr_audioplayer-bar-played\");\r\n                                        timeInterval = setInterval(() => {\r\n                                            progressBar.style.width = audio.currentTime / audio.duration * 100 + \"%\";\r\n                                            tr_audioplayer.querySelector(\".tr_audioplayer-time-current\").textContent = getTimeCodeFromNum(audio.currentTime);\r\n                                        }, 500);\r\n    \r\n                                        audio.volume = .75;\r\n                                    }).catch((err) => console.log(\"err\", err));\r\n                            }\r\n                        }\r\n                    });\r\n                    \r\n                    tr_audioplayer.querySelector(\".tr_audioplayer-time-duration\").textContent = isNaN(audio.duration)?0.00:getTimeCodeFromNum(audio.duration);                    \r\n                } else {\r\n                    audio.pause();\r\n                    playBtn.classList.remove(\"tr_audioplayer-playing\");\r\n                }\r\n            });\r\n            \r\n            tr_audioplayer.querySelector(\".volume-button\").addEventListener(\"click\", () => {\r\n                const volumeEl = tr_audioplayer.querySelector(\".volume-container .volume\");\r\n                audio.muted = !audio.muted;\r\n                if (audio.muted) {\r\n                    volumeEl.classList.remove(\"icono-volumeMedium\");\r\n                    volumeEl.classList.add(\"icono-volumeMute\");\r\n                } else {\r\n                    volumeEl.classList.add(\"icono-volumeMedium\");\r\n                    volumeEl.classList.remove(\"icono-volumeMute\");\r\n                }\r\n            });\r\n            \r\n            //turn 128 seconds into 2:08\r\n            function getTimeCodeFromNum(num) {\r\n                let seconds = parseInt(num);\r\n                let minutes = parseInt(seconds / 60);\r\n                seconds -= minutes * 60;\r\n                const hours = parseInt(minutes / 60);\r\n                minutes -= hours * 60;\r\n            \r\n                if (hours === 0) return `${minutes}:${String(seconds % 60).padStart(2, 0)}`;\r\n                return `${String(hours).padStart(2, 0)}:${minutes}:${String(\r\n                    seconds % 60\r\n                ).padStart(2, 0)}`;\r\n            }\r\n        };\r\n        \r\n        const { tourStep } = this.props;\r\n        \r\n        return (\r\n            // className={`trail_tooltip_done ${tourSide==='prev'?\"trail_vC trail_video_overlayPrev trail_tooltip_done\":\"trail_vC trail_video_overlayNext trail_tooltip_done\"}`}\r\n            <div>\r\n                <style>{ audioTourCss1 }</style>\r\n                <div className=\"audio_wrap_tooltip\">\r\n                    <div className=\"audio_wrap_tooltip_innr\">\r\n                        <div className=\"trialit_audio tr_gradient_border\">\r\n                            <img src={this.state.profileImage==''?require(\"../images/user.png\"):this.state.profileImage} />\r\n                            <div className=\"tr_audioplayer\">\r\n                                <div className=\"tr_audioplayer-playpause\" title=\"Play\"><a>Play</a></div>\r\n                                <div className=\"tr_audioplayer-time tr_audioplayer-time-current\">00:00</div>\r\n                                <div className=\"tr_audioplayer-bar\">\r\n                                    <div className=\"tr_audioplayer-bar-loaded\"></div>\r\n                                    <div className=\"tr_audioplayer-bar-played\" ></div>\r\n                                </div>\r\n                                <div className=\"tr_audioplayer-time tr_audioplayer-time-duration\"></div>\r\n                                <div className=\"volume-container\">\r\n                                    <div className=\"volume-button\">\r\n                                        <div className=\"volume icono-volumeMedium\"></div>\r\n                                    </div>\r\n                                    <div className=\"volume-slider\">\r\n                                        <div className=\"volume-slider-root\">\r\n                                            <div className=\"volume-percentage\"></div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>                    \r\n                    </div>\r\n\r\n                    { !this.props.previewInTooltip &&\r\n                        <div className=\"btn-wrap videoShow\">\r\n                            {this.props.data.length > 0 && <Button type=\"link\" className=\"trial_button_close\" onClick={(e) => {\r\n                                audio.pause();\r\n                                clearInterval(timeInterval);\r\n                                this.props.closeButtonHandler(e);\r\n                            }}><CloseOutlined /></Button>}\r\n                            {1 < (tourStep) && <React.Fragment><button className=\"ant-btn ant-btn-primary ex_mr_10\" onClick={(e) => {\r\n                                audio.pause();\r\n                                clearInterval(timeInterval);\r\n                                this.onClickToManagePopoverButton(e, tourStep - 1, 'prev')\r\n                            }}>Previous</button></React.Fragment>}\r\n                            {this.props.data.length > tourStep && <React.Fragment><button className=\"ant-btn ant-btn-primary\" onClick={(e) => {\r\n                                audio.pause();    \r\n                                clearInterval(timeInterval);                        \r\n                                this.onClickToManagePopoverButton(e, tourStep + 1, 'next')\r\n                            }}>Next</button></React.Fragment>}\r\n                            {this.props.data.length === tourStep && <React.Fragment><button className=\"ant-btn ant-btn-primary\" onClick={() => {\r\n                                audio.pause();\r\n                                this.onClickToDoneTour(tourStep)\r\n                            }}>Done</button></React.Fragment>}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AudioTour;","/home/savan/Documents/Portfolio/extension/src/components/tooltipOverlay.js",["392","393","394","395","396","397","398","399","400","401"],"import React from 'react';\r\nimport ReactPlayer from 'react-player';\r\nimport $ from 'jquery';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass TooltipOverlay extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            content: {}\r\n        }\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const { data, tourStep } = this.props;\r\n\r\n        this.setState({content: data[tourStep - 1]==undefined?{}:data[tourStep - 1]})\r\n    }\r\n    \r\n    /**\r\n     * Manage popover web user tour button\r\n     * @data tooltip data\r\n     * @step tooltip current step\r\n    */\r\n    onClickToManagePopoverButton = (event, step, tourSide) => {\r\n        let { tourStep } = this.props;\r\n        \r\n        if(this.props.data[step - 1].url === document.URL) {\r\n            let type = this.props.data[step - 1].type;\r\n            this.setState({content: this.props.data[step - 1]});\r\n            this.props.tour(step, type, tourSide)\r\n        } else {\r\n            let type = this.props.data[step - 1].type;\r\n            this.props.tour(step, type, tourSide)\r\n            window.location.href = this.props.data[step - 1].url;\r\n        }\r\n    }\r\n    \r\n    onClickToDoneTour = (data, step) => {\r\n        let { tourSteps } = this.props;        \r\n        this.props.toggle(true);\r\n    }\r\n    \r\n    render() {\r\n        const { data, tourStep, tourSide} = this.props;    \r\n\r\n        // {(this.props.data[tourStep - 1].url === document.URL) && <div className={tourSide==='prev'?\"trail_vC trail_video_overlayPrev\":\" trail_vC trail_video_overlayNext\"}></div>\r\n        return (\r\n            <React.Fragment>\r\n                <div className={\"trail_vC trail_video_overlayPrev\"}>\r\n                    <img className=\"trail_loader_video\" src={require('../images/loader.png')} />\r\n                    {/* <div className=\"video-wrap\">\r\n                        {(this.props.data[tourStep - 1].url === document.URL) && <div className={\"trail_vC trail_video_overlayPrev\"}>\r\n                            <div className=\"video-wrap\">\r\n                                <p className=\"contentTitle videoShow\">{this.state.content.title}</p>\r\n                                <div className=\"description videoShow\" dangerouslySetInnerHTML={{ __html: this.state.content.description }}></div>\r\n                                <div className=\"bottom-links videoShow\">\r\n                                    {1 < (tourStep) && <React.Fragment><a onClick={(e) => this.onClickToManagePopoverButton(e, tourStep - 1, 'prev')}>Previous</a><a>|</a></React.Fragment>}\r\n                                    {this.props.data.length > tourStep && <React.Fragment><a onClick={(e) => this.onClickToManagePopoverButton(e, tourStep + 1, 'next')}>Next</a></React.Fragment>}\r\n                                    {this.props.data.length === tourStep && <React.Fragment><a onClick={() => this.onClickToDoneTour(tourStep)}>Done</a></React.Fragment>}\r\n                                    {/* <a href=\"\">Previous</a>\r\n                                    <a>|</a>\r\n                                    <a href=\"\">Next</a> \r\n                                    </div>\r\n                                </div>}                            \r\n                                    */}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TooltipOverlay;\r\n","/home/savan/Documents/Portfolio/extension/src/components/SortableItem.js",["402","403","404","405"],"import React from \"react\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport _ from \"lodash\";\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\nconst onTitleClickHandler = (e) => {\r\n  e.preventDefault();\r\n\r\n  const titles = document.querySelectorAll(\".en_title\");\r\n\r\n  titles.forEach((el) => {\r\n    el.addEventListener(\"keydown\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  });\r\n};\r\n\r\nconst onDescriptionHandler = (e) => {\r\n  e.preventDefault();\r\n\r\n  const descriptions = document.querySelectorAll(\".en_desc\");\r\n  descriptions.forEach((el) => {\r\n    el.addEventListener(\"keydown\", (e) => {\r\n      e.stopPropagation();\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Draggable list handle\r\n */\r\nconst DragHandle = sortableHandle(() => (\r\n  <span className=\"drag_icon\">\r\n    <img src={require(\"../images/move.png\")} alt=\"drag icon\" width=\"25px\" />\r\n  </span>\r\n));\r\n\r\n/**\r\n * Draggable item sort\r\n */\r\nclass SortableItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MobileTargetNotFound: {},\r\n      result: [],\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      MobileTargetNotFound: nextProps.MobileTargetNotFound,\r\n      result: nextProps.result,\r\n    };\r\n  }\r\n\r\n  onClickToAddSubMenu = (e, result, tourStep) => {\r\n    this.props.onClick(e, result, tourStep);\r\n  };\r\n  \r\n  handleClickMenu = (e) => {\r\n    e.stopPropagation();\r\n\r\n    // Set show menu state\r\n    this.setState({showMenu: !this.state.showMenu});\r\n  };\r\n\r\n  onMouseLeave = (e) => {\r\n    if (this.state.showMenu) {\r\n      // Set show menu state\r\n      this.setState({showMenu: false});\r\n    }\r\n  };\r\n\r\n  // componentDidUpdate() {\r\n  //   const trailBuilderElement = document.querySelector('.trail_builder_side_panel_open');\r\n  //   console.log('trailBuilderElement', trailBuilderElement);\r\n  //   console.log('this.state.showMenu', this.state.showMenu);\r\n  //   console.log(this.state.showMenu && trailBuilderElement);\r\n\r\n  //   if (this.state.showMenu && trailBuilderElement) {\r\n  //     // Hide detele button\r\n  //     this.setState({ showMenu: false });\r\n  //   }\r\n  // };\r\n  \r\n  render() {\r\n    let { i, result, tourStep, tourType } = this.props;\r\n\r\n    const { MobileTargetNotFound } = this.state;\r\n    let subStep = result.unique_target_one != \"\" ? true : false;\r\n    let subStepStatus = false;\r\n\r\n    if (!_.isEmpty(MobileTargetNotFound)) {\r\n      subStepStatus =\r\n        result.trail_data_id === MobileTargetNotFound.trail_data_id;\r\n    }\r\n    \r\n    if (!resizeScreen()) {\r\n      subStepStatus = false;\r\n      subStep = false;\r\n    }\r\n\r\n    return (\r\n      // <div key={i} className={`li done trailTourStep ${tourStep === (i + 1) ? 'active' : ''}`}>\r\n      //     <DragHandle />\r\n      //     <div className=\"counter\"><span>{i + 1}</span></div>\r\n      //     <div>\r\n      //         <div className=\"en_title\">\r\n      //             {result.title}\r\n      //         </div>\r\n      //         <div className=\"en_desc mb-2\">\r\n      //             {(result.type !== 'audio' &&\r\n      //             result.type !== 'video' &&\r\n      //             result.mediaType === 'text') ? <span dangerouslySetInnerHTML={{ __html: result.description }}></span> : result.url}\r\n      //         </div>\r\n      //         {subStepStatus && <div>\r\n      //             <button onClick={(e) => this.onClickToAddSubMenu(e, result, (i + 1))}>Add</button>\r\n      //         </div>}\r\n      //         {subStep && <div>\r\n      //             <div className=\"en_title\">\r\n      //                 {result.mobile_title}\r\n      //             </div>\r\n      //             <div className=\"en_desc mb-2\">\r\n      //                 {(result.type !== 'audio' &&\r\n      //                 result.type !== 'video' &&\r\n      //                 result.mobile_media_type === 'text') ? <span dangerouslySetInnerHTML={{ __html: result.mobile_description }}></span> : result.url}\r\n      //             </div>\r\n      //         </div>}\r\n      //     </div>\r\n      // </div>\r\n      \r\n      //   <div className={`${\r\n      //     this.state.showMenu\r\n      //       ? \"z-index-2\"\r\n      //       : \"\"\r\n      //   }`}>\r\n      <div>\r\n        <div\r\n          key={i}\r\n          onMouseLeave={ this.onMouseLeave }\r\n          className={`trailitStepBox ${\r\n            tourStep === i + 1\r\n              ? \"active\"\r\n              : \"\" } ${this.state.showMenu\r\n              ? \"z-index-2\"\r\n              : \"\"\r\n          }`}\r\n        >\r\n          {\r\n            tourType !== 'preview' &&\r\n              <DragHandle />\r\n          }\r\n          <div className=\"trailitStepTitle\">\r\n            Step {i + 1} - {result.title}\r\n          </div>\r\n          <div className=\"trailitIconRight\">\r\n            <div>\r\n              {\r\n                this.props.tourType === 'Make Edit' &&\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={ this.handleClickMenu }\r\n                    className=\"trailit_dotsButton\"\r\n                  >\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/trailit_dotsPink.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  </button>\r\n              }\r\n              {this.state.showMenu && (\r\n                <div className={`trailit_dotsMenuList`}>\r\n                  {/* <button type=\"button\">Edit</button> */}\r\n                  <button \r\n                    type=\"button\"\r\n                    onClick={ (e) => {\r\n                      // Set show state\r\n                      this.setState({ showMenu: false });\r\n\r\n                      // Show delete modal\r\n                      this.props.onDeleteModalOpen(result.title, result.trail_data_id);\r\n                    } }\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n            {result.mediaType === \"image\" && (\r\n              <img\r\n                width=\"16px\"\r\n                height=\"14px\"\r\n                src={require(\"../images/trialit_image.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            )}\r\n            {result.mediaType === \"video\" && (\r\n              <img\r\n                width=\"18px\"\r\n                height=\"18px\"\r\n                src={require(\"../images/trialit_video.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            )}\r\n            {result.mediaType === \"text\" && (\r\n              <img\r\n                width=\"16px\"\r\n                height=\"14px\"\r\n                src={require(\"../images/trailit_text.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            )}\r\n            {result.mediaType === \"audio\" && (\r\n              <img\r\n                width=\"18px\"\r\n                height=\"18px\"\r\n                src={require(\"../images/trailit_audio.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            )}\r\n          </div>\r\n        </div>\r\n        {subStep && <div\r\n          key={i}\r\n          className={`trailitStepBox trailitSubStepBox ${\r\n            tourStep === i + 1 ? \"active\" : \"\"} ${this.state.showMenu ? \"z-index-2\" : \"\" \r\n          }`}\r\n        >\r\n          <DragHandle />\r\n          <div className=\"trailitStepTitle\">\r\n            Step {i + 1} - {result.title}\r\n          </div>\r\n          {/* <div>\r\n            <button\r\n              type=\"button\"\r\n              onClick={this.handleClickMenu}\r\n              className=\"trailit_dotsButton\"\r\n            >\r\n              <img\r\n                width=\"16px\"\r\n                src={require(\"../images/trailit_dotsPink.png\")}\r\n                alt=\"dots\"\r\n              />\r\n            </button>\r\n            {this.state.showMenu && (\r\n              <div className={`trailit_dotsMenuList`}>\r\n                <button type=\"button\">Edit</button>\r\n                <button type=\"button\">Delete</button>\r\n              </div>\r\n            )}\r\n          </div> */}\r\n        </div>}\r\n        {subStepStatus && tourType=='Make Edit' && <div className=\"trailitAddSubStep\">\r\n          <button type=\"button\" onClick={(e) => this.onClickToAddSubMenu(e, result, (i + 1))}>\r\n            <img\r\n              width=\"10px\"\r\n              src={require(\"../images/imgpsh_fullsize_anim.png\")}\r\n              alt=\"...\"\r\n            />\r\n            Substep\r\n          </button>\r\n        </div>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default sortableElement(SortableItem);\r\n\r\n/**\r\n * Draggable sort list\r\n */\r\nexport const SortableContainer = sortableContainer(({ children }) => {\r\n  return <div>{children}</div>;\r\n});\r\n","/home/savan/Documents/Portfolio/extension/src/css/defaultButton.js",[],"/home/savan/Documents/Portfolio/extension/src/css/videoTour.js",[],"/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailTab.js",["406","407","408"],"import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport $ from 'jquery';\r\nimport { createTrailId } from '../common/axios';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass CreateNewTrailTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            trail_name: '',\r\n            loading: false\r\n        };\r\n    };\r\n        \r\n    clickToAddTrails = (values) => {\r\n        // this.props.form.validateFields((err, values) => {\r\n        //     if (!err) {\r\n                this.setState({loading: true});\r\n                chrome.storage.local.get([\"trail_web_user_tour\", \"userData\"], async function (items) {\r\n                    const result = await createTrailId(items.userData._id, values.trail_name);\r\n                    if(result.status == 200) {\r\n                        this.setState({trail_name: '', loading: false});\r\n                        this.props.onChange(false);\r\n                        chrome.storage.local.set({trail_id: result.data.response[0].trail_id})\r\n                    }\r\n                }.bind(this))\r\n        //     }\r\n        // });\r\n    }\r\n    \r\n    render () {        \r\n        return(\r\n            <React.Fragment>\r\n                <Form name=\"normal_login\" className=\"tr_new_trail_create_form\">\r\n                    <Form.Item\r\n                        name=\"trail_name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input Trail Name',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Enter Trail Name\"\r\n                            className=\"tr_input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.clickToAddTrails} className=\"tr_button\" loading={this.state.loading}>\r\n                            Add Trail\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewTrailTab;","/home/savan/Documents/Portfolio/extension/src/css/audioTour.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/near.js",["409"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Connection } from './connection';\nimport { Contract } from './contract';\nimport { readKeyFile } from './key_stores/unencrypted_file_system_keystore';\nimport { LocalAccountCreator, UrlAccountCreator } from './account_creator';\nimport { InMemoryKeyStore, MergeKeyStore } from './key_stores';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport class Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new BN(config.initialBalance) : new BN('500000000000000000000000000');\n            this.accountCreator = new LocalAccountCreator(new Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     *\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, accountId);\n            yield account.state();\n            return account;\n        });\n    }\n    /**\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new Account(this.connection, accountId);\n        });\n    }\n    /**\n     * @deprecated Use `new nearApi.Contract(yourAccount, contractId, { viewMethods, changeMethods })` instead.\n     * @param contractId\n     * @param options\n     */\n    loadContract(contractId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, options.sender);\n            return new Contract(account, contractId, options);\n        });\n    }\n    /**\n     * @deprecated Use `yourAccount.sendMoney` instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    sendTokens(amount, originator, receiver) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n            const account = new Account(this.connection, originator);\n            const result = yield account.sendMoney(receiver, amount);\n            return result.transaction_outcome.id;\n        });\n    }\n}\n/**\n * Initialize connection to Near network.\n */\nexport function connect(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Try to find extra key in `KeyPath` if provided.\n        if (config.keyPath && config.deps && config.deps.keyStore) {\n            try {\n                const accountKeyFile = yield readKeyFile(config.keyPath);\n                if (accountKeyFile[0]) {\n                    // TODO: Only load key if network ID matches\n                    const keyPair = accountKeyFile[1];\n                    const keyPathStore = new InMemoryKeyStore();\n                    yield keyPathStore.setKey(config.networkId, accountKeyFile[0], keyPair);\n                    if (!config.masterAccount) {\n                        config.masterAccount = accountKeyFile[0];\n                    }\n                    config.deps.keyStore = new MergeKeyStore([config.deps.keyStore, keyPathStore]);\n                    console.log(`Loaded master account ${accountKeyFile[0]} key from ${config.keyPath} with public key = ${keyPair.getPublicKey()}`);\n                }\n            }\n            catch (error) {\n                console.warn(`Failed to load master account key from ${config.keyPath}: ${error}`);\n            }\n        }\n        return new Near(config);\n    });\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/signer.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/account_multisig.js",["410","411","412"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/enums.js",["413","414"],"export class Enum {\n    constructor(properties) {\n        if (Object.keys(properties).length !== 1) {\n            throw new Error('Enum can only take single value');\n        }\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n            this.enum = key;\n        });\n    }\n}\nexport class Assignable {\n    constructor(properties) {\n        Object.keys(properties).map((key) => {\n            this[key] = properties[key];\n        });\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/web.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/json-rpc-provider.js",["415","416","417","418","419","420","421"],"import depd from 'depd';\nimport { Provider } from './provider';\nimport { fetchJson } from '../utils/web';\nimport { TypedError, ErrorContext } from '../utils/errors';\nimport { base_encode } from '../utils/serialize';\nimport { parseRpcError } from '../utils/rpc_errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport { TypedError, ErrorContext };\n/// Keep ids unique across all connections.\nlet _nextId = 123;\nexport class JsonRpcProvider extends Provider {\n    constructor(url) {\n        super();\n        this.connection = { url };\n    }\n    /**\n     * Get the current network (ex. test, beta, etc…)\n     * @returns {Promise<Network>}\n     */\n    getNetwork() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return {\n                name: 'test',\n                chainId: 'test'\n            };\n        });\n    }\n    /**\n     * Gets the RPC's status\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @returns {Promise<NodeStatusResult>}\n     */\n    status() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('status', []);\n        });\n    }\n    /**\n     * Sends a signed transaction to the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#send-transaction-wait-until-done)\n     * @param signedTransaction The signed transaction being sent\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    sendTransaction(signedTransaction) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const bytes = signedTransaction.encode();\n            return this.sendJsonRpc('broadcast_tx_commit', [Buffer.from(bytes).toString('base64')]);\n        });\n    }\n    /**\n     * Gets a transaction's status from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#status)\n     * @param txHash The hash of the transaction\n     * @param accountId The NEAR account that signed the transaction\n     * @returns {Promise<FinalExecutionOutcome>}\n     */\n    txStatus(txHash, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('tx', [base_encode(txHash), accountId]);\n        });\n    }\n    /**\n     * Query the RPC as [shown in the docs](https://docs.nearprotocol.com/docs/interaction/rpc#query)\n     * @param path Path parameter for the RPC (ex. \"contract/my_token\")\n     * @param data Data parameter (ex. \"\", \"AQ4\", or whatever is needed)\n     */\n    query(path, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.sendJsonRpc('query', [path, data]);\n            if (result && result.error) {\n                throw new Error(`Querying ${path} failed: ${result.error}.\\n${JSON.stringify(result, null, 2)}`);\n            }\n            return result;\n        });\n    }\n    /**\n     * Query for block info from the RPC\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#block)\n     */\n    block(blockQuery) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { finality } = blockQuery;\n            let { blockId } = blockQuery;\n            if (typeof blockQuery !== 'object') {\n                const deprecate = depd('JsonRpcProvider.block(blockId)');\n                deprecate('use `block({ blockId })` or `block({ finality })` instead');\n                blockId = blockQuery;\n            }\n            return this.sendJsonRpc('block', { block_id: blockId, finality });\n        });\n    }\n    /**\n     * Queries for details of a specific chunk appending details of receipts and transactions to the same chunk data provided by a block\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#chunk)\n     * @param chunkId Hash of a chunk ID or shard ID\n     * @returns {Promise<ChunkResult>}\n     */\n    chunk(chunkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('chunk', [chunkId]);\n        });\n    }\n    /**\n     * Query validators of the epoch defined by given block id.\n     * See [docs for more info](https://docs.nearprotocol.com/docs/interaction/rpc#validators)\n     * @param blockId Block hash or height, or null for latest.\n     */\n    validators(blockId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.sendJsonRpc('validators', [blockId]);\n        });\n    }\n    /**\n     * Gets EXPERIMENTAL_genesis_config from RPC\n     * @returns {Promise<GenesisConfig>}\n     */\n    experimental_genesisConfig() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_genesis_config', []);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     * @deprecated Use `lightClientProof` instead\n     */\n    experimental_lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const deprecate = depd('JsonRpcProvider.experimental_lightClientProof(request)');\n            deprecate('use `lightClientProof` instead');\n            return yield this.lightClientProof(request);\n        });\n    }\n    /**\n     * Gets light_client_proof from RPC (https://github.com/nearprotocol/NEPs/blob/master/specs/ChainSpec/LightClient.md#light-client-proof)\n     * @returns {Promise<LightClientProof>}\n     */\n    lightClientProof(request) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.sendJsonRpc('EXPERIMENTAL_light_client_proof', request);\n        });\n    }\n    /**\n     * Directly call the RPC specifying the method and params\n     * @param method RPC method\n     * @param params Parameters to the method\n     */\n    sendJsonRpc(method, params) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const request = {\n                method,\n                params,\n                id: (_nextId++),\n                jsonrpc: '2.0'\n            };\n            const response = yield fetchJson(this.connection, JSON.stringify(request));\n            if (response.error) {\n                if (typeof response.error.data === 'object') {\n                    if (typeof response.error.data.error_message === 'string' && typeof response.error.data.error_type === 'string') {\n                        // if error data has error_message and error_type properties, we consider that node returned an error in the old format\n                        throw new TypedError(response.error.data.error_message, response.error.data.error_type);\n                    }\n                    else {\n                        throw parseRpcError(response.error.data);\n                    }\n                }\n                else {\n                    const errorMessage = `[${response.error.code}] ${response.error.message}: ${response.error.data}`;\n                    // NOTE: All this hackery is happening because structured errors not implemented\n                    // TODO: Fix when https://github.com/nearprotocol/nearcore/issues/1839 gets resolved\n                    if (response.error.data === 'Timeout' || errorMessage.includes('Timeout error')) {\n                        throw new TypedError('send_tx_commit has timed out.', 'TimeoutError');\n                    }\n                    else {\n                        throw new TypedError(errorMessage);\n                    }\n                }\n            }\n            return response.result;\n        });\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/format.js",[],"/home/savan/Documents/Portfolio/extension/src/components/signup.js",["422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437"],"import React from 'react';\r\nimport { Form, Upload, Input, Button, Avatar  } from 'antd';\r\nimport Icon, { UploadOutlined } from '@ant-design/icons';\r\nimport axios from 'axios';\r\n\r\nimport { createTrailId } from '../common/axios';\r\nimport { handleFileUpload } from '../common/audAndVidCommon';\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\naxios.defaults.headers.post['Access-Control-Allow-Origin'] = '*';\r\nclass Signup extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: \"\",\r\n      fileLoading: false,\r\n      profileImage: '',\r\n      filename: ''\r\n    }\r\n  }\r\n\r\n  // Antd form reference\r\n  formRef = React.createRef();\r\n  \r\n  onFinishFailed = errorInfo => {\r\n\t\tconsole.log('Failed:', errorInfo);\r\n\t};\r\n  \r\n  /**\r\n   * onClick to submit\r\n  */\r\n  onClickToSubmit = values => {\r\n    // this.formRef.validateFields((err, values) => {\r\n      // if (!err) {\r\n        values = {...values, profileImage: this.state.profileImage};\r\n        axios.post(`${process.env.REACT_APP_MS1_URL}user/register`, values, {withCredentials: true}).then(res => {\r\n        \tif(res.status == 200) {\r\n            const { responseCode, responseMessage } = res.data.data.response;\r\n            \r\n            if(responseCode === 208) {\r\n              this.setState({errors: responseMessage});\r\n              setTimeout(() => {\r\n                this.setState({errors: \"\"});\r\n              }, 3000)\r\n            } else {\r\n              const user_id = res.data.data.response.userProfile.id;\r\n              const trail_name = 'init trail';\r\n              this.setState({profileImage: '', filename: ''});\r\n              // Use user_id to create trail_id in user_tour table\r\n              // createTrailId(user_id, trail_name);\r\n              \r\n              this.props.clickToRedirect('userConfirmation');\r\n            }\r\n        \t}\r\n        })\r\n      // }\r\n    // });\r\n  };\r\n  \r\n  /**\r\n\t * Validate password with regular expression\r\n\t*/\r\n\tvalidateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    \r\n\t\tvar digit = /^(.*[0-9]+.*)$/;\r\n\t\tvar upper = /^(.*[A-Z]+.*)$/;\r\n\t\tvar lower = /^(.*[a-z]+.*  )$/;\r\n    \r\n    if (value && !digit.test(value)) {\r\n\t\t\tcallback('Password must contain one digit');\r\n\t\t}\r\n\r\n\t\tif (value && !upper.test(value)) {\r\n      callback\r\n      ('Password must contain one uppercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && !lower.test(value)) {\r\n\t\t\tcallback('Password must contain one lowercase letter');\r\n\t\t}\r\n\r\n\t\tif (value && value.length <= 8) {\r\n\t\t\tcallback('Password must be 8 digit');\r\n\t\t}\r\n\r\n\t\tif (value && this.state.confirmDirty) {\r\n\t\t\tthis.formRef.validateFields(['confirm'], { force: true });\r\n\t\t}\r\n\r\n\t\tcallback();\r\n\t};\r\n\r\n  render() {    \r\n    return (\r\n      <div className={'trailMain'}>\r\n        <div className=\"tr_wrapper\">\r\n        {this.state.fileLoading && <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../images/loding1.png`)} /><img class=\"ring2\" src={require(`../images/loding2.png`)} /></div>\r\n        </div>}\r\n        <img className=\"logo_login\" src={require('../images/icon129.png')} alt=\"trailit_icon\"/>\r\n          <div className=\"tr_title\">Welcome to the Trailit.</div>\r\n          <div className=\"tr_subtitle\">Enter your details to signup. If you have already signup than \r\n            <a href=\"javascript:;\" onClick={(e) => this.props.clickToRedirect('login')} className=\"tr_link fw_400\">Signin Now</a>\r\n          </div>\r\n          {this.state.errors && <p className=\"tr_error\">{this.state.errors}</p>}\r\n          <div className=\"tr_label\">Signup</div>\r\n          <Form \r\n            ref={ this.formRef }\r\n            name=\"normal_login\"\r\n            onFinish={ this.onClickToSubmit }\r\n            onFinishFailed={ this.onFinishFailed }\r\n          >\r\n            <Form.Item\r\n              name=\"email\"\r\n              rules={[{\r\n                type: 'email',\r\n                message: 'Please enter valid email!',\r\n              },\r\n              {\r\n                required: true,\r\n                message: 'Please enter your email!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('email', {\r\n                  rules: [\r\n                  {\r\n                    type: 'email',\r\n                    message: 'Please enter valid email!',\r\n                  },\r\n                  {\r\n                    required: true,\r\n                    message: 'Please enter your email!',\r\n                  },\r\n                  ],\r\n                })(\r\n                <Input\r\n                  placeholder=\"Enter your email\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input placeholder=\"Enter your email\" className=\"tr_input\" />\r\n            </Form.Item>\r\n            <Form.Item\r\n              name=\"password\"\r\n              rules={[{\r\n                required: true,\r\n                message: 'Please input your password!',\r\n              }]}\r\n            >\r\n              {/* {getFieldDecorator('password', {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                  }\r\n                ],\r\n              })(\r\n                <Input\r\n                  type=\"password\"\r\n                  placeholder=\"Password\" className=\"tr_input\"\r\n                />,\r\n              )} */}\r\n              <Input\r\n                type=\"password\"\r\n                placeholder=\"Password\" className=\"tr_input\"\r\n              />\r\n            </Form.Item>\r\n            <Form.Item>\r\n              <Button type=\"primary\" htmlType=\"submit\" className=\"tr_button\" onClick={this.onClickToSubmit}>\r\n                Signup Now\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;","/home/savan/Documents/Portfolio/extension/src/components/userProfile.js",["438","439","440","441","442","443","444","445","446","447","448","449","450","451"],"import React from \"react\";\r\nimport _ from 'lodash';\r\n\r\nimport { socket } from \"../common/socket\";\r\nimport { handleFileUpload } from \"../common/audAndVidCommon\";\r\nimport { wallet, getAddress } from \"../common/celo\";\r\nimport { getBalance } from \"../code/getBalance\";\r\n\r\n// import BgImage from \"../images/trailit_bx_img.png\";\r\nimport {\r\n  getAllNotification,\r\n  getUserSingleTrail,\r\n  getAllUser,\r\n  getAllCategory,\r\n  UpdateProfilePicture,\r\n} from \"../common/axios\";\r\nimport {\r\n  UserProfileEdit,\r\n  UserProfileList,\r\n  UserProfileAdd,\r\n  UserCUSD,\r\n} from \"./User\";\r\nimport $ from \"jquery\";\r\n\r\nimport \"../index.css\";\r\n\r\nconst chrome = window.chrome;\r\n// let bkg = chrome.extension.getBackgroundPage();\r\n\r\nclass UserProfile extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      reload: false,\r\n      response: false,\r\n      balance: \"0.00\",\r\n      address: \"0.00\",\r\n      toAddress: \"\",\r\n      amount: \"\",\r\n      sendLoader: false,\r\n      tab: \"logout\",\r\n      notificationData: [],\r\n      myTrilsListData: [],\r\n      followerLength: 0,\r\n      showMenu: false,\r\n      getOneEditRow: {},\r\n      addRaw: {},\r\n      listTitle: \"My Trails\",\r\n      editTrail: false,\r\n      categoryList: [],\r\n      isLoading: false,\r\n      profileImage: \"\",\r\n      slideBalance: false,\r\n      privateKey: '',\r\n      nearBalance: 0\r\n    };\r\n  }\r\n\r\n  // Get NEAR account balance\r\n  getNearAccountBalance() {\r\n\r\n    // Get NEAR balance of user\r\n    getBalance()\r\n    .then(res => {\r\n      this.setState({ nearBalance: res });\r\n    })\r\n    .catch();\r\n  };\r\n  \r\n  async componentDidMount() {\r\n    let balance = await wallet.balance();\r\n    let address = await getAddress(\r\n      \"0x8920565d5Bc8cf942eD2E18df4B71b8695a22D9B\"\r\n    );\r\n    this.setState({ isLoading: true });\r\n    chrome.storage.local.get(\r\n      [\"auth_Tokan\", \"userData\", \"reload\", 'keypair'],\r\n      async function (items) {        \r\n        // // Get NEAR balance of user\r\n        this.getNearAccountBalance();\r\n        // getBalance()\r\n        //   .then(res => {\r\n        //     console.log('res', res);\r\n        //     this.setState({ nearBalance: res });\r\n        //   })\r\n        //   .catch();\r\n          \r\n        this.setState({ \r\n          profileImage: items.userData.profileImage,\r\n          privateKey: items.keypair,\r\n          // nearBalance: balance\r\n        });\r\n        \r\n        let followerLength;\r\n        socket.emit(\"userId\", items.userData._id);\r\n        socket.on(\"followerList\", (data) => {\r\n          followerLength = data.length;\r\n          this.setState({\r\n            email: items.userData.email,\r\n            balance: balance,\r\n            address,\r\n            followerLength,\r\n          });\r\n        });\r\n\r\n        const data = {\r\n          user_id: items.userData._id,\r\n          flag: \"unread\",\r\n        };\r\n        \r\n        const result = await getUserSingleTrail(items.userData._id);\r\n        \r\n        if (result.status == 200) {\r\n          this.setState({\r\n            myTrilsListData: result.data.response,\r\n            getOneEditRow: {},\r\n            addRaw: {},\r\n          });\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n\r\n        getAllNotification(data).then(async (res) => {\r\n          const data = res.data.response;\r\n\r\n          if (data.result && _.isArray(data.result) && data.result.length > 0) {\r\n            let user = await getAllUser();\r\n\r\n            let filterdFollowers = data.result.map((el) => {\r\n              for (let i = 0; i < user.data.data.response.length; i++) {\r\n                if (el.creator_id === user.data.data.response[i]._id) {\r\n                  return {\r\n                    email: user.data.data.response[i].email,\r\n                    pictures: user.data.data.response[i].pictures,\r\n                    creator_id: user.data.data.response[i]._id,\r\n                    currUserId: el.user_id,\r\n                    created: el.created,\r\n                  };\r\n                }\r\n              }\r\n            });\r\n\r\n            filterdFollowers = filterdFollowers.sort((a, b) => {\r\n              return b.created - a.created;\r\n            });\r\n\r\n            // Update notificationData state\r\n            this.setState({\r\n              notificationData: filterdFollowers,\r\n              getOneEditRow: {},\r\n              addRaw: {},\r\n            });\r\n          }\r\n        });\r\n\r\n        this.setState({\r\n          email: items.userData.email,\r\n          balance: balance,\r\n          address,\r\n        });\r\n\r\n        chrome.storage.local.set({ reload: false });\r\n\r\n        if (items.reload) {\r\n          chrome.tabs.query(\r\n            { active: true, lastFocusedWindow: true },\r\n            (tabs) => {\r\n              chrome.tabs.reload();\r\n            }\r\n          );\r\n        }\r\n      }.bind(this)\r\n    );\r\n    \r\n    // Get all category function\r\n    let { data, status } = await getAllCategory();\r\n    if (status === 200) {\r\n      if (data.response && data.response.result) {\r\n        this.setState({ categoryList: data.response.result });\r\n\r\n      } else {\r\n        this.setState({ categoryList: [] });\r\n      }\r\n    }\r\n    \r\n    if (document.querySelector(\"#my-extension-defaultroot\")) {\r\n      document.querySelector(\"#my-extension-defaultroot\").style.display =\r\n        \"none\";\r\n    }\r\n\r\n    if (document.querySelector(\"#my-extension-root-flip\")) {\r\n      document.querySelector(\"#my-extension-root-flip\").style.display = \"none\";\r\n    }\r\n  }\r\n\r\n  onClickToList = (listTitle) => {\r\n    chrome.storage.local.get(\r\n      [\"auth_Tokan\", \"userData\", \"reload\"],\r\n      async function (items) {\r\n        const result = await getUserSingleTrail(items.userData._id);\r\n\r\n        if (result.status == 200) {\r\n          this.setState({ myTrilsListData: result.data.response });\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    this.setState({ listTitle });\r\n  };\r\n\r\n  onChangeTrailEdit = (editTrail) => {\r\n    this.setState({ editTrail, slideBalance: false });\r\n  };\r\n\r\n  onClickToCreateTrail = (e) => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ listTitle: \"My Trails\", slideBalance: false});\r\n    $(\"body\").attr(\"class\", \"trailit_EditTrailShow\");\r\n  };\r\n\r\n  getEditData = (res) => {\r\n    this.setState({ getOneEditRow: res });\r\n  };\r\n\r\n  handleClickMenu = (e, status) => {\r\n    e.stopPropagation();\r\n    this.setState({ showMenu: status });\r\n  };\r\n\r\n  onAddRaw = (data) => {\r\n    this.setState({ addRaw: data });\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ isLoading: true });\r\n\r\n    handleFileUpload(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          profileImage: data.response.result.fileUrl,\r\n        });\r\n\r\n        chrome.storage.local.get(\r\n          [\"auth_Tokan\", \"userData\", \"reload\"],\r\n          async function (items) {\r\n            try {\r\n              let r = await UpdateProfilePicture({\r\n                email: items.userData.email,\r\n                profileImage: data.response.result.fileUrl,\r\n              });\r\n\r\n              if (r.status == 200) {\r\n                chrome.storage.local.set({ userData: r.data.data.response });\r\n              }\r\n\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            } catch (e) {\r\n              this.setState({\r\n                isLoading: false,\r\n              });\r\n            }\r\n          }.bind(this)\r\n        );\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ isLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { tourType } = this.state;\r\n    const file = e.target.files[0];\r\n    const fileType = file.type.split(\"/\");\r\n    e.target.value = null;\r\n\r\n    // Upload file function\r\n    this.uploadFile(file);\r\n  };\r\n\r\n  onSlide = () => {\r\n    this.onChangeTrailEdit(false);\r\n    this.setState({ slideBalance: true });\r\n    $(\"body\").attr(\"class\", \"trailit_cUSDForm\");\r\n  };\r\n\r\n  onHideSlide = () => {\r\n    // Get NEAR balance of user\r\n    this.getNearAccountBalance();\r\n\r\n    this.setState({ slideBalance: false });    \r\n    $(\"body\").attr(\"class\", \"\");\r\n  };\r\n\r\n  render() {\r\n    // console.log('getBalance', getBalance());\r\n    const {\r\n      isLoading,\r\n      listTitle,\r\n      myTrilsListData,\r\n      categoryList,\r\n      notificationData,\r\n      editTrail,\r\n      getOneEditRow,\r\n      addRaw,\r\n\t    profileImage,\r\n      slideBalance,\r\n      nearBalance\r\n    } = this.state;\r\n    \r\n    let list = [];\r\n    if (listTitle == \"My Trails\") {\r\n      list = myTrilsListData;\r\n    } else if (listTitle == \"Followed\") {\r\n      list = notificationData;\r\n    }\r\n\r\n    return (\r\n      <div className=\"trailit_userPanal trailit_Big\">\r\n        {editTrail && (\r\n          <UserProfileEdit\r\n            categoryList={categoryList}\r\n            data={getOneEditRow}\r\n            getEditData={this.getEditData}\r\n          />\r\n        )}\r\n        {!editTrail && !slideBalance && (\r\n          <UserProfileAdd onAddRaw={this.onAddRaw} addRaw={addRaw} />\r\n        )}\r\n\t\t    {slideBalance && <UserCUSD privateKey={this.state.privateKey} onHideSlide={ this.onHideSlide } />}\r\n        {isLoading && (\r\n          <div className=\"trailit_loaderBox\">\r\n            <div class=\"trial_spinner\">\r\n              <img class=\"ring1\" src={require(`../images/loding1.png`)} />\r\n              <img class=\"ring2\" src={require(`../images/loding2.png`)} />\r\n            </div>\r\n          </div>\r\n        )}\r\n        <div className=\"trailit_userPanalRightBox\">\r\n          <div className=\"trailit_userPanalHeaderBox\">\r\n            <div className=\"trailit_userIMG\">\r\n              <img\r\n                src={\r\n                  profileImage == \"\"\r\n                    ? require(\"../images/user.png\")\r\n                    : this.state.profileImage\r\n                }\r\n                alt=\"user\"\r\n              />\r\n              <input type=\"file\" name=\"media\" onChange={this.handleChange} />\r\n              <span className=\"trailitUploadICon\">\r\n                <img src={require(\"../images/edit.svg\")} alt=\"..\" />\r\n              </span>\r\n            </div>\r\n            <div className=\"trailit_userBxs\">\r\n              <div className=\"trailit_userName trailit_ellips\">Jon Jones</div>\r\n              <div className=\"trailit_userSubName trailit_ellips\">\r\n                Founder, Creator, Designer\r\n              </div>\r\n              <div className=\"trailit_userName cursor_pointer\" onClick={this.onSlide}>\r\n                {this.state.nearBalance} <span className=\"trailit_userSubName\"> NEAR</span>\r\n              </div>\r\n              <div className=\"trailit_3Boxs\">\r\n                <div className=\"trailit_3Boxs1\">\r\n                  <div className=\"trailit_userName\">100k</div>\r\n                  <div className=\"trailit_userSubName\">Likes</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs2\">\r\n                  <div className=\"trailit_userName\">5.2k</div>\r\n                  <div className=\"trailit_userSubName\">Followers</div>\r\n                </div>\r\n                <div className=\"trailit_3Boxs3\">\r\n                  <div className=\"trailit_userName\">120</div>\r\n                  <div className=\"trailit_userSubName\">Following</div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div\r\n              className=\"trailit_dotsMenuMain\"\r\n              onMouseLeave={(e) => this.handleClickMenu(e, false)}\r\n            >\r\n              <div className=\"trailit_dotsMenu\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={(e) => this.handleClickMenu(e, true)}\r\n                  className=\"trailit_dotsButton\"\r\n                >\r\n                  <img src={require(\"../images/dots.svg\")} alt=\"dots\" />\r\n                </button>\r\n                {this.state.showMenu && (\r\n                  <div className=\"trailit_dotsMenuList\">\r\n                    <button type=\"button\">Settings</button>\r\n                    <button type=\"button\">Notifications</button>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => {\r\n                        this.setState({ showMenu: false });\r\n                        this.props.onClickToLogout();\r\n                      }}\r\n                    >\r\n                      Logout\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"trailit_userPanalContentBox\">\r\n            <UserProfileList\r\n              profileImage={profileImage}\r\n              title={listTitle}\r\n              list={list}\r\n              getOneEditRow={getOneEditRow}\r\n              addRaw={addRaw}\r\n              onEdit={this.onChangeTrailEdit}\r\n              getRow={this.getEditData}\r\n              isLoading={false}\r\n            />\r\n            <div className=\"trailit_userPanalFooterBox\">\r\n              {listTitle == \"My Trails\" && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"trailit_btnPink\"\r\n                  onClick={(e) => this.onClickToList(\"Followed\")}\r\n                >\r\n                  Followed\r\n                </button>\r\n              )}\r\n              {listTitle == \"Followed\" && (\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"trailit_btnPink\"\r\n                  onClick={(e) => this.onClickToList(\"My Trails\")}\r\n                >\r\n                  My Trails\r\n                </button>\r\n              )}\r\n              <button\r\n                type=\"button\"\r\n                className=\"trailit_btnPink\"\r\n                onClick={this.onClickToCreateTrail}\r\n              >\r\n                Create Trail\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfile;\r\n","/home/savan/Documents/Portfolio/extension/src/code/getBalance.js",["452"],"/home/savan/Documents/Portfolio/extension/src/components/User/userProfileEdit.js",["453","454","455","456","457","458","459","460","461","462","463","464","465"],"import React, { PureComponent } from 'react';\r\nimport $ from 'jquery';\r\n\r\nimport { isValidated } from './validation';\r\nimport { UpdateSingleTrail } from '../../common/axios';\r\nimport { handleFileUpload } from '../../common/audAndVidCommon';\r\n\r\nclass UserProfileEdit extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            categoryList: [],\r\n            cover_image_url: \"\",\r\n            trail_categor_id: '',\r\n            trail_description: '',\r\n            trail_id: '',\r\n            trail_title: '',\r\n            trail_user_status: '',\r\n            cover_image_name: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false,\r\n            fileLoading: false\r\n        }\r\n    }\r\n    \r\n    async componentDidMount() {\r\n        // let categoryResult = await getAllCategory();\r\n        // if(categoryResult.status == 200) {\r\n        //     this.setState({categoryList: categoryResult.data.response});\r\n        // }\r\n        \r\n        const { data, categoryList } = this.props;\r\n        \r\n        this.setState({\r\n            categoryList: categoryList,\r\n            cover_image_url: data.cover_image_url,\r\n            trail_categor_id: data.trail_categor_id,\r\n            trail_description: data.trail_description,\r\n            trail_id: data.trail_id,\r\n            trail_title: data.trail_name,\r\n            trail_user_status: data.trail_user_status,\r\n        });\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps, prevState) {\r\n        const { data, categoryList } = nextProps;\r\n        \r\n        this.setState({\r\n            categoryList: categoryList,\r\n            cover_image_url: data.cover_image_url,\r\n            trail_categor_id: data.trail_categor_id,\r\n            trail_description: data.trail_description,\r\n            trail_id: data.trail_id,\r\n            trail_title: data.trail_name,\r\n            trail_user_status: data.trail_user_status,\r\n        });\r\n    }\r\n    \r\n    onChangeInput = (e) => {\r\n        this.setState({[e.target.name]: e.target.value}, () => {\r\n            const { errors, isValid } = isValidated(this.state);\r\n            this.setState({errors});\r\n            // if(this.state.isSubmit) {\r\n            // }\r\n        });\r\n    }\r\n    \r\n    uploadFile = (file) => {\r\n        this.setState({ isLoading: true });\r\n        handleFileUpload(file)\r\n            .then(response => {\r\n\t\t\t\treturn response;\r\n\t\t\t})\r\n            .then(res => {\r\n\t\t\t\treturn res.data;\r\n\t\t\t})\r\n            .then(data => {\r\n                this.setState({\r\n                    cover_image_url: data.response.result.fileUrl,\r\n                    cover_image_name: file.name,\r\n                    isLoading: false\r\n                });\r\n\t\t\t})\r\n            .catch(err => {\r\n\t\t\t\tthis.setState({ isLoading: false });\r\n\t\t\t\tconsole.log('Error fetching profile ' + err);\r\n\t\t\t});\r\n    };\r\n    \r\n    handleChange = (e) => {\r\n        const { tourType } = this.state;\r\n        const file = e.target.files[0];\r\n\t\tconst fileType = file.type.split('/');\r\n        e.target.value = null;\r\n        // Upload file function\r\n        this.uploadFile(file);\r\n\t};\r\n    \r\n    onCheckedUserPrivate = async  (e) => {\r\n        if(e.target.value == null || e.target.value == \"\") {\r\n            e.target.value = \"public\";\r\n        }\r\n                \r\n        let trail_user_status = (e.target.value==\"public\")?'private':'public';\r\n        \r\n        await this.setState({trail_user_status: trail_user_status}, () => {\r\n            console.log(\"trail_user_statusfffffffff\", this.state.trail_user_status);\r\n        })\r\n    }\r\n    \r\n    onChangeSelect = async (e) => {\r\n        await this.setState({[e.target.name]: e.target.value});\r\n    }\r\n    \r\n    onClear = () => {\r\n        this.setState({\r\n            categoryList: [],\r\n            cover_image_url: \"\",\r\n            trail_categor_id: '',\r\n            trail_description: '',\r\n            trail_id: '',\r\n            trail_title: '',\r\n            trail_user_status: '',\r\n            cover_image_name: '',\r\n            errors: {},\r\n            isSubmit: false,\r\n            isLoading: false,\r\n            fileLoading: false\r\n        });\r\n\r\n        $('body').attr('class', '');\r\n    }\r\n    \r\n    onClickToSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const { errors, isValid } = isValidated(this.state);\r\n        \r\n        if(!isValid) {\r\n            this.setState({errors})\r\n        } else {\r\n            this.setState({isSubmit: true, isLoading: true});\r\n\r\n            const result = await UpdateSingleTrail(this.state.trail_id, this.state);\r\n            this.setState({isLoading: false});\r\n            if(result.status == 200) {\r\n                if(result.data.response.statusCode == 400) {\r\n                    this.setState({errors: {trail_already_exist: result.data.response.result}})\r\n                    setTimeout(() => {\r\n                        this.setState({errors: {}});\r\n                    }, 2000);\r\n                } else {\r\n                    this.props.getEditData(result.data.response[0]);\r\n                    this.onClear();\r\n                    $('body').attr('class', '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        const { isLoading, cover_image_url, cover_image_name, trail_categor_id, trail_description, trail_id, trail_title, trail_user_status, errors } = this.state;\r\n        const { categoryList } = this.props;\r\n        \r\n        return(\r\n            <div className=\"trailit_userPanalLeftBox\">\r\n                {isLoading && <div className=\"trailit_loaderBox\">\r\n                   <div class=\"trial_spinner\"><img class=\"ring1\" src={require(`../../images/loding1.png`)} /><img class=\"ring2\" src={require(`../../images/loding2.png`)} /></div>\r\n                </div>}\r\n                <div className=\"trailit_editZTitle trialit_mb4\">Edit Trail</div>\r\n                <form>\r\n                    {errors.trail_already_exist!==undefined && <div className=\"trailit-already-exist-error\">{errors.trail_already_exist}</div>}\r\n                    <div className=\"d-block\">\r\n                        <input type=\"text\" className=\"trailit_inputTitle trailit_mb3\" placeholder=\"Trail Title\" name=\"trail_title\" value={trail_title} onChange={this.onChangeInput}/>\r\n                        {errors.trail_title !== undefined && <div className=\"trailit-validation-error\">{errors.trail_title}</div>}\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                        <textarea rows=\"5\" className=\"trailit_inputIntro trailit_mb3\" placeholder=\"Type Introduction here ...\" name=\"trail_description\" value={trail_description} onChange={this.onChangeInput}></textarea>\r\n                    </div>\r\n                    <div className=\"d-block\">\r\n                        <select className=\"trailit_selectBox trailit_mb3\" name=\"trail_categor_id\" value={trail_categor_id} onChange={this.onChangeSelect}>\r\n                            <option value=\"\">Select your category</option>\r\n                            {categoryList.map(res => (<option value={parseInt(res.trail_category_id)}>{res.trail_category_name}</option>))}\r\n                        </select>\r\n                    </div>\r\n                    <label className=\"trailit_12700 d-block trailit_mb3\">COVER IMAGE</label>\r\n                    <label className=\"trailit_12500 d-block trialit_mb1\">{(cover_image_name==\"\" || cover_image_url==\"\")?`Choose a photo that represents your trail. Max 8MB.`:(cover_image_name?cover_image_name:cover_image_url)}</label>\r\n                    <div className=\"trailit_uploadImage trialit_mb4\">\r\n                        <input type=\"file\" name=\"media\" onChange={this.handleChange}/>\r\n                        <label className=\"d-block\">Upload Image</label>\r\n                    </div>\r\n                    <label className=\"trailit_12700 d-block trailit_mb3\">ADD MORE CONTENT</label>\r\n                    {/* <div className=\"d-flex\">\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/image.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Image</span>\r\n                        </label>\r\n                        </div>\r\n                        <div className=\"trailit_addMoreImage\">\r\n                        <input type=\"file\"/>\r\n                        <label>\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Video</span>\r\n                        </label>\r\n                        </div>\r\n                        <button type=\"button\" className=\"trailit_addMoreOther\">\r\n                        <img src={require(\"../../images/video.svg\")} alt=\"image\"/>\r\n                        <span className=\"d-block\">Other</span>\r\n                        </button>\r\n                    </div> */}\r\n                    {/* <ul className=\"trailit_HashTagsList\">\r\n                        <li>Visual Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                        <li>Concept Arts <img src={require(\"../../images/close.svg\")} alt=\"image\"/></li>\r\n                    </ul>\r\n                    <div>\r\n                        <input type=\"text\" className=\"trailit_inputHashTags trailit_mb3\" placeholder=\"Hashtags\"/>\r\n                    </div> */}\r\n                    <div className=\"d-block trailit_checkbox trailit_mb3\">\r\n                        <input type=\"checkbox\" name=\"\" value={trail_user_status} checked={trail_user_status=='private'} onClick={this.onCheckedUserPrivate}/>\r\n                        <span></span>\r\n                        <label>Make this trail private</label>\r\n                        <button type=\"button\" className=\"trailit_deleteIcon\"><img src={require(\"../../images/delete.svg\")} alt=\"delete\"/></button>\r\n                    </div>\r\n                    <div className=\"trailit_userPanalFooterBox\">\r\n                        <button type=\"button\" className=\"trailit_btnGray\" onClick={this.onClear}>Cancel</button>\r\n                        <button type=\"button\" className=\"trailit_btnPink\" onClick={this.onClickToSubmit}>Save</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileEdit;","/home/savan/Documents/Portfolio/extension/src/components/User/validation.js",["466"],"import _ from 'lodash';\r\n\r\nexport const isValidated = (data) => {\r\n    const errors = {};\r\n    let isValid = false;\r\n\r\n    if(_.isEmpty(data.trail_title)) {\r\n        errors.trail_title = \"Please enter trail title\";\r\n    } else {\r\n        delete errors.trail_title;\r\n    }\r\n    \r\n    return {\r\n        errors,\r\n        isValid: _.isEmpty(errors)\r\n    }\r\n}","/home/savan/Documents/Portfolio/extension/src/common/SendTipForm.js",[],"/home/savan/Documents/Portfolio/extension/src/components/common.js",["467","468","469"],"import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { CloudUploadOutlined } from '@ant-design/icons';\r\n\r\nimport TextEditor from '../common/textEditor';\r\nimport { handleFileUpload } from '../common/audAndVidCommon';\r\n\r\nexport function collectionHas(a, b) {\r\n    //helper function (see below)\r\n    for (var i = 0, len = a.length; i < len; i++) {\r\n        if (a[i] == b) return true;\r\n    }\r\n    return false;\r\n}\r\n\r\nexport function findParentBySelector(elm, selector) {\r\n    var all = document.querySelectorAll(selector);\r\n    var cur = elm.parentNode;\r\n    while (cur && !collectionHas(all, cur)) {\r\n        //keep going up until you find a match\r\n        cur = cur.parentNode; //go up\r\n    }\r\n    return cur; //will return null if not found\r\n}\r\n\r\nexport function queryParentElement(el, selector) {\r\n    el = el;\r\n    let isIDSelector = selector.indexOf(\"#\") === 0;\r\n\r\n    if (selector.indexOf(\".\") === 0 || selector.indexOf(\"#\") === 0) {\r\n        selector = selector.slice(1);\r\n    }\r\n\r\n    while (el) {\r\n        if (isIDSelector) {\r\n            if (el.id === selector) {\r\n                return el;\r\n            }\r\n        } else if (el.classList.contains(selector)) {\r\n            return el;\r\n        }\r\n        el = el.parentElement;\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function urlStingCheck(url, array) {\r\n    let status = false;\r\n    array.map((res) => {\r\n        if (url.includes(res) && !url.includes(\"/#/\")) {\r\n            status = true;\r\n        }\r\n    });\r\n\r\n    return status;\r\n}\r\n\r\n// export function getScrollParent(node) {\r\n//     if (node == null) {\r\n//       return null;\r\n//     }\r\n\r\n//     if (node.scrollHeight > node.clientHeight) {\r\n//       return node;\r\n//     } else {\r\n//       return getScrollParent(node.parentNode);\r\n//     }\r\n//   }\r\n\r\nexport const getScrollParent = (node) => {\r\n    const regex = /(auto|scroll)/;\r\n    const parents = (_node, ps) => {\r\n        if (_node.parentNode === null) {\r\n            return ps;\r\n        }\r\n        return parents(_node.parentNode, ps.concat([_node]));\r\n    };\r\n    \r\n    const style = (_node, prop) =>\r\n        getComputedStyle(_node, null).getPropertyValue(prop);\r\n    const overflow = (_node) =>\r\n        style(_node, \"overflow\") +\r\n        style(_node, \"overflow-y\") +\r\n        style(_node, \"overflow-x\");\r\n    const scroll = (_node) => regex.test(overflow(_node));\r\n\r\n    /* eslint-disable consistent-return */\r\n    const scrollParent = (_node) => {\r\n        if (!(_node instanceof HTMLElement || _node instanceof SVGElement)) {\r\n            return;\r\n        }\r\n\r\n        const ps = parents(_node.parentNode, []);\r\n\r\n        for (let i = 0; i < ps.length; i += 1) {\r\n            if (scroll(ps[i])) {\r\n                return ps[i];\r\n            }\r\n        }\r\n\r\n        return document.scrollingElement || document.documentElement;\r\n    };\r\n\r\n    return scrollParent(node);\r\n    /* eslint-enable consistent-return */\r\n};\r\n\r\n// Common file upload function\r\nexport const commonFileUploadFunction = (file) => {\r\n    return handleFileUpload(file);\r\n};\r\n\r\n// Handler file change function\r\nexport const handleFileChange = (e, trailStatus, uploadFile) => {\r\n    const file = e.target.files[0];\r\n    const fileType = file.type.split('/');\r\n    e.target.value = null;\r\n\r\n    if (trailStatus === 'audio' && fileType[1] === 'mp4') {\r\n\r\n        // Upload file function\r\n        uploadFile(file);\r\n    } else if (trailStatus !== fileType[0]) {\r\n        // Return alert\r\n        return alert(`Please upload ${trailStatus} file!`);\r\n    } else if (trailStatus === 'video' && fileType[1] === 'x-matroska') {\r\n\r\n        // Return alert\r\n        return alert('MKV format suport coming soon.');\r\n    } else {\r\n\r\n        // Upload file function\r\n        uploadFile(file);\r\n    }\r\n};\r\n\r\n// On cancel click handler function\r\n// export const onCancelClickHandler = (onCancel, target, count) => {\r\n//     document.designMode = 'off';\r\n//     onCancel(target, count);\r\n// };\r\n\r\n// Tooltip form selection function\r\nexport const commonTooltipFormFunction = (\r\n    trailStatus, \r\n    title, \r\n    fileName, \r\n    fileLoading, \r\n    onClickToVisiblePopover, \r\n    onClickToSubmit, \r\n    onChangeToInput, \r\n    handleChange\r\n) => {\r\n    const buttons = (\r\n        <div className=\"trailButtonsWrapper\">\r\n            <Button type=\"primary\" onClick={onClickToVisiblePopover}>\r\n                Cancel\r\n            </Button>\r\n\r\n            {/* { \r\n                (\r\n                    trailStatus === 'audio' || \r\n                    trailStatus === 'video' || \r\n                    trailStatus === 'image'\r\n                )\r\n                    && web_url !== '' && fileAddStatus &&\r\n                        <Button type=\"primary\">\r\n                            Preview\r\n                        </Button>\r\n            } */}\r\n\r\n            <button\r\n                disabled={ fileLoading }\r\n                onClick={ onClickToSubmit }\r\n                value=\"ADD\"\r\n                className=\"ant-btn ant-btn-primary trail_add_step_btn\"\r\n            >\r\n                ADD STEP\r\n            </button>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"pl-4 trail_video_frm\">\r\n                <input type=\"text\" name=\"title\" value={title} placeholder={`Enter ${trailStatus} Title`} className=\"ant-input mb-2\" onChange={onChangeToInput} autoComplete=\"off\" />\r\n                <input type=\"text\" name=\"web_url\" value={fileName} onChange={onChangeToInput} placeholder={`Add ${trailStatus} URL`} className=\"ant-input mb-2\" />\r\n\r\n                <div className=\"upload_bx\">\r\n                    <div className=\"ant-upload\">    \r\n                        <p className=\"ant-upload-drag-icon\">\r\n                            {fileLoading && <div class=\"trial_spinner\">\r\n                                <img class=\"ring1\" src={require(`../images/loding1.png`)} alt=\"ring1\" />\r\n                                <img class=\"ring2\" src={require(`../images/loding2.png`)} alt=\"ring2\" />\r\n                            </div>}\r\n                            {!fileLoading && <CloudUploadOutlined />}\r\n\r\n                        </p>\r\n                        <p className=\"ant-upload-text\">Upload {trailStatus}</p>\r\n                    </div>\r\n                    <input style={{ padding: 0 }} type=\"file\" name=\"media\" onChange={handleChange} />\r\n                </div>\r\n\r\n                {buttons}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n// Common initial render function\r\nexport const commonInitialRenderFunction = (\r\n    trailStatus, \r\n    title,\r\n    description,\r\n    onTitleChangeHandler, \r\n    onDescriptionChangeHandler, \r\n    onClickToVisiblePopover, \r\n    onClickToSubmit, \r\n    selectedTooltipForm\r\n) => {\r\n    let tooltipForm = null;\r\n    \r\n    // Select form according button clicked\r\n    if (trailStatus === \"text\") {\r\n        tooltipForm = (\r\n            <Form\r\n                onFinish={ onClickToSubmit }\r\n                initialValues={ {\r\n                    title,\r\n                    description\r\n                } }\r\n            >\r\n                <Form.Item\r\n                    name=\"title\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please enter title!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input\r\n                        type=\"text\"\r\n                        onChange={ onTitleChangeHandler }\r\n                        placeholder=\"Enter Title\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"description\"\r\n                    rules={[{ required: true, message: \"Please Enter description!\" }]}\r\n                >\r\n                    <TextEditor \r\n                        onChange={ onDescriptionChangeHandler }\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item className=\"m-0\">\r\n                    <div className=\"trailButtonsWrapper\">\r\n                        <Button type=\"primary\" onClick={ onClickToVisiblePopover }>\r\n                            Cancel\r\n                        </Button>\r\n\r\n                        {/* { title !== '' && description !== '' &&\r\n                            <Button type=\"primary\">\r\n                                Preview\r\n                            </Button>\r\n                         } */}\r\n\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Add Step\r\n                        </Button>\r\n                    </div>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    } else if (trailStatus === \"audio\") {\r\n        tooltipForm = selectedTooltipForm();\r\n    } else if (trailStatus === \"video\") {\r\n        tooltipForm = selectedTooltipForm();\r\n    } else if (trailStatus === \"image\") {\r\n        tooltipForm = selectedTooltipForm();\r\n    }\r\n    \r\n    return tooltipForm;\r\n};\r\n\r\n// Selecting text, audio, video and image function\r\nexport const commonTypeSelectonButton = (\r\n    trailStatus,\r\n    onSelectOption,\r\n    tooltipForm,\r\n    fileName,\r\n    fileLoading\r\n) => {\r\n    \r\n    return (\r\n        <div className=\"tr_select_type\">\r\n            <div className=\"tr_icon_grp\">\r\n                <button\r\n                    className={trailStatus === \"text\" ? \"tr_active\" : \"\"}\r\n                    onClick={() => onSelectOption(\"text\")}\r\n                    // disabled={ (trailStatus !== 'text' && fileName !== '') || fileLoading }\r\n                >\r\n                    <img alt=\"Text_tooltip\" src={require(`../images/text.png`)} />\r\n                </button>\r\n                {!document.URL.includes(\"https://twitter.com\") && (\r\n                    <React.Fragment>\r\n                        <button\r\n                            id=\"audio_tooltip\"\r\n                            className={trailStatus === \"audio\" ? \"tr_active\" : \"\"}\r\n                            onClick={() => onSelectOption(\"audio\")}\r\n                            // disabled={ (trailStatus !== 'audio' && fileName !== '') || fileLoading }\r\n                        >\r\n                            <img alt=\"audio_tooltip\" src={require(`../images/audio.png`)} />\r\n                        </button>\r\n                        <button\r\n                            id=\"video_tooltip\"\r\n                            className={trailStatus === \"video\" ? \"tr_active\" : \"\"}\r\n                            onClick={() => onSelectOption(\"video\")}\r\n                            // disabled={ (trailStatus !== 'video' && fileName !== '') || fileLoading }\r\n                        >\r\n                            <img alt=\"video_tooltip\" src={require(`../images/video.png`)} />\r\n                        </button>\r\n                    </React.Fragment>\r\n                )}\r\n                <button\r\n                    id=\"picture_tooltip\"\r\n                    className={trailStatus === \"image\" ? \"tr_active\" : \"\"}\r\n                    onClick={() => onSelectOption(\"image\")}\r\n                    // disabled={ (trailStatus !== 'image' && fileName !== '') || fileLoading }\r\n                >\r\n                    <img alt=\"image_tooltip\" src={require(`../images/photo.png`)} />\r\n                </button>\r\n            </div>\r\n        \r\n            {tooltipForm}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport const getUrlVars = () => {\r\n    var vars = [], hash;\r\n    var hashes = window.location.href.slice(window.location.href.indexOf('?') + 1).split('&');\r\n    for(var i = 0; i < hashes.length; i++)\r\n    {\r\n        hash = hashes[i].split('=');\r\n        vars.push(hash[0]);\r\n        vars[hash[0]] = hash[1];\r\n    }\r\n    return vars;\r\n}","/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailModal.js",["470","471","472","473","474","475","476","477","478","479","480"],"/home/savan/Documents/Portfolio/extension/src/css/myExtensionRootFlip.js",[],"/home/savan/Documents/Portfolio/extension/src/code/sendtx.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/account_creator.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/provider.js",[],"/home/savan/Documents/Portfolio/extension/src/components/videoTour.js",["481","482","483","484","485","486"],"/home/savan/Documents/Portfolio/extension/src/css/main.js",[],"/home/savan/Documents/Portfolio/extension/src/components/mySubscription.js",["487","488","489","490","491","492","493"],"import React from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport $ from 'jquery';\r\n\r\nimport { getAllUser } from '../common/axios'\r\nconst chrome = window.chrome;\r\n\r\nclass MySubscription extends React.Component {\r\n    constructor(props) {\r\n\t\tsuper(props)\r\n\t}\r\n\t\r\n\ttoggle = () => {\t\t\r\n        this.props.toggle(false);\r\n    };\r\n\t\r\n\trender() {\t\t\r\n\t\tconst { open, followerList } = this.props;\r\n\t\t\r\n\t\t$(document).ready(() => {\r\n\t\t\tconst modalDiv = document.querySelector('.tr_modal');\r\n\t\t\t\r\n\t\t\tif (modalDiv) {\r\n                if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n                    modalDiv.parentNode.parentNode.parentNode.setAttribute('class', 'trial_modal_show trial_create_modal_main');\r\n                }\r\n            }\r\n        });\r\n\t\t\r\n\t\treturn(\r\n            <React.Fragment>\r\n                <Modal isOpen={open} toggle={this.toggle} className=\"tr_modal\" centered={true}>\r\n                    <ModalHeader toggle={this.toggle}>My Subscription</ModalHeader>\r\n                    <ModalBody>\r\n                    <ul className=\"tr_notification_bx\">\r\n\t\t\t\t\t{followerList && followerList.length <= 0 && <li class=\"tr_notFound_subscription\">No data found</li>}\r\n\t\t\t\t\t{followerList.map(res =>\r\n\t\t\t\t\t\t(<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>{res}</h4>\r\n\t\t\t\t\t\t\t<p>2 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>)\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t\r\n\t\t\t\t\t\t{/* <li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>3 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>\r\n\t\t\t\t\t\t<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>6 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li>\r\n\t\t\t\t\t\t<li><a href=\"javascript:void(0);\">\r\n\t\t\t\t\t\t<img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\"/>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h4>Etiam blandit elit nec rutrum consectetur rutrum consectetur.</h4>\r\n\t\t\t\t\t\t\t<p>6 hrs ago</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</a></li> */}\r\n\t\t\t\t</ul>\r\n                <div className=\"trailButtonsWrapper\">\r\n\t\t\t\t\t<Button className=\"ant-btn ant-btn-primary\" onClick={this.toggle}>Cancel</Button>\r\n                </div>\r\n                </ModalBody>\r\n            </Modal>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MySubscription;","/home/savan/Documents/Portfolio/extension/src/css/textEditor.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/connection.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/serialize.js",["494","495","496","497"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/merge_key_store.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/generated/rpc_error_types.js",[],"/home/savan/Documents/Portfolio/extension/src/components/forgotPassword.js",["498"],"/home/savan/Documents/Portfolio/extension/src/common/celo/api/index.js",[],"/home/savan/Documents/Portfolio/extension/src/common/trailitLogoInPreview.js",[],"/home/savan/Documents/Portfolio/extension/src/components/createModalComponent.js",["499","500","501","502","503"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/contract.js",["504"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/unencrypted_file_system_keystore.js",["505"],"/home/savan/Documents/Portfolio/extension/src/components/userVerification.js",["506","507","508"],"/home/savan/Documents/Portfolio/extension/src/components/userConfirmation.js",["509","510","511","512"],"/home/savan/Documents/Portfolio/extension/src/components/User/userProfileList.js",["513","514","515","516","517","518","519","520","521","522","523","524","525","526","527","528"],{"ruleId":"529","replacedBy":"530"},{"ruleId":"531","replacedBy":"532"},{"ruleId":"533","severity":1,"message":"534","line":19,"column":5,"nodeType":"535","messageId":"536","endLine":19,"endColumn":8},{"ruleId":"533","severity":1,"message":"537","line":115,"column":8,"nodeType":"535","messageId":"536","endLine":115,"endColumn":21},{"ruleId":"529","replacedBy":"538"},{"ruleId":"531","replacedBy":"539"},{"ruleId":"533","severity":1,"message":"540","line":61,"column":17,"nodeType":"535","messageId":"536","endLine":61,"endColumn":28},{"ruleId":"533","severity":1,"message":"541","line":84,"column":21,"nodeType":"535","messageId":"536","endLine":84,"endColumn":26},{"ruleId":"533","severity":1,"message":"542","line":89,"column":21,"nodeType":"535","messageId":"536","endLine":89,"endColumn":29},{"ruleId":"533","severity":1,"message":"541","line":143,"column":17,"nodeType":"535","messageId":"536","endLine":143,"endColumn":22},{"ruleId":"533","severity":1,"message":"542","line":148,"column":17,"nodeType":"535","messageId":"536","endLine":148,"endColumn":25},{"ruleId":"529","replacedBy":"543"},{"ruleId":"531","replacedBy":"544"},{"ruleId":"533","severity":1,"message":"545","line":2,"column":17,"nodeType":"535","messageId":"536","endLine":2,"endColumn":28},{"ruleId":"533","severity":1,"message":"546","line":2,"column":41,"nodeType":"535","messageId":"536","endLine":2,"endColumn":52},{"ruleId":"533","severity":1,"message":"547","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"548","line":3,"column":16,"nodeType":"535","messageId":"536","endLine":3,"endColumn":21},{"ruleId":"533","severity":1,"message":"549","line":118,"column":15,"nodeType":"535","messageId":"536","endLine":118,"endColumn":23},{"ruleId":"533","severity":1,"message":"550","line":141,"column":15,"nodeType":"535","messageId":"536","endLine":141,"endColumn":24},{"ruleId":"533","severity":1,"message":"551","line":193,"column":27,"nodeType":"535","messageId":"536","endLine":193,"endColumn":35},{"ruleId":"533","severity":1,"message":"552","line":193,"column":37,"nodeType":"535","messageId":"536","endLine":193,"endColumn":41},{"ruleId":"553","severity":1,"message":"554","line":222,"column":198,"nodeType":"555","messageId":"556","endLine":222,"endColumn":200},{"ruleId":"553","severity":1,"message":"554","line":222,"column":241,"nodeType":"555","messageId":"556","endLine":222,"endColumn":243},{"ruleId":"553","severity":1,"message":"554","line":222,"column":319,"nodeType":"555","messageId":"556","endLine":222,"endColumn":321},{"ruleId":"553","severity":1,"message":"554","line":222,"column":362,"nodeType":"555","messageId":"556","endLine":222,"endColumn":364},{"ruleId":"553","severity":1,"message":"554","line":222,"column":443,"nodeType":"555","messageId":"556","endLine":222,"endColumn":445},{"ruleId":"553","severity":1,"message":"554","line":222,"column":486,"nodeType":"555","messageId":"556","endLine":222,"endColumn":488},{"ruleId":"557","severity":1,"message":"558","line":185,"column":8,"nodeType":"559","endLine":185,"endColumn":10,"suggestions":"560"},{"ruleId":"561","severity":1,"message":"562","line":89,"column":48,"nodeType":"563","messageId":"564","endLine":98,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":213,"column":48,"nodeType":"563","messageId":"564","endLine":240,"endColumn":10},{"ruleId":"533","severity":1,"message":"565","line":1,"column":17,"nodeType":"535","messageId":"536","endLine":1,"endColumn":23},{"ruleId":"533","severity":1,"message":"566","line":1,"column":25,"nodeType":"535","messageId":"536","endLine":1,"endColumn":34},{"ruleId":"533","severity":1,"message":"567","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":28},{"ruleId":"533","severity":1,"message":"568","line":66,"column":11,"nodeType":"535","messageId":"536","endLine":66,"endColumn":15},{"ruleId":"569","severity":1,"message":"570","line":110,"column":8,"nodeType":"571","endLine":110,"endColumn":112},{"ruleId":"572","severity":1,"message":"573","line":110,"column":16,"nodeType":"574","messageId":"575","endLine":110,"endColumn":30},{"ruleId":"569","severity":1,"message":"570","line":166,"column":9,"nodeType":"571","endLine":166,"endColumn":64},{"ruleId":"572","severity":1,"message":"573","line":166,"column":49,"nodeType":"574","messageId":"575","endLine":166,"endColumn":63},{"ruleId":"529","replacedBy":"576"},{"ruleId":"531","replacedBy":"577"},{"ruleId":"561","severity":1,"message":"562","line":212,"column":48,"nodeType":"563","messageId":"564","endLine":214,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":222,"column":48,"nodeType":"563","messageId":"564","endLine":225,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":232,"column":48,"nodeType":"563","messageId":"564","endLine":234,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":241,"column":48,"nodeType":"563","messageId":"564","endLine":243,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":255,"column":48,"nodeType":"563","messageId":"564","endLine":259,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":270,"column":48,"nodeType":"563","messageId":"564","endLine":279,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":286,"column":48,"nodeType":"563","messageId":"564","endLine":288,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":296,"column":48,"nodeType":"563","messageId":"564","endLine":298,"endColumn":10},{"ruleId":"578","severity":1,"message":"579","line":351,"column":35,"nodeType":"580","messageId":"581","endLine":351,"endColumn":37},{"ruleId":"533","severity":1,"message":"582","line":4,"column":7,"nodeType":"535","messageId":"536","endLine":4,"endColumn":13},{"ruleId":"533","severity":1,"message":"583","line":7,"column":7,"nodeType":"535","messageId":"536","endLine":7,"endColumn":16},{"ruleId":"561","severity":1,"message":"562","line":28,"column":48,"nodeType":"563","messageId":"564","endLine":30,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":39,"column":48,"nodeType":"563","messageId":"564","endLine":45,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":53,"column":48,"nodeType":"563","messageId":"564","endLine":55,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":61,"column":48,"nodeType":"563","messageId":"564","endLine":67,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":74,"column":48,"nodeType":"563","messageId":"564","endLine":83,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":91,"column":48,"nodeType":"563","messageId":"564","endLine":102,"endColumn":10},{"ruleId":"584","severity":1,"message":"585","line":92,"column":28,"nodeType":"586","messageId":"587","endLine":92,"endColumn":39},{"ruleId":"533","severity":1,"message":"588","line":2,"column":31,"nodeType":"535","messageId":"536","endLine":2,"endColumn":37},{"ruleId":"533","severity":1,"message":"589","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":12},{"ruleId":"569","severity":1,"message":"570","line":37,"column":5,"nodeType":"571","endLine":37,"endColumn":41},{"ruleId":"590","severity":1,"message":"591","line":1,"column":1,"nodeType":"592","messageId":"593","endLine":1,"endColumn":14,"fix":"594"},{"ruleId":"595","severity":1,"message":"596","line":47,"column":129,"nodeType":"597","messageId":"598","endLine":47,"endColumn":131},{"ruleId":"533","severity":1,"message":"599","line":4,"column":10,"nodeType":"535","messageId":"536","endLine":4,"endColumn":16},{"ruleId":"533","severity":1,"message":"600","line":8,"column":7,"nodeType":"535","messageId":"536","endLine":8,"endColumn":13},{"ruleId":"533","severity":1,"message":"601","line":87,"column":24,"nodeType":"535","messageId":"536","endLine":87,"endColumn":33},{"ruleId":"533","severity":1,"message":"602","line":87,"column":35,"nodeType":"535","messageId":"536","endLine":87,"endColumn":41},{"ruleId":"533","severity":1,"message":"603","line":1,"column":8,"nodeType":"535","messageId":"536","endLine":1,"endColumn":19},{"ruleId":"533","severity":1,"message":"604","line":2,"column":8,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"549","line":105,"column":15,"nodeType":"535","messageId":"536","endLine":105,"endColumn":23},{"ruleId":"533","severity":1,"message":"549","line":120,"column":15,"nodeType":"535","messageId":"536","endLine":120,"endColumn":23},{"ruleId":"605","severity":1,"message":"606","line":295,"column":29,"nodeType":"571","endLine":295,"endColumn":124},{"ruleId":"595","severity":1,"message":"607","line":295,"column":62,"nodeType":"597","messageId":"598","endLine":295,"endColumn":64},{"ruleId":"569","severity":1,"message":"608","line":297,"column":88,"nodeType":"571","endLine":297,"endColumn":91},{"ruleId":"533","severity":1,"message":"604","line":2,"column":8,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"609","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":9},{"ruleId":"533","severity":1,"message":"600","line":5,"column":7,"nodeType":"535","messageId":"536","endLine":5,"endColumn":13},{"ruleId":"595","severity":1,"message":"607","line":19,"column":51,"nodeType":"597","messageId":"598","endLine":19,"endColumn":53},{"ruleId":"533","severity":1,"message":"549","line":28,"column":15,"nodeType":"535","messageId":"536","endLine":28,"endColumn":23},{"ruleId":"533","severity":1,"message":"550","line":42,"column":15,"nodeType":"535","messageId":"536","endLine":42,"endColumn":24},{"ruleId":"533","severity":1,"message":"610","line":47,"column":17,"nodeType":"535","messageId":"536","endLine":47,"endColumn":21},{"ruleId":"533","severity":1,"message":"549","line":47,"column":23,"nodeType":"535","messageId":"536","endLine":47,"endColumn":31},{"ruleId":"533","severity":1,"message":"551","line":47,"column":33,"nodeType":"535","messageId":"536","endLine":47,"endColumn":41},{"ruleId":"605","severity":1,"message":"606","line":53,"column":21,"nodeType":"571","endLine":53,"endColumn":97},{"ruleId":"533","severity":1,"message":"611","line":13,"column":7,"nodeType":"535","messageId":"536","endLine":13,"endColumn":26},{"ruleId":"533","severity":1,"message":"612","line":25,"column":7,"nodeType":"535","messageId":"536","endLine":25,"endColumn":27},{"ruleId":"595","severity":1,"message":"596","line":99,"column":44,"nodeType":"597","messageId":"598","endLine":99,"endColumn":46},{"ruleId":"595","severity":1,"message":"607","line":263,"column":35,"nodeType":"597","messageId":"598","endLine":263,"endColumn":37},{"ruleId":"533","severity":1,"message":"589","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":12},{"ruleId":"533","severity":1,"message":"609","line":4,"column":8,"nodeType":"535","messageId":"536","endLine":4,"endColumn":9},{"ruleId":"595","severity":1,"message":"607","line":24,"column":38,"nodeType":"597","messageId":"598","endLine":24,"endColumn":40},{"ruleId":"561","severity":1,"message":"562","line":71,"column":48,"nodeType":"563","messageId":"564","endLine":74,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":43,"column":48,"nodeType":"563","messageId":"564","endLine":48,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":121,"column":48,"nodeType":"563","messageId":"564","endLine":123,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":126,"column":48,"nodeType":"563","messageId":"564","endLine":128,"endColumn":10},{"ruleId":"578","severity":1,"message":"579","line":6,"column":43,"nodeType":"580","messageId":"581","endLine":6,"endColumn":45},{"ruleId":"578","severity":1,"message":"579","line":14,"column":43,"nodeType":"580","messageId":"581","endLine":14,"endColumn":45},{"ruleId":"561","severity":1,"message":"562","line":31,"column":48,"nodeType":"563","messageId":"564","endLine":36,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":44,"column":48,"nodeType":"563","messageId":"564","endLine":46,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":55,"column":48,"nodeType":"563","messageId":"564","endLine":58,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":68,"column":48,"nodeType":"563","messageId":"564","endLine":70,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":91,"column":48,"nodeType":"563","messageId":"564","endLine":100,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":109,"column":48,"nodeType":"563","messageId":"564","endLine":111,"endColumn":10},{"ruleId":"561","severity":1,"message":"562","line":119,"column":48,"nodeType":"563","messageId":"564","endLine":121,"endColumn":10},{"ruleId":"533","severity":1,"message":"613","line":2,"column":16,"nodeType":"535","messageId":"536","endLine":2,"endColumn":22},{"ruleId":"533","severity":1,"message":"588","line":2,"column":39,"nodeType":"535","messageId":"536","endLine":2,"endColumn":45},{"ruleId":"533","severity":1,"message":"589","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":12},{"ruleId":"533","severity":1,"message":"614","line":3,"column":16,"nodeType":"535","messageId":"536","endLine":3,"endColumn":30},{"ruleId":"533","severity":1,"message":"615","line":6,"column":10,"nodeType":"535","messageId":"536","endLine":6,"endColumn":23},{"ruleId":"533","severity":1,"message":"616","line":7,"column":10,"nodeType":"535","messageId":"536","endLine":7,"endColumn":26},{"ruleId":"533","severity":1,"message":"600","line":9,"column":7,"nodeType":"535","messageId":"536","endLine":9,"endColumn":13},{"ruleId":"595","severity":1,"message":"607","line":39,"column":24,"nodeType":"597","messageId":"598","endLine":39,"endColumn":26},{"ruleId":"533","severity":1,"message":"617","line":48,"column":21,"nodeType":"535","messageId":"536","endLine":48,"endColumn":28},{"ruleId":"533","severity":1,"message":"618","line":49,"column":21,"nodeType":"535","messageId":"536","endLine":49,"endColumn":31},{"ruleId":"533","severity":1,"message":"568","line":66,"column":13,"nodeType":"535","messageId":"536","endLine":66,"endColumn":17},{"ruleId":"619","severity":1,"message":"620","line":70,"column":15,"nodeType":"574","messageId":"621","endLine":70,"endColumn":33,"fix":"622"},{"ruleId":"605","severity":1,"message":"606","line":101,"column":40,"nodeType":"571","endLine":101,"endColumn":100},{"ruleId":"605","severity":1,"message":"606","line":101,"column":100,"nodeType":"571","endLine":101,"endColumn":160},{"ruleId":"569","severity":1,"message":"570","line":106,"column":13,"nodeType":"571","endLine":106,"endColumn":116},{"ruleId":"572","severity":1,"message":"573","line":106,"column":21,"nodeType":"574","messageId":"575","endLine":106,"endColumn":35},{"ruleId":"595","severity":1,"message":"607","line":114,"column":27,"nodeType":"597","messageId":"598","endLine":114,"endColumn":29},{"ruleId":"578","severity":1,"message":"623","line":130,"column":57,"nodeType":"580","messageId":"624","endLine":130,"endColumn":59},{"ruleId":"595","severity":1,"message":"607","line":203,"column":27,"nodeType":"597","messageId":"598","endLine":203,"endColumn":29},{"ruleId":"595","severity":1,"message":"607","line":259,"column":28,"nodeType":"597","messageId":"598","endLine":259,"endColumn":30},{"ruleId":"533","severity":1,"message":"625","line":281,"column":13,"nodeType":"535","messageId":"536","endLine":281,"endColumn":21},{"ruleId":"533","severity":1,"message":"626","line":283,"column":11,"nodeType":"535","messageId":"536","endLine":283,"endColumn":19},{"ruleId":"533","severity":1,"message":"627","line":317,"column":7,"nodeType":"535","messageId":"536","endLine":317,"endColumn":18},{"ruleId":"595","severity":1,"message":"607","line":321,"column":19,"nodeType":"597","messageId":"598","endLine":321,"endColumn":21},{"ruleId":"595","severity":1,"message":"607","line":323,"column":26,"nodeType":"597","messageId":"598","endLine":323,"endColumn":28},{"ruleId":"605","severity":1,"message":"606","line":343,"column":15,"nodeType":"571","endLine":343,"endColumn":75},{"ruleId":"605","severity":1,"message":"606","line":344,"column":15,"nodeType":"571","endLine":344,"endColumn":75},{"ruleId":"595","severity":1,"message":"607","line":353,"column":32,"nodeType":"597","messageId":"598","endLine":353,"endColumn":34},{"ruleId":"595","severity":1,"message":"607","line":429,"column":26,"nodeType":"597","messageId":"598","endLine":429,"endColumn":28},{"ruleId":"595","severity":1,"message":"607","line":438,"column":26,"nodeType":"597","messageId":"598","endLine":438,"endColumn":28},{"ruleId":"533","severity":1,"message":"628","line":5,"column":7,"nodeType":"535","messageId":"536","endLine":5,"endColumn":15},{"ruleId":"533","severity":1,"message":"629","line":62,"column":29,"nodeType":"535","messageId":"536","endLine":62,"endColumn":36},{"ruleId":"533","severity":1,"message":"625","line":92,"column":17,"nodeType":"535","messageId":"536","endLine":92,"endColumn":25},{"ruleId":"533","severity":1,"message":"626","line":94,"column":9,"nodeType":"535","messageId":"536","endLine":94,"endColumn":17},{"ruleId":"595","severity":1,"message":"607","line":101,"column":53,"nodeType":"597","messageId":"598","endLine":101,"endColumn":55},{"ruleId":"595","severity":1,"message":"607","line":105,"column":48,"nodeType":"597","messageId":"598","endLine":105,"endColumn":50},{"ruleId":"595","severity":1,"message":"607","line":146,"column":30,"nodeType":"597","messageId":"598","endLine":146,"endColumn":32},{"ruleId":"595","severity":1,"message":"607","line":147,"column":52,"nodeType":"597","messageId":"598","endLine":147,"endColumn":54},{"ruleId":"533","severity":1,"message":"630","line":162,"column":100,"nodeType":"535","messageId":"536","endLine":162,"endColumn":108},{"ruleId":"605","severity":1,"message":"606","line":168,"column":47,"nodeType":"571","endLine":168,"endColumn":110},{"ruleId":"605","severity":1,"message":"606","line":168,"column":110,"nodeType":"571","endLine":168,"endColumn":173},{"ruleId":"595","severity":1,"message":"607","line":187,"column":92,"nodeType":"597","messageId":"598","endLine":187,"endColumn":94},{"ruleId":"595","severity":1,"message":"607","line":187,"column":115,"nodeType":"597","messageId":"598","endLine":187,"endColumn":117},{"ruleId":"595","severity":1,"message":"607","line":221,"column":108,"nodeType":"597","messageId":"598","endLine":221,"endColumn":110},{"ruleId":"533","severity":1,"message":"629","line":5,"column":9,"nodeType":"535","messageId":"536","endLine":5,"endColumn":16},{"ruleId":"595","severity":1,"message":"607","line":11,"column":18,"nodeType":"597","messageId":"598","endLine":11,"endColumn":20},{"ruleId":"631","severity":1,"message":"632","line":27,"column":10,"nodeType":"535","messageId":"633","endLine":27,"endColumn":12},{"ruleId":"578","severity":1,"message":"579","line":49,"column":21,"nodeType":"580","messageId":"581","endLine":49,"endColumn":23},{"ruleId":"533","severity":1,"message":"547","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":14},{"ruleId":"533","severity":1,"message":"548","line":2,"column":16,"nodeType":"535","messageId":"536","endLine":2,"endColumn":21},{"ruleId":"533","severity":1,"message":"546","line":2,"column":62,"nodeType":"535","messageId":"536","endLine":2,"endColumn":73},{"ruleId":"533","severity":1,"message":"634","line":42,"column":13,"nodeType":"535","messageId":"536","endLine":42,"endColumn":23},{"ruleId":"533","severity":1,"message":"635","line":42,"column":25,"nodeType":"535","messageId":"536","endLine":42,"endColumn":31},{"ruleId":"533","severity":1,"message":"636","line":42,"column":33,"nodeType":"535","messageId":"536","endLine":42,"endColumn":41},{"ruleId":"637","severity":1,"message":"638","line":50,"column":11,"nodeType":"639","messageId":"598","endLine":50,"endColumn":15,"fix":"640"},{"ruleId":"595","severity":1,"message":"607","line":59,"column":34,"nodeType":"597","messageId":"598","endLine":59,"endColumn":36},{"ruleId":"533","severity":1,"message":"641","line":73,"column":23,"nodeType":"535","messageId":"536","endLine":73,"endColumn":35},{"ruleId":"569","severity":1,"message":"570","line":98,"column":90,"nodeType":"571","endLine":98,"endColumn":120},{"ruleId":"572","severity":1,"message":"573","line":98,"column":98,"nodeType":"574","messageId":"575","endLine":98,"endColumn":119},{"ruleId":"533","severity":1,"message":"604","line":2,"column":8,"nodeType":"535","messageId":"536","endLine":2,"endColumn":19},{"ruleId":"533","severity":1,"message":"642","line":28,"column":9,"nodeType":"535","messageId":"536","endLine":28,"endColumn":16},{"ruleId":"533","severity":1,"message":"549","line":153,"column":15,"nodeType":"535","messageId":"536","endLine":153,"endColumn":23},{"ruleId":"533","severity":1,"message":"550","line":189,"column":15,"nodeType":"535","messageId":"536","endLine":189,"endColumn":24},{"ruleId":"533","severity":1,"message":"552","line":288,"column":37,"nodeType":"535","messageId":"536","endLine":288,"endColumn":41},{"ruleId":"569","severity":1,"message":"608","line":311,"column":25,"nodeType":"571","endLine":315,"endColumn":26},{"ruleId":"533","severity":1,"message":"546","line":2,"column":49,"nodeType":"535","messageId":"536","endLine":2,"endColumn":60},{"ruleId":"533","severity":1,"message":"643","line":5,"column":10,"nodeType":"535","messageId":"536","endLine":5,"endColumn":20},{"ruleId":"533","severity":1,"message":"600","line":6,"column":7,"nodeType":"535","messageId":"536","endLine":6,"endColumn":13},{"ruleId":"644","severity":1,"message":"645","line":9,"column":5,"nodeType":"646","messageId":"647","endLine":11,"endColumn":3},{"ruleId":"569","severity":1,"message":"570","line":38,"column":12,"nodeType":"571","endLine":38,"endColumn":42},{"ruleId":"572","severity":1,"message":"573","line":38,"column":20,"nodeType":"574","messageId":"575","endLine":38,"endColumn":41},{"ruleId":"605","severity":1,"message":"606","line":39,"column":7,"nodeType":"571","endLine":39,"endColumn":82},{"ruleId":"648","severity":1,"message":"649","line":9,"column":63,"nodeType":"650","messageId":"651","endLine":9,"endColumn":80},{"ruleId":"652","severity":1,"message":"653","line":10,"column":63,"nodeType":"654","messageId":"655","endLine":10,"endColumn":64},{"ruleId":"584","severity":1,"message":"585","line":163,"column":24,"nodeType":"639","messageId":"587","endLine":163,"endColumn":31},{"ruleId":"578","severity":1,"message":"579","line":242,"column":58,"nodeType":"580","messageId":"581","endLine":242,"endColumn":60},{"ruleId":"569","severity":1,"message":"570","line":30,"column":5,"nodeType":"571","endLine":30,"endColumn":41},{"ruleId":"533","severity":1,"message":"656","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":16},{"ruleId":"533","severity":1,"message":"546","line":2,"column":49,"nodeType":"535","messageId":"536","endLine":2,"endColumn":60},{"ruleId":"533","severity":1,"message":"547","line":3,"column":10,"nodeType":"535","messageId":"536","endLine":3,"endColumn":14},{"ruleId":"533","severity":1,"message":"548","line":3,"column":16,"nodeType":"535","messageId":"536","endLine":3,"endColumn":21},{"ruleId":"533","severity":1,"message":"589","line":4,"column":8,"nodeType":"535","messageId":"536","endLine":4,"endColumn":12},{"ruleId":"561","severity":1,"message":"562","line":37,"column":122,"nodeType":"563","messageId":"564","endLine":42,"endColumn":18},{"ruleId":"584","severity":1,"message":"585","line":133,"column":28,"nodeType":"586","messageId":"587","endLine":133,"endColumn":39},{"ruleId":"533","severity":1,"message":"588","line":2,"column":31,"nodeType":"535","messageId":"536","endLine":2,"endColumn":37},{"ruleId":"533","severity":1,"message":"589","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":12},{"ruleId":"569","severity":1,"message":"570","line":40,"column":5,"nodeType":"571","endLine":40,"endColumn":41},{"ruleId":"533","severity":1,"message":"547","line":2,"column":10,"nodeType":"535","messageId":"536","endLine":2,"endColumn":14},{"ruleId":"533","severity":1,"message":"548","line":2,"column":16,"nodeType":"535","messageId":"536","endLine":2,"endColumn":21},{"ruleId":"533","severity":1,"message":"588","line":2,"column":31,"nodeType":"535","messageId":"536","endLine":2,"endColumn":37},{"ruleId":"533","severity":1,"message":"589","line":3,"column":8,"nodeType":"535","messageId":"536","endLine":3,"endColumn":12},{"ruleId":"595","severity":1,"message":"607","line":37,"column":58,"nodeType":"597","messageId":"598","endLine":37,"endColumn":60},{"ruleId":"595","severity":1,"message":"607","line":38,"column":23,"nodeType":"597","messageId":"598","endLine":38,"endColumn":25},{"ruleId":"595","severity":1,"message":"607","line":44,"column":63,"nodeType":"597","messageId":"598","endLine":44,"endColumn":65},{"ruleId":"595","severity":1,"message":"596","line":45,"column":23,"nodeType":"597","messageId":"598","endLine":45,"endColumn":25},{"ruleId":"595","severity":1,"message":"607","line":78,"column":26,"nodeType":"597","messageId":"598","endLine":78,"endColumn":28},{"ruleId":"595","severity":1,"message":"607","line":79,"column":48,"nodeType":"597","messageId":"598","endLine":79,"endColumn":50},{"ruleId":"533","severity":1,"message":"634","line":147,"column":13,"nodeType":"535","messageId":"536","endLine":147,"endColumn":23},{"ruleId":"533","severity":1,"message":"635","line":147,"column":25,"nodeType":"535","messageId":"536","endLine":147,"endColumn":31},{"ruleId":"533","severity":1,"message":"636","line":147,"column":33,"nodeType":"535","messageId":"536","endLine":147,"endColumn":41},{"ruleId":"637","severity":1,"message":"638","line":155,"column":11,"nodeType":"639","messageId":"598","endLine":155,"endColumn":15,"fix":"657"},{"ruleId":"605","severity":1,"message":"606","line":168,"column":47,"nodeType":"571","endLine":168,"endColumn":110},{"ruleId":"605","severity":1,"message":"606","line":168,"column":110,"nodeType":"571","endLine":168,"endColumn":173},{"ruleId":"595","severity":1,"message":"596","line":182,"column":80,"nodeType":"597","messageId":"598","endLine":182,"endColumn":82},{"ruleId":"595","severity":1,"message":"596","line":182,"column":111,"nodeType":"597","messageId":"598","endLine":182,"endColumn":113},{"ruleId":"595","severity":1,"message":"596","line":182,"column":138,"nodeType":"597","messageId":"598","endLine":182,"endColumn":140},{"ruleId":"595","severity":1,"message":"607","line":213,"column":122,"nodeType":"597","messageId":"598","endLine":213,"endColumn":124},"no-native-reassign",["658"],"no-negated-in-lhs",["659"],"no-unused-vars","'bkg' is assigned a value but never used.","Identifier","unusedVar","'storageChange' is assigned a value but never used.",["658"],["659"],"'description' is assigned a value but never used.","'paths' is assigned a value but never used.","'selector' is assigned a value but never used.",["658"],["659"],"'ModalHeader' is defined but never used.","'ModalFooter' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'tourStep' is assigned a value but never used.","'tourSteps' is assigned a value but never used.","'tourSide' is assigned a value but never used.","'play' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'onIframeBodyClick' and 'updateDescription'. Either include them or remove the dependency array.","ArrayExpression",["660"],"require-yield","This generator function does not have 'yield'.","FunctionExpression","missingYield","'useRef' is defined but never used.","'createRef' is defined but never used.","'getAllNotification' is defined but never used.","'form' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL",["658"],["659"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'config' is assigned a value but never used.","'publicKey' is assigned a value but never used.","no-array-constructor","The array literal notation [] is preferable.","NewExpression","preferLiteral","'Avatar' is defined but never used.","'Icon' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"661","text":"662"},"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'wallet' is defined but never used.","'chrome' is assigned a value but never used.","'toAddress' is assigned a value but never used.","'amount' is assigned a value but never used.","'ContractKit' is defined but never used.","'ReactPlayer' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","Expected '===' and instead saw '=='.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'$' is defined but never used.","'data' is assigned a value but never used.","'onTitleClickHandler' is assigned a value but never used.","'onDescriptionHandler' is assigned a value but never used.","'Upload' is defined but never used.","'UploadOutlined' is defined but never used.","'createTrailId' is defined but never used.","'handleFileUpload' is defined but never used.","'user_id' is assigned a value but never used.","'trail_name' is assigned a value but never used.","no-regex-spaces","Spaces are hard to count. Use {2}.","multipleSpaces",{"range":"663","text":"664"},"Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'tourType' is assigned a value but never used.","'fileType' is assigned a value but never used.","'nearBalance' is assigned a value but never used.","'receiver' is assigned a value but never used.","'isValid' is assigned a value but never used.","'trail_id' is assigned a value but never used.","no-self-assign","'el' is assigned to itself.","selfAssignment","'auth_Tokan' is defined but never used.","'reload' is defined but never used.","'userData' is defined but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression",{"range":"665","text":"662"},"'followerList' is assigned a value but never used.","'draggie' is assigned a value but never used.","'getAllUser' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'Button' is defined but never used.",{"range":"666","text":"662"},"no-global-assign","no-unsafe-negation",{"desc":"667","fix":"668"},[0,13],"",[2187,2189]," {2}",[1583,1594],[5350,5361],"Update the dependencies array to be: [onIframeBodyClick, updateDescription]",{"range":"669","text":"670"},[6742,6744],"[onIframeBodyClick, updateDescription]"]