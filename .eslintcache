[{"/home/savan/Documents/Portfolio/extension/src/index.js":"1","/home/savan/Documents/Portfolio/extension/src/App.js":"2","/home/savan/Documents/Portfolio/extension/src/Content.js":"3","/home/savan/Documents/Portfolio/extension/src/components/mySubscription.js":"4","/home/savan/Documents/Portfolio/extension/src/components/Modal/SendTipModal.js":"5","/home/savan/Documents/Portfolio/extension/src/components/Modal/TrailSettingsModal.js":"6","/home/savan/Documents/Portfolio/extension/src/components/Modal/createModalComponent.js":"7","/home/savan/Documents/Portfolio/extension/src/components/Modal/TrailDeleteModal.js":"8","/home/savan/Documents/Portfolio/extension/src/css/tooltip.js":"9","/home/savan/Documents/Portfolio/extension/src/css/mainflip.js":"10","/home/savan/Documents/Portfolio/extension/src/css/defaultButton.js":"11","/home/savan/Documents/Portfolio/extension/src/code/sendtx.js":"12","/home/savan/Documents/Portfolio/extension/src/common/draggable.js":"13","/home/savan/Documents/Portfolio/extension/src/components/Modal/ContinueTourConfirmation.js":"14","/home/savan/Documents/Portfolio/extension/src/common/SendTipForm.js":"15","/home/savan/Documents/Portfolio/extension/src/components/index.js":"16","/home/savan/Documents/Portfolio/extension/src/near-api-js/near.js":"17","/home/savan/Documents/Portfolio/extension/src/near-api-js/contract.js":"18","/home/savan/Documents/Portfolio/extension/src/near-api-js/account_creator.js":"19","/home/savan/Documents/Portfolio/extension/src/near-api-js/validators.js":"20","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/key_pair.js":"21","/home/savan/Documents/Portfolio/extension/src/css/textEditor.js":"22","/home/savan/Documents/Portfolio/extension/src/components/login.js":"23","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/web.js":"24","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/serialize.js":"25","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/provider.js":"26","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/network.js":"27","/home/savan/Documents/Portfolio/extension/src/common/celo/index.js":"28","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/merge_key_store.js":"29","/home/savan/Documents/Portfolio/extension/src/components/User/userProfileEdit.js":"30","/home/savan/Documents/Portfolio/extension/src/components/User/userProfileList.js":"31","/home/savan/Documents/Portfolio/extension/src/components/User/validation.js":"32","/home/savan/Documents/Portfolio/extension/src/reportWebVitals.js":"33","/home/savan/Documents/Portfolio/extension/src/common/initButtonPosition.js":"34","/home/savan/Documents/Portfolio/extension/src/common/trailitLogoInPreview.js":"35","/home/savan/Documents/Portfolio/extension/src/common/axios.js":"36","/home/savan/Documents/Portfolio/extension/src/components/webUserTour.js":"37","/home/savan/Documents/Portfolio/extension/src/components/Modal/targetNotFound.js":"38","/home/savan/Documents/Portfolio/extension/src/components/Modal/CreateTourConfirmationModal.js":"39","/home/savan/Documents/Portfolio/extension/src/common/stopePlayingMedia.js":"40","/home/savan/Documents/Portfolio/extension/src/css/audioTour.js":"41","/home/savan/Documents/Portfolio/extension/src/components/settingsComponents.js":"42","/home/savan/Documents/Portfolio/extension/src/near-api-js/wallet-account.js":"43","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/index.js":"44","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/enums.js":"45","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/format.js":"46","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/browser_local_storage_key_store.js":"47","/home/savan/Documents/Portfolio/extension/src/components/User/index.js":"48","/home/savan/Documents/Portfolio/extension/src/AppUtill.js":"49","/home/savan/Documents/Portfolio/extension/src/components/tooltip.js":"50","/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailModal.js":"51","/home/savan/Documents/Portfolio/extension/src/components/SortableItem.js":"52","/home/savan/Documents/Portfolio/extension/src/css/main.js":"53","/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailTab.js":"54","/home/savan/Documents/Portfolio/extension/src/near-api-js/signer.js":"55","/home/savan/Documents/Portfolio/extension/src/near-api-js/account_multisig.js":"56","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/rpc_errors.js":"57","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/keystore.js":"58","/home/savan/Documents/Portfolio/extension/src/code/getBalance.js":"59","/home/savan/Documents/Portfolio/extension/src/common/audAndVidCommon.js":"60","/home/savan/Documents/Portfolio/extension/src/common/trailOverlay.js":"61","/home/savan/Documents/Portfolio/extension/src/components/videoTour.js":"62","/home/savan/Documents/Portfolio/extension/src/css/videoTour.js":"63","/home/savan/Documents/Portfolio/extension/src/near-api-js/connection.js":"64","/home/savan/Documents/Portfolio/extension/src/components/userProfile.js":"65","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/json-rpc-provider.js":"66","/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/in_memory_key_store.js":"67","/home/savan/Documents/Portfolio/extension/src/components/User/userCUSD.js":"68","/home/savan/Documents/Portfolio/extension/src/common/celo/wallet/index.js":"69","/home/savan/Documents/Portfolio/extension/src/near-api-js/generated/rpc_error_types.js":"70"},{"size":458,"mtime":1619501220553,"results":"71","hashOfConfig":"72"},{"size":3230,"mtime":1619501220549,"results":"73","hashOfConfig":"72"},{"size":158612,"mtime":1620107825992,"results":"74","hashOfConfig":"72"},{"size":1938,"mtime":1619501220553,"results":"75","hashOfConfig":"72"},{"size":2078,"mtime":1615279805263,"results":"76","hashOfConfig":"72"},{"size":1536,"mtime":1619501220549,"results":"77","hashOfConfig":"72"},{"size":7341,"mtime":1619501220549,"results":"78","hashOfConfig":"72"},{"size":2430,"mtime":1618569771285,"results":"79","hashOfConfig":"72"},{"size":1443,"mtime":1618569771293,"results":"80","hashOfConfig":"72"},{"size":1126,"mtime":1613653325678,"results":"81","hashOfConfig":"72"},{"size":23280,"mtime":1620107825992,"results":"82","hashOfConfig":"72"},{"size":4189,"mtime":1610339339370,"results":"83","hashOfConfig":"72"},{"size":1351,"mtime":1612270443428,"results":"84","hashOfConfig":"72"},{"size":1934,"mtime":1617085673789,"results":"85","hashOfConfig":"72"},{"size":3215,"mtime":1619758319007,"results":"86","hashOfConfig":"72"},{"size":106,"mtime":1619501220553,"results":"87","hashOfConfig":"72"},{"size":5257,"mtime":1610339339378,"results":"88","hashOfConfig":"72"},{"size":3352,"mtime":1610339339378,"results":"89","hashOfConfig":"72"},{"size":2500,"mtime":1610339339378,"results":"90","hashOfConfig":"72"},{"size":2121,"mtime":1610339339382,"results":"91","hashOfConfig":"72"},{"size":3856,"mtime":1610339339378,"results":"92","hashOfConfig":"72"},{"size":2763,"mtime":1619501220553,"results":"93","hashOfConfig":"72"},{"size":8621,"mtime":1619678375900,"results":"94","hashOfConfig":"72"},{"size":3368,"mtime":1610339339378,"results":"95","hashOfConfig":"72"},{"size":10911,"mtime":1610339339378,"results":"96","hashOfConfig":"72"},{"size":1139,"mtime":1610339339378,"results":"97","hashOfConfig":"72"},{"size":0,"mtime":1610339339378,"results":"98","hashOfConfig":"72"},{"size":582,"mtime":1610339339370,"results":"99","hashOfConfig":"72"},{"size":4026,"mtime":1610339339378,"results":"100","hashOfConfig":"72"},{"size":11818,"mtime":1620108963855,"results":"101","hashOfConfig":"72"},{"size":14354,"mtime":1619607165935,"results":"102","hashOfConfig":"72"},{"size":1203,"mtime":1620108789113,"results":"103","hashOfConfig":"72"},{"size":362,"mtime":1610339339382,"results":"104","hashOfConfig":"72"},{"size":555,"mtime":1612270443428,"results":"105","hashOfConfig":"72"},{"size":1412,"mtime":1619501220549,"results":"106","hashOfConfig":"72"},{"size":6826,"mtime":1619678375900,"results":"107","hashOfConfig":"72"},{"size":18527,"mtime":1619501220553,"results":"108","hashOfConfig":"72"},{"size":7662,"mtime":1619501220549,"results":"109","hashOfConfig":"72"},{"size":11687,"mtime":1619501220549,"results":"110","hashOfConfig":"72"},{"size":2845,"mtime":1613111047407,"results":"111","hashOfConfig":"72"},{"size":13283,"mtime":1617889540863,"results":"112","hashOfConfig":"72"},{"size":2528,"mtime":1619501220553,"results":"113","hashOfConfig":"72"},{"size":13274,"mtime":1610339339382,"results":"114","hashOfConfig":"72"},{"size":290,"mtime":1610339339378,"results":"115","hashOfConfig":"72"},{"size":477,"mtime":1610339339378,"results":"116","hashOfConfig":"72"},{"size":3712,"mtime":1610339339378,"results":"117","hashOfConfig":"72"},{"size":4661,"mtime":1610339339378,"results":"118","hashOfConfig":"72"},{"size":256,"mtime":1610339339374,"results":"119","hashOfConfig":"72"},{"size":4548,"mtime":1615279805259,"results":"120","hashOfConfig":"72"},{"size":7422,"mtime":1619501220553,"results":"121","hashOfConfig":"72"},{"size":4406,"mtime":1617085673789,"results":"122","hashOfConfig":"72"},{"size":21801,"mtime":1620107825992,"results":"123","hashOfConfig":"72"},{"size":12596,"mtime":1618569771293,"results":"124","hashOfConfig":"72"},{"size":2281,"mtime":1610339339370,"results":"125","hashOfConfig":"72"},{"size":3148,"mtime":1610339339378,"results":"126","hashOfConfig":"72"},{"size":11325,"mtime":1610339339378,"results":"127","hashOfConfig":"72"},{"size":2522,"mtime":1610339339378,"results":"128","hashOfConfig":"72"},{"size":79,"mtime":1610339339378,"results":"129","hashOfConfig":"72"},{"size":893,"mtime":1616649661006,"results":"130","hashOfConfig":"72"},{"size":1011,"mtime":1610339339370,"results":"131","hashOfConfig":"72"},{"size":2095,"mtime":1611814840204,"results":"132","hashOfConfig":"72"},{"size":12369,"mtime":1619501220553,"results":"133","hashOfConfig":"72"},{"size":5747,"mtime":1618569771293,"results":"134","hashOfConfig":"72"},{"size":1335,"mtime":1610339339378,"results":"135","hashOfConfig":"72"},{"size":22702,"mtime":1620107825992,"results":"136","hashOfConfig":"72"},{"size":8301,"mtime":1610339339378,"results":"137","hashOfConfig":"72"},{"size":3609,"mtime":1610339339378,"results":"138","hashOfConfig":"72"},{"size":2939,"mtime":1619501220549,"results":"139","hashOfConfig":"72"},{"size":1037,"mtime":1610339339370,"results":"140","hashOfConfig":"72"},{"size":4925,"mtime":1610339339378,"results":"141","hashOfConfig":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"n3tsqn",{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"149"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"153"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"149"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"179","messages":"180","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"182"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"149"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"190","usedDeprecatedRules":"149"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"149"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"149"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"182"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"213","messages":"214","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"215","usedDeprecatedRules":"153"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"226","messages":"227","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"228","usedDeprecatedRules":"153"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"153"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"149"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"244","messages":"245","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"248","messages":"249","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"149"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"257","messages":"258","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"259","messages":"260","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"261","usedDeprecatedRules":"149"},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"149"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"149"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"279","messages":"280","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"283","messages":"284","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"287","messages":"288","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"289","messages":"290","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"291","messages":"292","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"293","messages":"294","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"295","messages":"296","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"297","messages":"298","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/savan/Documents/Portfolio/extension/src/index.js",[],"/home/savan/Documents/Portfolio/extension/src/App.js",["299"],"/home/savan/Documents/Portfolio/extension/src/Content.js",["300","301","302","303","304","305","306","307","308","309","310","311","312","313","314"],"import * as React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Button } from \"antd\";\nimport { CloudUploadOutlined } from \"@ant-design/icons\";\nimport unique from \"unique-selector\";\nimport { arrayMove } from \"react-sortable-hoc\";\nimport _ from \"lodash\";\nimport $ from \"jquery\";\nimport WebFont from \"webfontloader\";\nimport Draggable from \"react-draggable\";\n\nimport { get } from \"./AppUtill\";\nimport { socket } from \"./common/socket\";\nimport Tooltip from \"./components/tooltip\";\nimport { resizeScreen } from \"./common/helper\";\nimport VideoTour from \"./components/videoTour\";\nimport AudioTour from \"./components/audioTour\";\nimport { sendTransection } from \"./code/sendtx\";\nimport WebUserTour from \"./components/webUserTour\";\nimport MySubscription from \"./components/mySubscription\";\nimport SendTipModal from \"./components/Modal/SendTipModal\";\nimport { handleFileUpload } from \"./common/audAndVidCommon\";\nimport TargetNotFound from \"./components/Modal/targetNotFound\";\nimport { initButtonPosition } from \"./common/initButtonPosition\";\nimport TrailSetting from \"./components/Modal/TrailSettingsModal\";\nimport { removeTrailitLogo } from \"./common/trailitLogoInPreview\";\nimport CreateNewTrailModal from \"./components/CreateNewTrailModal\";\nimport { matchUrl, queryParentElement } from \"./components/common\";\nimport TrailDeleteModal from \"./components/Modal/TrailDeleteModal\";\nimport CreateModalComponent from \"./components/Modal/createModalComponent\";\nimport PreviewModalComponent from \"./components/Modal/previewModalComponent\";\nimport SortableItem, { SortableContainer } from \"./components/SortableItem\";\nimport {\n  addOverlay,\n  setOverlayHtml,\n  removeOverlay,\n} from \"./common/trailOverlay\";\nimport CreateTourConfirmationModal from \"./components/Modal/CreateTourConfirmationModal\";\nimport {\n  logout,\n  getAllUser,\n  deleteTrail,\n  uploadTrails,\n  followTrails,\n  arraySorting,\n  getFollowTrails,\n  updateTrailFlag,\n  getUserOneTrail,\n  UpdateTrailData,\n  updateTrailTrack,\n  deleteSingleTrail,\n  getSingleTrailData,\n  getAllNotification,\n  updateNotification,\n  unFollowTrailOfUser,\n  getFollowedOneTrail,\n} from \"./common/axios\";\n\nimport { main1Css, main2Css } from \"./css/main\";\nimport { tooltipCss1 } from \"./css/tooltip\";\nimport { mainFlipCss } from \"./css/mainflip\";\nimport {\n  myExtensionRootFlipCss0,\n  myExtensionRootFlipCss1,\n  myExtensionRootFlipCss2,\n  myExtensionRootFlipCss3,\n  myExtensionRootFlipCss4,\n  myExtensionRootFlipCss5,\n} from \"./css/myExtensionRootFlip\";\nimport {\n  defaultButtonCss1,\n  defaultButtonCss2,\n  defaultButtonCss3,\n} from \"./css/defaultButton\";\n\nimport \"./Content.css\";\n\n/*global chrome*/\n\nWebFont.load({\n  google: {\n    families: [\"Lato\", \"Raleway:400,500,700\", \"sans-serif\", \"Montserrat\"],\n  },\n  // eslint-disable-next-line no-restricted-globals\n  context: frames[\"text-editor-frame\"],\n});\n\nlet app;\nlet obj = {};\nlet updateOverlay;\nlet root1 = \"none\";\nlet allTrails = [];\nlet autoLogoutTimeout;\nlet trailWebUserTour = [];\nlet preventToggle = false;\n\nif (window.location.href.includes(\"https://www.and.co\")) {\n  document.querySelector(\"html\").style.zoom = \"100%\";\n}\n\nconst autoLogoutFunction = () => {\n  // // Clear interval\n  // clearInterval(autoLogoutTimeout);\n\n  // autoLogoutTimeout = setInterval(() => {\n  //   chrome.storage.local.get(\n  //     [\"isAuth\", \"autoLogoutTime\"],\n  //     async function (items) {\n  //       const logoutTime = items.autoLogoutTime;\n\n  //       if (!logoutTime) return;\n  //       // const logoutTime = parseInt(\n  //       //   window.localStorage.getItem(\"add-on-auto-lgout-tm\")\n  //       // );\n\n  //       if (items.isAuth && logoutTime < Date.now()) {\n  //         try {\n  //           // Call logout api\n  //           await logout();\n\n  //           chrome.runtime.sendMessage(\"\", { type: \"logout\" });\n  //           chrome.runtime.sendMessage({ badgeText: `` });\n  //           chrome.storage.local.set({\n  //             trail_web_user_tour: [],\n  //             notification: true,\n  //             closeContinue: false,\n  //           });\n  //           chrome.storage.local.clear();\n  //         } catch (err) {}\n  //       }\n  //     }\n  //   );\n  // }, 5000);\n\n  chrome.storage.local.get([\"isAuth\"], async function (items) {\n    if (items.isAuth) {\n      // Update auto logout time in chrome storage\n      chrome.storage.local.set({ autoLogoutTime: Date.now() + 3600000 });\n\n      // 1 hour = 3600000\n      // 30 min = 1800000\n      // 20 sec = 200000;\n    } else {\n      clearInterval(autoLogoutTimeout);\n    }\n  });\n};\n\nclass Main extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuOpen: false,\n      trail_web_user_tour: [],\n      modalSubscription: false,\n      modalCreateNewTrailModal: false,\n      currentUserId: null,\n      followerList: [],\n      closeContinue: false,\n      showSetting: false,\n      followedTrailUserData: null,\n      confirmationModal: {\n        show: false,\n        tourType: \"\",\n      },\n    };\n  }\n\n  async componentDidMount() {\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"trail_data_id\",\n        \"trail_id\",\n        \"userData\",\n        \"previewUserId\",\n        \"notification\",\n        \"saveSort\",\n        \"tourStep\",\n        \"closeContinue\",\n        \"isPreview\",\n        \"isPreviewSingleTrail\",\n        \"authorData\",\n        \"showSetting\",\n        \"followedTrailUserData\",\n        \"noStepsToWatch\",\n      ],\n      async (items) => {\n        let closeContinue = false;\n\n        if (\n          items.closeContinue &&\n          items.trail_web_user_tour &&\n          items.trail_web_user_tour.length > 0\n        ) {\n          closeContinue = true;\n        }\n\n        this.setState({\n          closeContinue: closeContinue,\n          currentUserId: items.userData._id,\n          followedTrailUserData: items.followedTrailUserData,\n        });\n        socket.on(\"connect\", () => {});\n\n        socket.emit(\"userId\", items.userData._id);\n\n        if (items.showSetting !== undefined && items.showSetting !== null) {\n          // Set show setting state\n          this.setState({ showSetting: items.showSetting });\n        }\n\n        chrome.storage.onChanged.addListener(async (changes) => {\n          if (\n            changes.tourType &&\n            changes.tourType.oldValue === \"preview\" &&\n            changes.tourType.newValue === \"\"\n          ) {\n            this.setState({ menuOpen: false });\n          }\n\n          if (changes.showSetting) {\n            // Set show setting state\n            this.setState({ showSetting: changes.showSetting.newValue });\n          }\n\n          if (\n            (changes.isPreview && changes.isPreview.newValue) ||\n            (changes.isPreviewSingleTrail &&\n              changes.isPreviewSingleTrail.newValue)\n          ) {\n            this.openMenu(\"preview\");\n          }\n\n          if (changes.closeContinue !== undefined) {\n            this.setState({ closeContinue: changes.closeContinue.newValue });\n          }\n\n          if (\n            changes.openButton &&\n            changes.openButton.newValue === \"ManageTrail\"\n          ) {\n            this.props.mainToggle();\n          }\n\n          if (\n            changes.currentTourType &&\n            changes.currentTourType.newValue === \"\" &&\n            changes.tourStep &&\n            changes.tourStep.newValue === \"\" &&\n            changes.tourType &&\n            changes.tourType.newValue === \"\"\n          ) {\n            chrome.storage.local.get(\n              [\n                \"trail_web_user_tour\",\n                \"userData\",\n                \"trail_id\",\n                \"previewUserId\",\n                \"notification\",\n                \"saveSort\",\n                \"tourStep\",\n                \"followedTrailUserData\",\n                \"noStepsToWatch\",\n                \"isPreview\",\n                \"currentTrailsTab\",\n              ],\n              async (items) => {\n                try {\n                  if (\n                    items.currentTrailsTab === \"Following\" &&\n                    items.followedTrailUserData\n                  ) {\n                    const data = {\n                      ...items,\n                      trail_id: items.trail_id,\n                      tourStep: items.tourStep,\n                      authorData: { ...items.followedTrailUserData },\n                      isPreview: items.isPreview,\n                      noStepsToWatch: items.noStepsToWatch,\n                    };\n\n                    await this.getCurrUserFollowedTrailData(data);\n                  } else {\n                    let data = { ...items };\n                    if (items.followedTrailUserData) {\n                      data = {\n                        ...items,\n                        trail_id: items.trail_id,\n                        tourStep: items.tourStep,\n                        userData: { ...items.followedTrailUserData },\n                        trail_web_user_tour: items.trail_web_user_tour,\n                      };\n                    }\n\n                    // Call common get user data function\n                    await this.getCurrUserDataCommon(data);\n                  }\n                } catch (err) {}\n              }\n            );\n          }\n        });\n\n        if (\n          document.URL.includes(\n            `${process.env.REACT_APP_NEW_MS1_DOMAIN}userTourDataDetail/readTrailit_trail_data_tour/`\n          ) &&\n          !items.saveSort\n        ) {\n          let previewUserId;\n          const url = new URL(document.URL);\n\n          // Remove notification\n          const data = {\n            // user_id: items.userData._id,\n            updateValue: {\n              flag: \"read\",\n            },\n            updated: new Date().getTime(),\n          };\n\n          try {\n            const notiRes = await updateNotification(data);\n            if (\n              notiRes.data.response &&\n              notiRes.data.response.statusCode === \"200\"\n            ) {\n              // Remove asterisk from trail icon\n              chrome.runtime.sendMessage(\"\", {\n                type: \"badgeText\",\n                badgeText: \"\",\n              });\n            }\n          } catch (err) {}\n\n          const params = new URLSearchParams(url.search.substring(1));\n          previewUserId = params.get(\"user_id\");\n          let trailId = params.get(\"trailId\");\n\n          // Get trails of preview user from database\n          let screen = resizeScreen() ? \"mobile\" : \"web\";\n          const res = await getUserOneTrail(trailId, screen);\n          const result = res.data;\n\n          if (\n            result.response &&\n            result.response.statusCode !== 404 &&\n            result.response.result.length > 0\n          ) {\n            result.response.result.forEach((el) => {\n              allTrails.push({\n                userId: previewUserId,\n                trail_data_id: el.trail_data_id,\n                url: el.url,\n                path: el.path,\n                selector: el.selector,\n                class: el.class,\n                title: el.title,\n                description: el.description,\n                web_url: el.web_url,\n                trail_id: el.trail_id,\n                type: el.type,\n                uniqueTarget: el.unique_target,\n                unique_target_one: el.unique_target_one,\n                mobile_media_type: el.mobile_media_type,\n                mobile_title: el.mobile_title,\n                mobile_description: el.mobile_description,\n                mediaType: el.media_type,\n                created: el.created,\n              });\n            });\n\n            // Get follow data of user from database\n            const followData = await getFollowTrails();\n            const followRes = followData.data;\n\n            if (\n              followRes.response.statusCode !== 404 ||\n              followRes.response.result !== \"Trailit follow not found\"\n            ) {\n              const follow =\n                followRes.response.result.count.length > 0 ? true : false;\n\n              obj.followingData = {\n                previewUserId,\n                follow,\n              };\n\n              chrome.storage.local.set({\n                followData: {\n                  previewUserId,\n                  follow,\n                },\n              });\n            }\n\n            preventToggle = true;\n            trailWebUserTour = allTrails;\n\n            chrome.storage.local.set({\n              trail_web_user_tour: allTrails,\n              previewUserId,\n            });\n\n            this.openMenu(\"preview\", previewUserId);\n          }\n        } else if (\n          items.userData &&\n          (typeof items.previewUserId === \"undefined\" ||\n            items.previewUserId === \"\") &&\n          !items.saveSort\n        ) {\n          if (preventToggle) {\n            preventToggle = false;\n          }\n\n          // For viewing followed trail data\n          if (items.followedTrailUserData) {\n            const data = {\n              ...items,\n              trail_id: items.trail_id,\n              tourStep: items.tourStep,\n              authorData: { ...items.followedTrailUserData },\n              isPreview: items.isPreview,\n              noStepsToWatch: items.noStepsToWatch,\n            };\n\n            await this.getCurrUserFollowedTrailData(data);\n          } else {\n            // For viewing preview trails from web-app or own trails\n            const data = {\n              trail_id: items.trail_id,\n              tourStep: items.tourStep,\n              userData: { ...items.authorData },\n              trail_web_user_tour: items.trail_web_user_tour,\n              noStepsToWatch: items.noStepsToWatch,\n              isPreview: items.isPreview,\n            };\n\n            if (items.isPreview) {\n              // Call get current user data common function\n              await this.getCurrUserDataCommon(data);\n            } else if (items.isPreviewSingleTrail) {\n              data.trail_data_id = items.trail_data_id;\n              await this.getSingleTrail(data);\n            } else {\n              // Call get current user data common function\n              await this.getCurrUserDataCommon(items);\n            }\n          }\n        }\n      }\n    );\n\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"tourStatus\",\n        \"tourType\",\n        \"tourStep\",\n        \"currentTourType\",\n        \"loadingCount\",\n        \"userData\",\n      ],\n      async function (items) {\n        this.setState({ trail_web_user_tour: items.trail_web_user_tour });\n        // trailWebUserTour = items.trail_web_user_tour;\n        this.setState({ menuOpen: true });\n        // Store totalTrails number in localStorage\n        localStorage.setItem(\n          process.env.REACT_APP_LOCALSTORAGE,\n          items.trail_web_user_tour ? this.state.trail_web_user_tour.length : 0\n        );\n\n        if (\n          (items.currentTourType === \"preview\" ||\n            items.currentTourType === \"\") &&\n          items.tourType === \"preview\" &&\n          items.tourStep !== \"\"\n        ) {\n          chrome.storage.local.set({ openButton: \"\", tourType: \"\" });\n        }\n\n        if (items.tourStep !== \"\" && items.currentTourType === \"preview\") {\n          if (items.trail_web_user_tour !== undefined) {\n            chrome.storage.local.set({\n              currentTourType:\n                items.trail_web_user_tour[items.tourStep - 1].type,\n            });\n          }\n        }\n\n        if (\n          (items.currentTourType === \"tooltip\" ||\n            items.currentTourType === \"video\") &&\n          items.tourType === \"preview\"\n        ) {\n          // this.props.downToggleButton(true);\n          // this.props.downToggleButton(true);\n        }\n\n        if (items.trail_web_user_tour !== undefined) {\n          this.setState({ trailList: items.trail_web_user_tour });\n        }\n\n        if (items.tourStatus !== undefined) {\n          this.setState({ tourStatus: items.tourStatus });\n        }\n      }.bind(this)\n    );\n\n    chrome.runtime.onMessage.addListener(this.onHandleSubscription);\n  }\n\n  async getCurrUserFollowedTrailData(items) {\n    try {\n      const trail_id = items.trail_id,\n        author_id = items.authorData._id,\n        loggedInUserId = get([\"userData\", \"_id\"], items);\n\n      let continueFlag = false,\n        step,\n        visited;\n\n      // Call get followed one trail function\n      const { data } = await getFollowedOneTrail(\n        trail_id,\n        author_id,\n        loggedInUserId\n      );\n\n      const handleSteps = (result) => {\n        if (get([\"response\", \"result\", \"steps\"], result)) {\n          return result.response.result.steps;\n        } else {\n          return result.response.result || [];\n        }\n      };\n\n      if (\n        data.response &&\n        data.response.statusCode !== 404 &&\n        handleSteps(data).length > 0\n      ) {\n        let index = get([\"steps\"], data.response.result, []).findIndex(\n          (step) =>\n            !get([\"visitedSteps\"], data.response.result, \"\")\n              .split(\",\")\n              .map((i) => Number(i))\n              .includes(step.trail_data_id)\n        );\n\n        const visitedSteps = get([\"visitedSteps\"], data.response.result, \"\")\n          .split(\",\")\n          .map((item) => Number(item));\n\n        const continueButton =\n          get([\"visitedSteps\"], data.response.result, \"\").split(\"\").length >\n            0 &&\n          !(\n            get([\"steps\"], data.response.result, []).length ===\n            get([\"visitedSteps\"], data.response.result, \"\").split(\",\").length\n          );\n\n        allTrails = handleSteps(data).map((el, i) => {\n          let flag = el.flag === \"continue\" ? \"\" : el.flag;\n\n          if (continueButton && visitedSteps.length - 1 === i) {\n            flag = \"continue\";\n            continueFlag = true;\n          }\n\n          visitedSteps.includes(el.trail_data_id)\n            ? (visited = true)\n            : (visited = false);\n\n          return {\n            userId: author_id,\n            trail_data_id: el.trail_data_id,\n            url: el.url,\n            path: el.path,\n            selector: el.selector,\n            class: el.class,\n            title: el.title,\n            description: el.description,\n            web_url: el.web_url,\n            trail_id: el.trail_id,\n            type: el.type,\n            uniqueTarget: el.unique_target,\n            unique_target_one: el.unique_target_one,\n            mobile_media_type: el.mobile_media_type,\n            mobile_title: el.mobile_title,\n            mobile_description: el.mobile_description,\n            mediaType: el.media_type,\n            created: el.created,\n            sortId: el.trail_sortId ? el.trail_sortId : \"\",\n            flag,\n            visited,\n          };\n        });\n\n        trailWebUserTour = [...allTrails];\n        obj.trailList = [...allTrails];\n      } else {\n        trailWebUserTour = [];\n        allTrails = [];\n      }\n\n      this.setState({\n        trail_web_user_tour: trailWebUserTour,\n        followedTrailUserData: items.followedTrailUserData\n          ? items.followedTrailUserData\n          : null,\n      });\n\n      const tourStep =\n        items.tourStep && items.tourStep !== \"\" ? items.tourStep : 1;\n\n      chrome.storage.local.set({\n        trail_id,\n        tourStep: tourStep,\n        trail_web_user_tour: allTrails,\n        closeContinue: continueFlag,\n      });\n    } catch (err) {}\n  }\n\n  async getCurrUserDataCommon(items) {\n    const user_id = items.userData._id;\n    let res,\n      continueFlag = false,\n      trail_id = items.trail_id;\n\n    try {\n      // Get user's trails from database\n      let screen = resizeScreen() ? \"mobile\" : \"web\";\n\n      res = await getUserOneTrail(trail_id, screen);\n\n      trailWebUserTour = items.trail_web_user_tour;\n    } catch (err) {}\n\n    const result = res.data;\n\n    const handleSteps = (result) => {\n      if (get([\"response\", \"result\", \"steps\"], result)) {\n        return result.response.result.steps;\n      } else {\n        return result.response.result || [];\n      }\n    };\n\n    if (\n      result.response &&\n      result.response.statusCode !== 404 &&\n      handleSteps(result).length > 0\n    ) {\n      allTrails = handleSteps(result).map((el) => {\n        if (el.flag === \"continue\") {\n          continueFlag = true;\n        }\n\n        return {\n          userId: user_id,\n          trail_data_id: el.trail_data_id,\n          url: el.url,\n          path: el.path,\n          selector: el.selector,\n          class: el.class,\n          title: el.title,\n          description: el.description,\n          web_url: el.web_url,\n          trail_id: el.trail_id,\n          type: el.type,\n          uniqueTarget: el.unique_target,\n          unique_target_one: el.unique_target_one,\n          mobile_media_type: el.mobile_media_type,\n          mobile_title: el.mobile_title,\n          mobile_description: el.mobile_description,\n          mediaType: el.media_type,\n          created: el.created,\n          sortId: el.trail_sortId ? el.trail_sortId : \"\",\n          flag: el.flag,\n        };\n      });\n    } else {\n      trailWebUserTour = [];\n      allTrails = [];\n    }\n\n    trailWebUserTour = allTrails;\n    obj.trailList = allTrails;\n\n    this.setState({\n      trail_web_user_tour: trailWebUserTour,\n      followedTrailUserData: items.followedTrailUserData\n        ? items.followedTrailUserData\n        : null,\n    });\n    chrome.storage.local.set({\n      trail_web_user_tour: allTrails,\n      tourStep: items.tourStep ? items.tourStep : \"\",\n      trail_id,\n      closeContinue: continueFlag,\n    });\n  }\n\n  async getSingleTrail(data) {\n    let res;\n    try {\n      res = await getSingleTrailData(data.trail_id, data.trail_data_id);\n    } catch (err) {}\n    if (\n      res.data &&\n      res.data.response &&\n      res.data.response.statusCode === \"200\"\n    ) {\n      let payload = { ...res.data.response.result };\n\n      let singleTrail = {\n        userId: data.userData.user_id,\n        trail_data_id: payload.trail_data_id,\n        url: payload.url,\n        path: payload.path,\n        selector: payload.selector,\n        class: payload.class,\n        title: payload.title,\n        description: payload.description,\n        web_url: payload.web_url,\n        trail_id: payload.trail_id,\n        type: payload.type,\n        uniqueTarget: payload.unique_target,\n        unique_target_one: payload.unique_target_one,\n        mobile_media_type: payload.mobile_media_type,\n        mobile_title: payload.mobile_title,\n        mobile_description: payload.mobile_description,\n        mediaType: payload.media_type,\n        created: payload.created,\n        sortId: payload.trail_sortId ? payload.trail_sortId : \"\",\n        flag: payload.flag,\n      };\n\n      this.setState({ trail_web_user_tour: [singleTrail] });\n\n      chrome.storage.local.get(\n        [\"trail_id\", \"userData\", \"tourStep\", \"isPreviewSingleTrail\"],\n        (storage) => {\n          if (data.loggedInData) {\n            chrome.storage.local.set({\n              trail_web_user_tour: [payload],\n              tourStep: storage.tourStep ? storage.tourStep : \"\",\n              trail_id: data.trail_id,\n              old_trail_id: storage.trail_id,\n              old_user_data: { ...storage.userData },\n              isPreviewSingleTrail: false,\n              webUrl: \"\",\n              userData: { ...data.loggedInData },\n              authorData: { ...data.userData },\n            });\n          } else {\n            chrome.storage.local.set({\n              tourStep: data.tourStep ? data.tourStep : \"\",\n              trail_id: data.trail_id,\n            });\n          }\n        }\n      );\n    }\n  }\n\n  componentWillUnmount() {\n    chrome.storage.local.set({ loadingCount: 0, showSetting: false });\n  }\n\n  onHandleSubscription = async (msObj) => {\n    if (msObj.status === \"removeMenuPopButton\") {\n      this.props.onChangeTourType(\"\");\n      this.props.mainToggle();\n\n      if (app && app.style && app.style.display === \"block\") {\n        setTimeout(() => {\n          app.style.display = \"none\";\n        }, 1000);\n      }\n    }\n\n    if (msObj.message === \"urlChanged\") {\n      if (!this.state.menuOpen) {\n        this.setState({ menuOpen: true });\n      }\n    }\n\n    if (msObj.subject === \"updateTimeout\") {\n      // Auto logout function\n      autoLogoutFunction();\n    }\n\n    if (msObj.subject === \"DOMInfo\") {\n      chrome.storage.local.get(\n        [\n          \"userData\",\n          \"trail_id\",\n          \"tourStep\",\n          \"trail_web_user_tour\",\n          \"isPreview\",\n          \"authorData\",\n          \"isPreviewSingleTrail\",\n          \"trail_data_id\",\n          \"noStepsToWatch\",\n          \"followedTrailUserData\",\n        ],\n        async (items) => {\n          // For viewing followed trail data\n          if (items.followedTrailUserData) {\n            const data = {\n              ...items,\n              trail_id: items.trail_id,\n              authorData: { ...items.followedTrailUserData },\n              isPreview: items.isPreview,\n              noStepsToWatch: items.noStepsToWatch,\n            };\n\n            return await this.getCurrUserFollowedTrailData(data);\n          }\n\n          // For viewing preview trail data from web-app or own trails\n          const data = {\n            trail_id: items.trail_id,\n            tourStep: items.tourStep,\n            userData: { ...items.authorData },\n            trail_web_user_tour: items.trail_web_user_tour,\n            noStepsToWatch: items.noStepsToWatch,\n            isPreview: items.isPreview,\n          };\n\n          if (items.isPreview) {\n            // Call get current user data common function\n            await this.getCurrUserDataCommon(data);\n          } else if (items.isPreviewSingleTrail) {\n            data.trail_data_id = items.trail_data_id;\n            await this.getSingleTrail(data);\n          } else {\n            // Call get current user data common function\n            await this.getCurrUserDataCommon(items);\n          }\n        }\n      );\n\n      this.setState({ menuOpen: true });\n    }\n\n    chrome.storage.local.get(\n      [\"closeContinue\"],\n      async function (items) {\n        this.setState({\n          closeContinue:\n            items.closeContinue === undefined ? false : items.closeContinue,\n        });\n      }.bind(this)\n    );\n\n    if (msObj.subject === \"CreateTrail\") {\n      this.onToggleCreateNewTrailModal(true);\n    }\n\n    if (msObj.subject === \"DOMObj\") {\n      let allUserData = await getAllUser();\n      chrome.storage.local.get([\"userData\"], async function (items) {\n        socket.emit(\"userId\", items.userData._id);\n      });\n\n      socket.on(\"followerList\", (data) => {\n        if (allUserData.status === 200) {\n          let follower = data.map((result) => {\n            let findFollower = allUserData.data.data.response.find(\n              (r) => r._id === result\n            );\n            return findFollower.email;\n          });\n          this.setState({ followerList: follower });\n        }\n      });\n\n      this.onToggleSubscription(true);\n    }\n  };\n\n  // Get all notification of user\n  userNotificaion() {\n    chrome.storage.local.get([\"userData\"], async (items) => {\n      // Get notification count from database\n      const data = {\n        // user_id: items.userData._id,\n        flag: \"unread\",\n      };\n\n      try {\n        const res = await getAllNotification(data);\n\n        if (res.data.response && res.data.response.statusCode === \"200\") {\n          // Set count of notification in chrome runtime\n          chrome.runtime.sendMessage(\"\", {\n            type: \"budgeText\",\n            badgeText: `${res.data.response.result.length}`,\n          });\n        }\n      } catch (err) {}\n    });\n  }\n\n  // Get new notification of client from server and send it to chrome notification\n  getNewNotification = () => {\n    chrome.runtime.sendMessage(\"\", {\n      type: \"notification\",\n      options: {\n        title: \"Just wanted to notify you\",\n        message: \"How great it is!\",\n        iconUrl:\n          \"https://ca.slack-edge.com/TC9UZTSLX-UC8TZ2210-f65b94665589-48\",\n        type: \"basic\",\n      },\n    });\n  };\n\n  // On media tour tour select\n  onMediaTourSelect = (tourType) => {\n    // Set confirmation modal state\n    this.setState({\n      confirmationModal: {\n        show: true,\n        tourType,\n      },\n    });\n  };\n\n  // On confirmation modal close\n  confirmationModalClose = () => {\n    // Set confirmation modal state\n    this.setState({\n      confirmationModal: {\n        show: false,\n        tourType: \"\",\n      },\n    });\n  };\n\n  // On select tour type click\n  onTourTypeSelect = (tourType, tourStep) => {\n    // Call close confirmation modal\n    this.confirmationModalClose();\n\n    setTimeout(() => {\n      if (tourStep === `${tourType} Modal`) {\n        this.openMenu(\"modal\", undefined, undefined, tourType);\n      } else {\n        this.openMenu(tourType);\n      }\n    }, 400);\n  };\n\n  openMenu = async (type, previewId, closeContinue, stepType) => {\n    // console.log(\"type\", type);\n\n    let mainObj = {},\n      objStatus = true;\n\n    if (\n      document.URL.includes(\"https://twitter.com\") &&\n      (type === \"video\" || type === \"audio\")\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    } else if (\n      document.URL.includes(\n        `${process.env.REACT_APP_NEW_MS1_DOMAIN}userTourDataDetail/readTrailit_trail_data_tour/`\n      ) &&\n      previewId !== \"\" &&\n      (type === \"video\" || type === \"audio\" || type === \"tooltip\")\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    } else if (\n      document.URL.includes(\"https://docs.google.com\") &&\n      type === \"tooltip\"\n    ) {\n      alert(`We don't have permission to add ${type} in this site`);\n      return \"\";\n    }\n\n    switch (type) {\n      case \"tooltip\":\n        mainObj.tourType = \"tooltip\";\n        // this.props.toggle();\n        this.props.mainToggle(true);\n        break;\n      case \"Make Edit\":\n        mainObj.tourType = \"Make Edit\";\n        this.props.mainToggle(true);\n        break;\n      case \"modal\":\n        mainObj.tourType = \"modal\";\n        mainObj.stepType = stepType;\n        chrome.runtime.sendMessage(\"\", {\n          type: \"chromeModal\",\n          status: true,\n        });\n        this.props.mainToggle(true);\n        break;\n      case \"video\":\n        mainObj.tourType = \"video\";\n        this.props.mainToggle(true);\n        break;\n      case \"preview\":\n        mainObj.tourType = \"preview\";\n        objStatus = false;\n        chrome.storage.local.get(\n          [\n            \"trail_web_user_tour\",\n            \"userData\",\n            \"isPreview\",\n            \"webUrl\",\n            \"continueTourStepId\",\n          ],\n          async function (items) {\n            let trail_web_user_tour = items.trail_web_user_tour;\n\n            if (trail_web_user_tour && trail_web_user_tour.length > 0) {\n              this.setState({ trail_web_user_tour: items.trail_web_user_tour });\n              let tour = {};\n\n              trail_web_user_tour.forEach((el, i) => {\n                if (el.flag === \"continue\" && !items.isPreview) {\n                  tour = {\n                    tourStep: i + 1,\n                    currentTourType: el.type,\n                    tourType: el.tourType,\n                    url: el.url,\n                  };\n                }\n                if (items.isPreview && items.continueTourStepId) {\n                  tour = {\n                    tourStep: items.continueTourStepId + 1,\n                    currentTourType:\n                      trail_web_user_tour[items.continueTourStepId].type,\n                    tourType:\n                      trail_web_user_tour[items.continueTourStepId].tourType,\n                    url: trail_web_user_tour[items.continueTourStepId].url,\n                  };\n                }\n              });\n\n              if (tour.url) {\n                if (closeContinue !== undefined) {\n                  let tourTData =\n                    trail_web_user_tour[\n                      trail_web_user_tour.length === tour.tourStep\n                        ? 0\n                        : tour.tourStep\n                    ];\n                  tour = {\n                    tourStep:\n                      trail_web_user_tour.length === tour.tourStep\n                        ? 1\n                        : tour.tourStep + 1,\n                    currentTourType: tourTData.type,\n                    tourType: \"preview\",\n                    url: tourTData.url,\n                  };\n                }\n              }\n\n              chrome.storage.local.set({\n                openButton: \"CreateTrail\",\n                tourStep: tour.tourStep ? tour.tourStep : 1,\n                currentTourType: tour.currentTourType\n                  ? tour.currentTourType\n                  : trail_web_user_tour[0].type,\n                tourType: tour.tourType ? tour.tourType : \"preview\",\n              });\n\n              if (\n                tour.url &&\n                !matchUrl(tour.url, document.URL) &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"true\" });\n                chrome.runtime.sendMessage(\"\", {\n                  type: \"openInTab\",\n                  url: tour.url,\n                });\n              } else if (\n                !tour.url &&\n                !matchUrl(trail_web_user_tour[0].url, document.URL) &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"true\" });\n                chrome.runtime.sendMessage(\"\", {\n                  type: \"openInTab\",\n                  url: trail_web_user_tour[0].url,\n                });\n              } else if (\n                !tour.url &&\n                matchUrl(trail_web_user_tour[0].url, document.URL) &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"false\" });\n              } else if (\n                tour.url &&\n                matchUrl(tour.url, document.URL) &&\n                (closeContinue !== undefined || closeContinue === undefined)\n              ) {\n                // Set loading state to false\n                chrome.storage.local.set({ loading: \"false\" });\n              }\n            } else {\n              if (trail_web_user_tour && trail_web_user_tour.length > 0) {\n                chrome.storage.local.set({\n                  openButton: \"CreateTrail\",\n                  tourStep: 1,\n                  currentTourType: \"preview\",\n                });\n              } else {\n                if (items.isPreview && items.webUrl === document.URL) {\n                  chrome.storage.local.set({\n                    isPreview: false,\n                    webUrl: \"\",\n                  });\n\n                  alert(\"No trails to preview!\");\n                } else if (!items.isPreview) {\n                  alert(\"There are no trails, Please create the trails\");\n                }\n              }\n            }\n            if (\n              !preventToggle &&\n              trail_web_user_tour &&\n              trail_web_user_tour.length > 0\n            ) {\n              this.props.onChangeTourType(mainObj.tourType);\n              this.props.mainToggle(true);\n            }\n          }.bind(this)\n        );\n\n        break;\n      case \"\":\n        this.setState({\n          menuOpen: !this.state.menuOpen,\n        });\n        break;\n      case \"audio\":\n        mainObj.tourType = \"audio\";\n        this.props.mainToggle(true);\n        break;\n      default:\n        break;\n    }\n\n    if (mainObj.tourType && objStatus) {\n      if (mainObj.stepType && mainObj.stepType !== \"\") {\n        chrome.storage.local.set({\n          openButton: \"CreateTrail\",\n          currentTourType: \"preview\",\n          stepType: mainObj.stepType,\n          tourType: mainObj.tourType === undefined ? \"\" : mainObj.tourType,\n        });\n      } else {\n        chrome.storage.local.set({\n          openButton: \"CreateTrail\",\n          currentTourType: \"preview\",\n          tourType: mainObj.tourType === undefined ? \"\" : mainObj.tourType,\n        });\n      }\n    }\n\n    if (mainObj.tourType !== \"preview\") {\n      this.props.onChangeTourType(mainObj.tourType);\n    } else {\n    }\n  };\n\n  onToggleSubscription = (modalSubscription) => {\n    this.setState({ modalSubscription });\n  };\n\n  onToggleCreateNewTrailModal = (modalCreateNewTrailModal) => {\n    this.setState({ modalCreateNewTrailModal });\n  };\n\n  onContinueTour = (e) => {\n    this.openMenu(\"preview\", \"\", \"closeContinue\");\n  };\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { currentUserId } = this.state;\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"userData\",\n        \"previewUserId\",\n        \"notification\",\n        \"saveSort\",\n        \"tourStep\",\n        \"closeContinue\",\n      ],\n      async (items) => {\n        if (\n          items.trail_web_user_tour != undefined &&\n          items.trail_web_user_tour.length == 0\n        ) {\n          alert(\"Please create trail\");\n          return null;\n        }\n\n        let trail_web_user_tour = items.trail_web_user_tour;\n\n        const trailId = trail_web_user_tour[0].trail_id;\n        const URL = trail_web_user_tour[0].url;\n        let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n        const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currentUserId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\n        function copyStringToClipboard(str) {\n          // Create new element\n          var el = document.createElement(\"textarea\");\n\n          // Set value (string to be copied)\n          el.value = str;\n\n          // Set non-editable to avoid focus and move outside of view\n          el.setAttribute(\"readonly\", \"\");\n          el.style = { position: \"absolute\", left: \"-9999px\" };\n          document.body.appendChild(el);\n\n          // Select text inside element\n          el.select();\n\n          // Copy text to clipboard\n          document.execCommand(\"copy\");\n\n          // Remove temporary element\n          document.body.removeChild(el);\n        }\n\n        alert(\"Successfully copied\");\n        copyStringToClipboard(trailUrl);\n      }\n    );\n  };\n\n  hideSettingModal() {\n    // Set chrome storage\n    chrome.storage.local.set({ showSetting: false });\n\n    // Set show setting state\n    // this.setState({ showSetting: false });\n  }\n\n  disableTooltipTourButton = () => {\n    if (matchUrl(\"https://imgur.com/\", document.URL)) return true;\n    if (document.URL.includes(\"https://www.reddit.com\")) return true;\n    if (document.URL.includes(\"https://twitter.com\")) return true;\n    if (document.URL.includes(\"https://docs.google.com\")) return true;\n    if (document.URL.includes(\"https://www.youtube.com\")) return true;\n\n    return false;\n  };\n\n  disableMediaTourButton = () => {\n    if (document.URL.includes(\"https://twitter.com\")) return true;\n\n    return false;\n  };\n\n  render() {\n    const {\n      menuOpen,\n      showSetting,\n      followerList,\n      closeContinue,\n      modalSubscription,\n      confirmationModal,\n      followedTrailUserData,\n      modalCreateNewTrailModal,\n    } = this.state;\n\n    // Auto logout function\n    autoLogoutFunction();\n\n    return (\n      <>\n        <style>{main1Css}</style>\n        <style>{main2Css}</style>\n        <div id=\"my-extension-root\">\n          {showSetting && (\n            <TrailSetting\n              show={showSetting}\n              hideModal={this.hideSettingModal}\n            />\n          )}\n          {confirmationModal.show && (\n            <CreateTourConfirmationModal\n              data={confirmationModal}\n              onModalClose={this.confirmationModalClose}\n              onTourSelect={this.onTourTypeSelect}\n            />\n          )}\n\n          <div\n            className={`my-extension ${\n              resizeScreen() && \"my-extension-mobile\"\n            } ${closeContinue && closeContinue}`}\n          >\n            {closeContinue && (\n              <button\n                className=\"trail_continue_btn\"\n                onClick={this.onContinueTour}\n              >\n                Continue\n              </button>\n            )}\n            <MySubscription\n              open={modalSubscription}\n              toggle={this.onToggleSubscription}\n              followerList={followerList}\n            />\n            <CreateNewTrailModal\n              open={modalCreateNewTrailModal}\n              toggle={this.onToggleCreateNewTrailModal}\n              followerList={followerList}\n            />\n\n            {/* <div className={`wrap open ${menuOpen ? 'createMenu': ''}`}> */}\n            <div className={`wrap open ${menuOpen ? \"createMenu\" : \"\"}`}>\n              {/* Preview Button */}\n              <button\n                className=\"blob\"\n                onClick={(e) => this.openMenu(\"preview\")}\n                data-title=\"View Trail\"\n              >\n                <svg\n                  width=\"40\"\n                  height=\"30\"\n                  viewBox=\"0 0 40 30\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M20.4531 20.0751C23.3699 20.0751 25.7344 17.7433 25.7344 14.8668C25.7344 11.9903 23.3699 9.65845 20.4531 9.65845C17.5364 9.65845 15.1719 11.9903 15.1719 14.8668C15.1719 17.7433 17.5364 20.0751 20.4531 20.0751Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M39.8757 14.4097C38.3466 10.3186 35.6921 6.78068 32.2403 4.23311C28.7885 1.68554 24.6906 0.240019 20.4531 0.0751953C16.2157 0.240019 12.1178 1.68554 8.66595 4.23311C5.21411 6.78068 2.55963 10.3186 1.03057 14.4097C0.927309 14.7051 0.927309 15.0286 1.03057 15.3241C2.55963 19.4151 5.21411 22.953 8.66595 25.5006C12.1178 28.0482 16.2157 29.4937 20.4531 29.6585C24.6906 29.4937 28.7885 28.0482 32.2403 25.5006C35.6921 22.953 38.3466 19.4151 39.8757 15.3241C39.9789 15.0286 39.9789 14.7051 39.8757 14.4097ZM20.4531 23.6074C18.7818 23.6074 17.1481 23.0948 15.7584 22.1343C14.3688 21.1739 13.2857 19.8088 12.6461 18.2117C12.0065 16.6146 11.8392 14.8572 12.1653 13.1617C12.4913 11.4662 13.2961 9.90876 14.4779 8.68637C15.6597 7.46399 17.1654 6.63153 18.8046 6.29428C20.4438 5.95702 22.1428 6.13012 23.6869 6.79167C25.231 7.45322 26.5507 8.57351 27.4792 10.0109C28.4078 11.4483 28.9034 13.1381 28.9034 14.8669C28.8999 17.1839 28.0085 19.405 26.4246 21.0434C24.8406 22.6818 22.6932 23.6038 20.4531 23.6074Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>Preview</span> */}\n              </button>\n\n              {/* Tooltip */}\n              <button\n                className=\"blob create_tooltip_button\"\n                onClick={(e) => this.openMenu(\"tooltip\")}\n                data-title=\"Tooltip\"\n                disabled={\n                  this.disableTooltipTourButton() || followedTrailUserData\n                }\n              >\n                <svg\n                  width=\"40\"\n                  height=\"40\"\n                  viewBox=\"0 0 40 40\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M26 13.9998H22V9.99986C22 9.46943 21.7893 8.96073 21.4142 8.58567C21.0391 8.2106 20.5304 7.99989 20 7.99989C19.4696 7.99989 18.9609 8.2106 18.5858 8.58567C18.2107 8.96073 18 9.46943 18 9.99986V13.9998H14C13.4696 13.9998 12.9609 14.2105 12.5858 14.5856C12.2107 14.9607 12 15.4694 12 15.9998C12 16.5302 12.2107 17.0389 12.5858 17.414C12.9609 17.789 13.4696 17.9997 14 17.9997H18V21.9997C18 22.5301 18.2107 23.0388 18.5858 23.4139C18.9609 23.789 19.4696 23.9997 20 23.9997C20.5304 23.9997 21.0391 23.789 21.4142 23.4139C21.7893 23.0388 22 22.5301 22 21.9997V17.9997H26C26.5304 17.9997 27.0391 17.789 27.4142 17.414C27.7893 17.0389 28 16.5302 28 15.9998C28 15.4694 27.7893 14.9607 27.4142 14.5856C27.0391 14.2105 26.5304 13.9998 26 13.9998ZM34 0H6C4.4087 0 2.88258 0.632132 1.75736 1.75733C0.632141 2.88254 0 4.40864 0 5.99992V25.9996C0 27.5909 0.632141 29.117 1.75736 30.2422C2.88258 31.3674 4.4087 31.9996 6 31.9996H29.18L36.58 39.4194C36.7669 39.6048 36.9885 39.7515 37.2322 39.851C37.4759 39.9505 37.7368 40.001 38 39.9994C38.2624 40.0062 38.5226 39.9514 38.76 39.8394C39.1252 39.6894 39.4379 39.4346 39.6586 39.1072C39.8792 38.7797 39.998 38.3943 40 37.9995V5.99992C40 4.40864 39.3679 2.88254 38.2426 1.75733C37.1174 0.632132 35.5913 0 34 0ZM36 33.1795L31.42 28.5796C31.2331 28.3942 31.0115 28.2476 30.7678 28.1481C30.5241 28.0485 30.2632 27.9981 30 27.9996H6C5.46957 27.9996 4.96086 27.7889 4.58579 27.4138C4.21071 27.0388 4 26.5301 4 25.9996V5.99992C4 5.46949 4.21071 4.96079 4.58579 4.58572C4.96086 4.21066 5.46957 3.99994 6 3.99994H34C34.5304 3.99994 35.0391 4.21066 35.4142 4.58572C35.7893 4.96079 36 5.46949 36 5.99992V33.1795Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>ToolTip</span> */}\n              </button>\n\n              {/* Create Modal */}\n              <button\n                className=\"blob create_video_button\"\n                onClick={(e) => this.onMediaTourSelect(\"video\")}\n                data-title=\"Video\"\n                disabled={\n                  this.disableMediaTourButton() || followedTrailUserData\n                }\n              >\n                <svg\n                  width=\"41\"\n                  height=\"29\"\n                  viewBox=\"0 0 41 29\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M18.8779 6.55304H14.8779V12.553H8.87793V16.553H14.8779V22.553H18.8779V16.553H24.8779V12.553H18.8779V6.55304Z\"\n                    fill=\"white\"\n                  />\n                  <path\n                    d=\"M32.8789 4.55298C32.8789 2.34698 31.0849 0.552979 28.8789 0.552979H4.87891C2.67291 0.552979 0.878906 2.34698 0.878906 4.55298V24.553C0.878906 26.759 2.67291 28.553 4.87891 28.553H28.8789C31.0849 28.553 32.8789 26.759 32.8789 24.553V17.887L40.8789 24.553V4.55298L32.8789 11.219V4.55298ZM28.8809 24.553H4.87891V4.55298H28.8789V14.553L28.8809 24.553Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n                {/* <span>Video</span> */}\n              </button>\n              {/* )} */}\n\n              <button className=\"menu\" onClick={(e) => this.openMenu(\"\")}>\n                <img\n                  alt=\"tour_menu\"\n                  className=\"trail_plus trail_edit_v2\"\n                  src={require(`./images/trailit_X_button_new.png`)}\n                />\n              </button>\n              {/* {!document.URL.includes(\"https://twitter.com\") && ( */}\n              <React.Fragment>\n                {/* Create Video */}\n                <button\n                  className=\"blob create_audio_button\"\n                  onClick={(e) => this.onMediaTourSelect(\"audio\")}\n                  data-title=\"Audio\"\n                  disabled={\n                    this.disableMediaTourButton() || followedTrailUserData\n                  }\n                >\n                  <svg\n                    className=\"audio_svg\"\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"48\"\n                    height=\"48\"\n                    viewBox=\"0 0 48 48\"\n                  >\n                    <g\n                      id=\"Group_471\"\n                      data-name=\"Group 471\"\n                      transform=\"translate(11717 4613)\"\n                    >\n                      <circle\n                        id=\"Ellipse_101\"\n                        data-name=\"Ellipse 101\"\n                        cx=\"24\"\n                        cy=\"24\"\n                        r=\"24\"\n                        transform=\"translate(-11717 -4613)\"\n                        fill=\"#fff\"\n                      />\n                      <g\n                        id=\"audio-interface-speaker-symbol\"\n                        transform=\"translate(-11707 -4671.857)\"\n                      >\n                        <g\n                          id=\"Group_282\"\n                          data-name=\"Group 282\"\n                          transform=\"translate(0 72.857)\"\n                        >\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_111\"\n                            data-name=\"Path 111\"\n                            d=\"M3.9,86.838l9.831,5.992V72.857L3.9,78.849H1.3A1.3,1.3,0,0,0,0,80.181v5.327A1.3,1.3,0,0,0,1.3,86.84H3.9ZM1.248,80.1H3.9l8.586-4.746v14.98L3.9,85.486H1.248Z\"\n                            transform=\"translate(0 -72.857)\"\n                            fill=\"#ffffff\"\n                            className=\"svg_btn\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_112\"\n                            data-name=\"Path 112\"\n                            d=\"M349.714,171.382v1.387a7.074,7.074,0,0,0,0-12.483v1.387s2.5,1.059,2.5,4.855S349.714,171.382,349.714,171.382Z\"\n                            transform=\"translate(-334.734 -156.541)\"\n                            fill=\"#ffffff\"\n                            className=\"svg_btn\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_113\"\n                            data-name=\"Path 113\"\n                            d=\"M524.571,117.829v1.648s3.745-1.8,3.745-8.738S524.571,102,524.571,102v1.62s2.5,1.378,2.5,7.118S524.571,117.829,524.571,117.829Z\"\n                            transform=\"translate(-502.101 -100.752)\"\n                            className=\"svg_btn\"\n                            fill=\"#ffffff\"\n                          />\n                          <path\n                            stroke-width=\"0\"\n                            id=\"Path_114\"\n                            data-name=\"Path 114\"\n                            d=\"M437.143,144.543v1.58s3.745-2.06,3.745-7.49-3.745-7.49-3.745-7.49v1.528s2.5,1.624,2.5,5.962S437.143,144.543,437.143,144.543Z\"\n                            transform=\"translate(-418.418 -128.647)\"\n                            className=\"svg_btn\"\n                            fill=\"#ffffff\"\n                          />\n                        </g>\n                      </g>\n                    </g>\n                  </svg>\n                  {/* <span>Create Audio</span> */}\n                </button>\n              </React.Fragment>\n\n              <button\n                className=\"blob\"\n                data-title=\"Edit\"\n                onClick={(e) => this.openMenu(\"Make Edit\")}\n                disabled={followedTrailUserData}\n              >\n                <svg\n                  width=\"40\"\n                  height=\"29\"\n                  viewBox=\"0 0 40 29\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M0 0V4.12698H24.1631V0H0ZM0 8.25397V12.381H24.1631V8.25397H0ZM36.3252 8.52222C36.0433 8.52222 35.7614 8.64603 35.5399 8.87302L33.5263 10.9365L37.6542 15.1667L39.6678 13.1032C40.1107 12.6698 40.1107 11.9476 39.6678 11.5143L37.0904 8.87302C36.9923 8.76493 36.874 8.67817 36.7426 8.6179C36.6111 8.55763 36.4692 8.52509 36.3252 8.52222ZM32.3584 12.1333L20.1359 24.6381V28.8889H24.2839L36.4863 16.3635L32.3584 12.1333ZM0 16.5079V20.6349H16.1087V16.5079H0Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </button>\n\n              {/* Share Trail Button */}\n              <button\n                className=\"blob\"\n                onClick={this.copyWebApplink}\n                data-title=\"Share\"\n              >\n                <svg\n                  width=\"40\"\n                  height=\"36\"\n                  viewBox=\"0 0 40 36\"\n                  fill=\"none\"\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                >\n                  <path\n                    d=\"M3.75 0C1.7 0 0 1.70201 0 3.75443V31.2869C0 33.3393 1.7 35.0413 3.75 35.0413H26.25C28.3 35.0413 30 33.3393 30 31.2869V25.0295H25V30.0354H5V5.0059H15V0H3.75ZM30 0V5.0059C19.75 5.0059 11.5 12.715 10.3 22.6767C11.35 18.2715 15.25 15.0177 20 15.0177H30V20.0236L40 10.0118L30 0Z\"\n                    fill=\"white\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nlet popoverCount = 0;\nlet defaultComp;\nlet flipped;\nlet tourUrl;\n\nclass DefaultButton extends React.PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      trailList: [],\n      tourStatus: \"continue\",\n      tourType: \"\",\n      tourStep: \"\",\n      stepType: \"\",\n      currentTourType: \"\",\n      web_url: \"\",\n      tourSide: \"next\",\n      message: \"\",\n      overlay: false,\n      loading: false,\n      fileLoading: false,\n      fileAddStatus: false,\n      title: \"\",\n      currUserId: null,\n      follow: false,\n      publishButtonShow: false,\n      publishLoader: false,\n      count: 0,\n      saveSort: false,\n      fileName: \"\",\n      createModalOpen: false,\n      hideNav: false,\n      rowData: {},\n      MobileTargetNotFound: {},\n      deleteModal: {\n        id: null,\n        title: null,\n        show: false,\n        trail: false,\n      },\n      sendTipModal: false,\n      isLoading: false,\n      sendLoader: false,\n      isSuccess: false,\n      onDone: false,\n      setError: null,\n      isDraggable: false,\n      draggable: true,\n      dragPosition: { x: 0, y: 0 },\n      dynamicPopupButton: true,\n      trailName: \"\",\n      openSidebar: false,\n      currentTrailsTab: \"My Trails\",\n      previewModalRef: false,\n      audioRef: false,\n      videoRef: false,\n      tooltipRef: false,\n      targetDataNotFound: false,\n      isTourLoading: false,\n      titleInvalid: false,\n      fileNameInvalid: false,\n    };\n\n    this.previewModalRef = React.createRef();\n\n    this.onDeleteButtonClick = this.onDeleteButtonClick.bind(this);\n  }\n\n  onTourLoading = (value) => {\n    // Set state\n    this.setState({ isTourLoading: value });\n  };\n\n  // Hide send tip modal\n  onSendTipModalClose = () => {\n    // Hide send tip modal\n    this.setState({\n      sendTipModal: false,\n      sendLoader: false,\n      isLoading: false,\n    });\n  };\n\n  // Show send tip modal\n  onSendTipModalOpen = () => {\n    // Show send tip modal\n    this.setState({ sendTipModal: true });\n  };\n\n  // Hide delete modal\n  onDeleteModalClose = () => {\n    // Delete modal state to false\n    this.setState({\n      deleteModal: {\n        id: null,\n        show: false,\n        title: null,\n        trail: false,\n      },\n    });\n\n    chrome.storage.local.set({\n      trailDeleteModal: {\n        value: \"close\",\n        title: \"\",\n        id: \"\",\n      },\n    });\n  };\n\n  // Show delete modal\n  onDeleteModalOpen = (title, id, trail) => {\n    // Delete modal state to true\n    this.setState({\n      deleteModal: {\n        id,\n        title,\n        trail,\n        show: true,\n      },\n    });\n  };\n\n  // On delete button click\n  async onDeleteButtonClick() {\n    try {\n      // Set state\n      this.setState({ onDone: true });\n\n      const { id, trail } = this.state.deleteModal;\n\n      if (trail) {\n        // Delete trail by id\n        await deleteSingleTrail(id);\n\n        chrome.storage.local.get([\"trail_id\"], async (items) => {\n          if (items.trail_id && items.trail_id === id) {\n            // Close menu\n            toggle();\n          }\n        });\n\n        // Set state\n        this.setState({ onDone: false });\n      } else {\n        // Delete step by id\n        const { data } = await deleteTrail(id);\n\n        if (data.response && data.response.statusCode === \"200\") {\n          chrome.storage.local.get(\n            [\n              \"userData\",\n              \"trail_id\",\n              \"trail_web_user_tour\",\n              \"noStepsToWatch\",\n              \"isPreview\",\n            ],\n            async (items) => {\n              // Call common get user data function\n              await this.getCurrUserDataCommon(items);\n\n              // Set state\n              this.setState({ onDone: false });\n            }\n          );\n        }\n      }\n\n      // Call on delete modal close to hide modal\n      this.onDeleteModalClose();\n    } catch (err) {}\n  }\n\n  async getSingleTrail(data) {\n    let res;\n    try {\n      res = await getSingleTrailData(data.trail_id, data.trail_data_id);\n    } catch (err) {}\n\n    if (\n      res.data &&\n      res.data.response &&\n      res.data.response.statusCode === \"200\"\n    ) {\n      let response = { ...res.data.response.result };\n      let payload = {\n        userId: data.userData.user_id,\n        trail_data_id: response.trail_data_id,\n        url: response.url,\n        path: response.path,\n        selector: response.selector,\n        class: response.class,\n        title: response.title,\n        description: response.description,\n        web_url: response.web_url,\n        trail_id: response.trail_id,\n        type: response.type,\n        uniqueTarget: response.unique_target,\n        unique_target_one: response.unique_target_one,\n        mobile_media_type: response.mobile_media_type,\n        mobile_title: response.mobile_title,\n        mobile_description: response.mobile_description,\n        mediaType: response.media_type,\n        created: response.created,\n        sortId: response.trail_sortId ? response.trail_sortId : \"\",\n        flag: response.flag,\n      };\n\n      chrome.storage.local.get(\n        [\"trail_id\", \"userData\", \"tourStep\", \"isPreviewSingleTrail\"],\n        (storage) => {\n          if (data.loggedInData) {\n            chrome.storage.local.set({\n              trail_web_user_tour: [payload],\n              tourStep: storage.tourStep ? storage.tourStep : \"\",\n              trail_id: data.trail_id,\n              old_trail_id: storage.trail_id,\n              old_user_data: { ...storage.userData },\n              isPreviewSingleTrail: false,\n              trail_data_id: data.trail_data_id,\n              webUrl: \"\",\n              userData: { ...data.loggedInData },\n              authorData: { ...data.userData },\n            });\n          } else {\n            chrome.storage.local.set({\n              tourStep: data.tourStep ? data.tourStep : \"\",\n              trail_id: data.trail_id,\n            });\n          }\n        }\n      );\n\n      return payload;\n    }\n  }\n\n  async getCurrUserDataCommon(items) {\n    const user_id = items.userData._id;\n    let res,\n      continueFlag = false,\n      trail_id = items.trail_id;\n\n    try {\n      // Get user's trails from database\n      let screen = resizeScreen() ? \"mobile\" : \"web\";\n\n      res = await getUserOneTrail(trail_id, screen);\n\n      trailWebUserTour = items.trail_web_user_tour;\n    } catch (err) {}\n\n    const handleSteps = (result) => {\n      if (get([\"response\", \"result\", \"steps\"], result)) {\n        return result.response.result.steps;\n      } else {\n        return result.response.result || [];\n      }\n    };\n\n    const result = res.data;\n\n    if (\n      result.response &&\n      result.response.statusCode !== 404 &&\n      handleSteps(result).length > 0\n    ) {\n      allTrails = handleSteps(result).map((el) => {\n        if (el.flag === \"continue\") {\n          continueFlag = true;\n        }\n\n        return {\n          userId: user_id,\n          trail_data_id: el.trail_data_id,\n          url: el.url,\n          path: el.path,\n          selector: el.selector,\n          class: el.class,\n          title: el.title,\n          description: el.description,\n          web_url: el.web_url,\n          trail_id: el.trail_id,\n          type: el.type,\n          uniqueTarget: el.unique_target,\n          unique_target_one: el.unique_target_one,\n          mobile_media_type: el.mobile_media_type,\n          mobile_title: el.mobile_title,\n          mobile_description: el.mobile_description,\n          mediaType: el.media_type,\n          created: el.created,\n          sortId: el.trail_sortId ? el.trail_sortId : \"\",\n          flag: el.flag,\n        };\n      });\n    } else {\n      trailWebUserTour = [];\n      allTrails = [];\n    }\n\n    trailWebUserTour = allTrails;\n    obj.trailList = allTrails;\n\n    this.setState({ trail_web_user_tour: trailWebUserTour });\n\n    chrome.storage.local.get(\n      [\"trail_id\", \"userData\", \"tourStep\", \"isPreview\"],\n      (storage) => {\n        if (items.loggedInData) {\n          chrome.storage.local.set({\n            trail_web_user_tour: allTrails,\n            tourStep: storage.tourStep ? storage.tourStep : \"\",\n            trail_id,\n            old_trail_id: storage.trail_id,\n            isPreview: false,\n            isGuest: false,\n            continueTourStepId: \"\",\n            old_user_data: { ...storage.userData },\n            webUrl: \"\",\n            userData: { ...items.loggedInData },\n            authorData: { ...items.userData },\n            noStepsToWatch: items.noStepsToWatch,\n          });\n        } else {\n          chrome.storage.local.set({\n            trail_web_user_tour: allTrails,\n            tourStep: items.tourStep ? items.tourStep : \"\",\n            trail_id,\n            closeContinue: continueFlag,\n          });\n        }\n      }\n    );\n  }\n\n  async handlePreviewFromWeb(msg) {\n    if (msg.message === \"preview_all\") {\n      // Call common get user data function\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"continue_preview\") {\n      // Call common get user data function\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          continueTourStepId: msg.payload.tourStep,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"preview_single\") {\n      await this.getSingleTrail({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_data_id: msg.payload.trail_data_id,\n        loggedInData: msg.payload.loggedInData,\n      });\n      chrome.storage.local.get([\"trail_id\", \"userData\"], (items) => {\n        chrome.storage.local.set({\n          isPreviewSingleTrail: true,\n          isPreview: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n        });\n      });\n    } else if (msg.message === \"preview_without_login\") {\n      await this.getCurrUserDataCommon({\n        userData: msg.payload.userData,\n        trail_id: msg.payload.trail_id,\n        trail_web_user_tour: [],\n        loggedInData: msg.payload.loggedInData,\n        noStepsToWatch: msg.payload.noStepsToWatch,\n        isPreview: true,\n      });\n      chrome.storage.local.get([\"trail_id\"], (items) => {\n        chrome.storage.local.set({\n          isPreview: true,\n          closeContinue: false,\n          webUrl: msg.payload.url,\n          old_trail_id: items.trail_id,\n          isGuest: true,\n        });\n      });\n    }\n  }\n\n  cleanupStorage = () => {\n    const { currentTourType, tourType, stepType } = this.state;\n\n    if (\n      currentTourType === \"preview\" &&\n      (tourType === \"audio\" ||\n        tourType === \"video\" ||\n        tourType === \"Make Edit\" ||\n        tourType === \"tooltip\")\n    ) {\n      chrome.storage.local.set({ tourType: \"\", currentTourType: \"\" });\n    }\n\n    if (\n      currentTourType === \"preview\" &&\n      tourType === \"modal\" &&\n      (stepType === \"audio\" || stepType === \"video\")\n    ) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        currentTourType: \"\",\n        stepType: \"\",\n      });\n    }\n\n    // Remove beforeunload event listener\n    window.removeEventListener(\"beforeunload\", this.cleanupStorage);\n  };\n\n  componentDidMount() {\n    const { currentTourType, tourType } = this.state;\n\n    chrome.runtime.onMessage.addListener(this.handlePreviewFromWeb.bind(this));\n\n    window.addEventListener(\"resize\", this.resize);\n    this.resize();\n\n    this.setState({ overlay: true });\n    this.onChromeStorageChange();\n    // this.onCreateTooltipHandle();\n\n    window.addEventListener(\n      \"load\",\n      () => {\n        this.setState({ overlay: false });\n        // this.onCreateTooltipHandle();\n      },\n      false\n    );\n\n    chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\n    chrome.storage.onChanged.addListener(async (changes) => {\n      if (\n        changes.currentTourType &&\n        changes.currentTourType.newValue === \"preview\" &&\n        changes.tourType &&\n        changes.tourType.newValue === \"tooltip\"\n      ) {\n        // Call onCreateTooltipHandler function\n        this.onCreateTooltipHandle();\n      } else if (\n        changes.currentTourType &&\n        changes.currentTourType.oldValue === \"preview\" &&\n        changes.tourType &&\n        changes.tourType.oldValue === \"tooltip\"\n      ) {\n        // Call removeTooltipHanlder function\n        this.removeTooltipHandler();\n      }\n\n      if (\n        changes.trailDeleteModal &&\n        changes.trailDeleteModal.newValue &&\n        changes.trailDeleteModal.newValue.value === \"open\"\n      ) {\n        const title = changes.trailDeleteModal.newValue.title;\n        const id = changes.trailDeleteModal.newValue.id;\n        // Call delete modal open function\n        this.onDeleteModalOpen(title, id, true);\n      }\n\n      if (\n        changes.trailDeleteModal &&\n        changes.trailDeleteModal.newValue &&\n        changes.trailDeleteModal.newValue.value === \"close\"\n      ) {\n        // Call delete modal close function\n        this.onDeleteModalClose();\n      }\n\n      if (changes.currentTrailsTab && changes.currentTrailsTab.newValue) {\n        // Set current trail tab state\n        this.setState({ currentTrailsTab: changes.currentTrailsTab.newValue });\n      }\n\n      if (changes.tourType && changes.tourType.newValue === \"\") {\n        // Set side bar state\n        this.setState({ openSidebar: false, open: false });\n      }\n\n      if (\n        changes.tourType &&\n        (changes.tourType.newValue === \"video\" ||\n          changes.tourType.newValue === \"audio\" ||\n          changes.tourType.newValue === \"Make Edit\")\n      ) {\n        // Set side bar state\n        this.setState({ openSidebar: true, open: true });\n      }\n\n      if (changes.trail_name) {\n        // Set state\n        this.setState({ trailName: changes.trail_name.newValue });\n      }\n\n      if (changes.isDraggable) {\n        // Set is draggable state\n        this.setState({ isDraggable: changes.isDraggable.newValue });\n      }\n\n      if (\n        (changes.tourType && changes.tourType.newValue === \"preview\") ||\n        (changes.currentTourType &&\n          changes.currentTourType.newValue === \"preview\") ||\n        (changes.tourStep && changes.tourStep.newValue === 1)\n      ) {\n        this.onChromeStorageChange();\n        this.setState({ overlay: false });\n      } else if (\n        changes.trail_web_user_tour &&\n        changes.trail_web_user_tour.newValue &&\n        changes.trail_web_user_tour.oldValue &&\n        (changes.trail_web_user_tour.newValue.length > 0 ||\n          changes.trail_web_user_tour.newValue.length !==\n            changes.trail_web_user_tour.oldValue.length)\n      ) {\n        this.onChromeStorageChange();\n        this.setState({ overlay: false });\n      }\n\n      if (changes.openButton && changes.openButton.newValue === \"CreateTrail\") {\n        this.onChromeStorageChange();\n      }\n\n      if (changes.currentTourType && changes.currentTourType.newValue === \"\") {\n        // Remove trailit logo function\n        removeTrailitLogo();\n      }\n    });\n\n    chrome.storage.local.get(\n      [\"isPreview\", \"isPreviewSingleTrail\", \"isDraggable\"],\n      (items) => {\n        if (items.isPreview || items.isPreviewSingleTrail) {\n          this.setState({ dynamicPopupButton: false });\n        }\n\n        if (items.isDraggable !== undefined && items.isDraggable !== null) {\n          // Set draggable state\n          this.setState({\n            isDraggable: items.isDraggable,\n          });\n        }\n      }\n    );\n\n    // Cleanup function\n    window.addEventListener(\"beforeunload\", this.cleanupStorage);\n  }\n\n  handleMessage(msg) {\n    if (msg.message === \"chrome_modal\") {\n      this.onToggleCreateModal(true);\n    }\n    this.setState({ message: msg.body });\n  }\n\n  componentWillUnmount() {\n    // Remove listener when this component unmounts\n    window.removeEventListener(\"resize\", this.resize);\n\n    if (updateOverlay) {\n      window.removeEventListener(\"resize\", updateOverlay);\n    }\n\n    chrome.runtime.onMessage.removeListener(this.handleMessage);\n\n    // Call removeTooltipHandler function\n    this.removeTooltipHandler();\n  }\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { trailList, currUserId } = this.state;\n\n    if (trailList.length == 0) {\n      alert(\"Please create trail\");\n      return null;\n    }\n\n    const trailId = trailList[trailList.length - 1].trail_id;\n    const URL = trailList[0].url;\n    let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n    const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currUserId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  followTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    followTrails(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"201\") {\n          throw new Error(\"Error while following trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({\n          followData: { previewUserId, follow: true },\n        });\n        this.setState({ follow: true });\n      })\n      .catch((err) => {});\n  };\n\n  mouseOverEventData = (e) => {\n    chrome.storage.local.get(\n      [\n        \"tourStatus\",\n        \"tourType\",\n        \"tourStep\",\n        \"currentTourType\",\n        \"closeContinue\",\n      ],\n      function (items) {\n        //\n        if (\n          items.tourType !== undefined &&\n          this.state.tourType !== items.tourType\n        ) {\n          if (items.tourType === \"preview\") {\n            if (this.state.trailList.length > 0) {\n              let tourStape = items.tourStep === \"\" ? 1 : items.tourStep;\n              this.setState({\n                tourStep: tourStape,\n                tourType: items.tourType,\n                currentTourType: this.state.trailList[tourStape - 1].type,\n              });\n            } else {\n              this.setState({ tourType: items.tourType });\n            }\n          }\n        }\n      }.bind(this)\n    );\n\n    const trailOverlay = document\n      .getElementById(\"extension-div\")\n      .shadowRoot.querySelector(\".trail_overlay\");\n    if (!trailOverlay) {\n      if (\n        this.state.tourStatus === \"continue\" &&\n        (this.state.tourType === \"tooltip\" ||\n          (this.state.tourType === \"Make Edit\" &&\n            !_.isEmpty(this.state.rowData)))\n      ) {\n        // let parentElement = queryParentElement(e.target, '.sidepanal');\n        let parentElement = queryParentElement(e.target, \"#extension-div\");\n        let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n        let getClass =\n          parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n        let getClass1 =\n          parentElement1 == null ? \"\" : parentElement1.getAttribute(\"class\");\n\n        if (root1 === \"block\" && getClass === \"\" && getClass1 === \"\") {\n          e.target.classList.add(\"trail_select_bx\");\n        }\n      }\n    }\n  };\n\n  mouseClickEventData = (e) => {\n    e.target.classList.remove(\"trail_select_bx\");\n    let uniqueTarget = $.trim(unique(e.target));\n\n    if (\n      this.state.tourStatus === \"continue\" &&\n      (this.state.tourType === \"tooltip\" || this.state.tourType === \"Make Edit\")\n    ) {\n      if (\n        this.state.tourType === \"tooltip\" ||\n        (this.state.tourType === \"Make Edit\" && !_.isEmpty(this.state.rowData))\n      ) {\n        let parentElement = queryParentElement(e.target, \"#extension-div\");\n        let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n        let getClass =\n          parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n        let getClass1 =\n          parentElement1 == null ? \"\" : parentElement1.getAttribute(\"class\");\n        let getClass2;\n\n        const trailOverlay = document\n          .getElementById(\"extension-div\")\n          .shadowRoot.querySelector(\".trail_overlay\");\n        if (trailOverlay) {\n          getClass2 = trailOverlay.getAttribute(\"class\");\n        }\n\n        if (\n          root1 === \"block\" &&\n          getClass === \"\" &&\n          getClass1 === \"\" &&\n          getClass2 === undefined\n        ) {\n          e.preventDefault();\n          e.stopPropagation();\n          e.target.classList.add(\"trail_web_user\");\n          e.target.classList.add(\"trail_tour_tooltip\");\n          let original = document.querySelector(uniqueTarget);\n          let bounding = original.getBoundingClientRect();\n          let offset = $(uniqueTarget).offset();\n          let leftPosition = offset.left;\n          let topPosition = offset.top;\n          var docHeight = document.documentElement.scrollHeight;\n          $(\".trail_tour_tooltip\").prepend(\n            \"<span class='trail_user_tooltip trail_tour_ToolTipExtend'></span>\"\n          );\n          let node = document.querySelector(\".trail_user_tooltip\");\n\n          let elementIndex = Array.from(\n            e.target.parentElement.children\n          ).indexOf(e.target);\n\n          // Call add overlay function\n          addOverlay();\n\n          // Call set overlay html function\n          setOverlayHtml(\n            window,\n            docHeight,\n            topPosition,\n            bounding,\n            leftPosition\n          );\n\n          updateOverlay = () => {\n            if (\n              root1 === \"block\" &&\n              getClass === \"\" &&\n              getClass1 === \"\" &&\n              getClass2 === undefined\n            ) {\n              let docHeight = document.documentElement.scrollHeight;\n              let bounding = original.getBoundingClientRect();\n              let offset = $(uniqueTarget).offset();\n              let leftPosition = offset.left;\n              let topPosition = offset.top;\n\n              // Call add overlay function\n              addOverlay();\n\n              // Call set overlay html function\n              setOverlayHtml(\n                window,\n                docHeight,\n                topPosition,\n                bounding,\n                leftPosition\n              );\n            }\n          };\n\n          window.addEventListener(\"resize\", () => {\n            // Update overlay\n            updateOverlay();\n          });\n\n          ReactDOM.render(\n            <Tooltip\n              path={e.path}\n              target={e.target}\n              count={popoverCount}\n              type={this.state.tourType}\n              elementIndex={elementIndex}\n              uniqueTarget={uniqueTarget}\n              rowData={this.state.rowData}\n              onCancel={this.onCancelTooltip}\n              onHandleChange={this.handleChange}\n              onTourLoading={this.onTourLoading}\n              isTourLoading={this.state.isTourLoading}\n              onSave={\n                this.state.tourType === \"Make Edit\"\n                  ? this.onUpdateTrail\n                  : this.onSaveTrail\n              }\n            />,\n            node\n          );\n          popoverCount++;\n        }\n      }\n    }\n  };\n\n  mouseOutEventData = (e) => {\n    e.preventDefault();\n    if (\n      this.state.tourStatus === \"continue\" &&\n      (this.state.tourType === \"tooltip\" || this.state.tourType === \"Make Edit\")\n    ) {\n      // let parentElement = queryParentElement(e.target, '.sidepanal');\n      let parentElement = queryParentElement(e.target, \"#extension-div\");\n      let parentElement1 = queryParentElement(e.target, \".trail_tooltip\");\n      let getClass =\n        parentElement == null ? \"\" : parentElement.getAttribute(\"class\");\n      let getClass1 =\n        parentElement1 == null ? \"\" : parentElement1.getAttribute(\"class\");\n      // let root1 = ReactDOM.findDOMNode(this).parentNode.style.display;\n      if (root1 === \"block\" && getClass === \"\" && getClass1 === \"\") {\n        e.target.classList.remove(\"trail_select_bx\");\n      }\n    }\n  };\n\n  onCreateTooltipHandle = () => {\n    document\n      .querySelector(\"body\")\n      .addEventListener(\"mouseover\", this.mouseOverEventData);\n    // to handle on click event to add tooltip\n    document\n      .querySelector(\"body\")\n      .addEventListener(\"click\", this.mouseClickEventData, true);\n    // to handle border remove on mousout event\n    document\n      .querySelector(\"body\")\n      .addEventListener(\"mouseout\", this.mouseOutEventData);\n  };\n\n  removeTooltipHandler = () => {\n    document\n      .querySelector(\"body\")\n      .removeEventListener(\"mouseover\", this.mouseOverEventData);\n\n    // to handle on click event to add tooltip\n    document\n      .querySelector(\"body\")\n      .removeEventListener(\"click\", this.mouseClickEventData, true);\n\n    // to handle border remove on mousout event\n    document\n      .querySelector(\"body\")\n      .removeEventListener(\"mouseout\", this.mouseOutEventData);\n  };\n\n  resize = () => {\n    this.setState({ hideNav: window.innerWidth <= 760 });\n  };\n\n  onNotFoundTarget = (data) => {\n    this.setState({ MobileTargetNotFound: data });\n    chrome.storage.local.set({ MobileTargetNotFound: data });\n  };\n\n  onChromeStorageChange = () => {\n    chrome.storage.local.get(\n      [\n        \"trail_web_user_tour\",\n        \"tourStatus\",\n        \"tourType\",\n        \"stepType\",\n        \"tourStep\",\n        \"currentTourType\",\n        \"userData\",\n        \"previewUserId\",\n        \"followData\",\n        \"saveSort\",\n        \"loading\",\n        \"MobileTargetNotFound\",\n        \"isDraggable\",\n        \"trail_name\",\n        \"currentTrailsTab\",\n      ],\n      async function (items) {\n        if (items.currentTrailsTab) {\n          obj.currentTrailsTab = items.currentTrailsTab;\n        }\n\n        if (items.trail_name) {\n          obj.trail_name = items.trail_name;\n        }\n\n        if (items.followData) {\n          obj.followingData = items.followData;\n        }\n\n        if (items.isDraggable !== undefined && items.isDraggable !== null) {\n          obj.isDraggable = items.isDraggable;\n        }\n\n        if (items.previewUserId && items.previewUserId !== \"\") {\n          obj.previewUserId = items.previewUserId;\n        } else {\n          obj.previewUserId = undefined;\n        }\n\n        if (items.trail_web_user_tour) {\n          obj.trailList = items.trail_web_user_tour;\n        }\n\n        if (items.tourStatus !== undefined) {\n          obj.tourStatus = items.tourStatus;\n        }\n\n        if (items.tourType !== undefined) {\n          obj.tourType = items.tourType;\n        }\n\n        if (items.currentTourType !== undefined) {\n          obj.currentTourType = items.currentTourType;\n        }\n\n        if (\n          items.currentTourType === \"tooltip\" ||\n          items.tourType === \"tooltip\"\n        ) {\n          this.setState({ open: false, openSidebar: false });\n        }\n\n        if (\n          items.MobileTargetNotFound != undefined &&\n          !_.isEmpty(items.MobileTargetNotFound)\n        ) {\n          this.setState({ MobileTargetNotFound: items.MobileTargetNotFound });\n        } else {\n          this.setState({ MobileTargetNotFound: {} });\n        }\n\n        if (items.tourStep !== undefined) {\n          obj.tourStep = items.tourStep;\n        }\n\n        if (items.stepType !== undefined) {\n          obj.stepType = items.stepType;\n        }\n\n        if (items.userData && items.userData._id !== undefined) {\n          obj.currUserId = items.userData._id;\n        }\n\n        if (\n          (obj.currentTourType === \"video\" ||\n            obj.currentTourType === \"audio\") &&\n          obj.tourType === \"preview\"\n        ) {\n          let myExtensionDefaultroot = $(\"#my-extension-defaultroot\").css(\n            \"display\"\n          );\n          let myExtensionRoot = $(\"#my-extension-root\").css(\"display\");\n\n          if (myExtensionRoot === \"none\" && myExtensionDefaultroot === \"none\") {\n            if (matchUrl(obj.trailList[obj.tourStep - 1].url, document.URL)) {\n              $(\"#my-extension-defaultroot\").css(\"display\", \"block\");\n            }\n          }\n        }\n\n        if (items.loading !== undefined && items.loading === \"false\") {\n          obj.loading = false;\n        }\n\n        if (items.loading !== undefined && items.loading === \"true\") {\n          obj.loading = true;\n        }\n\n        this.setState({\n          trailList: obj.trailList ? obj.trailList : [],\n          tourStatus: obj.tourStatus ? obj.tourStatus : \"continue\",\n          tourType: obj.tourType ? obj.tourType : \"\",\n          currentTourType: obj.currentTourType ? obj.currentTourType : \"\",\n          tourStep: obj.tourStep ? obj.tourStep : \"\",\n          stepType: obj.stepType ? obj.stepType : \"\",\n          currUserId: obj.currUserId ? obj.currUserId : null,\n          follow: obj.followingData ? obj.followingData.follow : false,\n          count: this.state.count++,\n          saveSort: items.saveSort ? items.saveSort : false,\n          loading: obj.loading ? obj.loading : false,\n          isDraggable: obj.isDraggable ? obj.isDraggable : false,\n          trailName: obj.trail_name ? obj.trail_name : \"\",\n          currentTrailsTab: obj.currentTrailsTab\n            ? obj.currentTrailsTab\n            : \"My Trails\",\n        });\n      }.bind(this)\n    );\n  };\n\n  /**\n   * on cancel tooltip data\n   */\n  onCancelTooltip = (target, count) => {\n    // Call init button position function\n    initButtonPosition();\n\n    $(\".trail_tour_tooltip\").parents().css(\"z-index\", \"\");\n    target.classList.remove(\"trail_web_user\");\n    target.classList.remove(`trail_tour_tooltip`);\n\n    // Call remove overlay function\n    removeOverlay();\n\n    // $('.trail_overlay').remove();\n    $(`.trail_user_tooltip`).remove();\n    $(`.trail_tour_ToolTipExtend`).remove();\n\n    chrome.storage.local.set({\n      tourType: \"\",\n      currentTourType: \"\",\n      tourStep: \"\",\n    });\n    this.setState({\n      web_url: \"\",\n      tourType: \"\",\n      currentTourType: \"\",\n      tourStep: \"\",\n      overlay: false,\n      rowData: {},\n      draggable: false,\n      open: false,\n    });\n    this.props.mainToggle();\n    this.props.onChangeTourType(\"\");\n  };\n\n  /**\n   * on click to Update tour\n   */\n  onUpdateTrail = async (data) => {\n    // Call init button position function\n    initButtonPosition();\n\n    let res = await UpdateTrailData(data);\n    if (res.status === 200) {\n      let resultData = res.data.response[0];\n      resultData.uniqueTarget = resultData.unique_target;\n      resultData.mediaType = resultData.media_type;\n      let rowInd = this.state.trailList.findIndex(\n        (r) => r.trail_data_id == resultData.trail_data_id\n      );\n      this.state.trailList[rowInd] = resultData;\n      let rows = this.state.trailList;\n      chrome.storage.local.set({ trail_web_user_tour: rows });\n      this.setState({ trailList: rows, draggable: false });\n    }\n\n    this.onCancelTooltip();\n  };\n\n  addStepClickHandler = async (e) => {\n    try {\n      const { fileName, title } = this.state;\n\n      if (fileName === \"\" || title === \"\") {\n        this.setState({\n          fileNameInvalid: true,\n          titleInvalid: true,\n        });\n\n        return;\n      } else {\n        this.setState({\n          fileNameInvalid: false,\n          titleInvalid: false,\n        });\n      }\n\n      // Call on tour loading function\n      this.onTourLoading(true);\n\n      await this.onSaveTrail(e);\n\n      // Call on tour loading function\n      this.onTourLoading(false);\n    } catch (err) {\n      console.log(\"err\", err);\n\n      // Call on tour loading function\n      this.onTourLoading(false);\n\n      alert(\"Error while adding step!\");\n    }\n  };\n\n  /**\n   * on click to save tour in local system\n   */\n  onSaveTrail = async (data) => {\n    let trailData = [];\n    let obj = {};\n    let responsive = \"web\";\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(\n        [\"trail_web_user_tour\", \"userData\", \"trail_id\"],\n        async function (items) {\n          const trail_id = items.trail_id;\n          if (items.trail_web_user_tour !== undefined) {\n            trailData = items.trail_web_user_tour;\n          }\n\n          let timeStamp = new Date().getTime();\n\n          // This if check work on tooltip audio video upload\n          if (data.type === \"tooltip\" && data.mediaType !== \"text\") {\n            obj = {\n              trail_id,\n              userId: items.userData._id,\n              url: data.url,\n              path: data.path,\n              selector: data.selector,\n              class: data.class,\n              title: data.title,\n              web_url: data.web_url,\n              type: data.type,\n              responsive,\n              uniqueTarget: data.uniqueTarget,\n              mediaType: data.mediaType,\n              created: timeStamp,\n              trailIndex: items.trail_web_user_tour.length + 1,\n              flag: \"\",\n            };\n\n            trailData.push(obj);\n          } else if (\n            this.state.tourType === \"video\" ||\n            this.state.tourType === \"audio\"\n          ) {\n            obj = {\n              trail_id,\n              userId: items.userData._id,\n              url: document.URL,\n              path: \"\",\n              selector: \"\",\n              class: \"\",\n              responsive,\n              title: this.state.title,\n              web_url: this.state.web_url,\n              type: this.state.tourType,\n              mediaType: this.state.tourType,\n              created: timeStamp,\n              trailIndex: items.trail_web_user_tour.length + 1,\n              flag: \"\",\n            };\n\n            trailData.push(obj);\n          } else if (data.type === \"modal\" && data.mediaType === \"modal\") {\n            obj = {\n              trail_id,\n              userId: items.userData._id,\n              url: data.url,\n              path: \"\",\n              selector: \"\",\n              class: \"\",\n              responsive,\n              title: data.title,\n              description: data.description,\n              web_url: \"\",\n              type: data.type,\n              uniqueTarget: \"\",\n              mediaType: data.mediaType,\n              created: timeStamp,\n              trailIndex: items.trail_web_user_tour.length + 1,\n              flag: \"\",\n            };\n\n            trailData.push(obj);\n          } else {\n            obj = {\n              ...data,\n              trail_id,\n              responsive,\n              userId: items.userData._id,\n              created: timeStamp,\n              trailIndex: items.trail_web_user_tour.length + 1,\n              flag: \"\",\n            };\n\n            trailData.push(obj);\n          }\n\n          // Save trail into database\n          await this.publishTrails(obj);\n\n          this.setState({\n            trailList: trailData,\n            web_url: \"\",\n            fileAddStatus: false,\n            fileName: \"\",\n            title: \"\",\n            open: false,\n            draggable: false,\n            tourType: \"\",\n            currentTourType: \"\",\n          });\n          chrome.storage.local.set({\n            trail_web_user_tour: trailData,\n            currentTourType: \"\",\n            tourType: \"\",\n          });\n\n          // Call init button position function\n          initButtonPosition();\n\n          // this.props.this.props,mainToggle();\n          this.props.onChangeTourType(\"\");\n          this.props.mainToggle();\n\n          resolve();\n        }.bind(this)\n      );\n    });\n  };\n\n  /**\n   * on click to submit tour into the database\n   */\n  onClickToSubmitTour = () => {\n    chrome.storage.local.set({ tourStatus: \"done\" });\n    this.setState({ tourStatus: \"done\" });\n  };\n\n  /**\n   * on clear tour\n   */\n  onClearToggle = async () => {\n    // Set onDone state\n    this.setState({ onDone: true });\n\n    // Call init button position function\n    initButtonPosition();\n\n    try {\n      const trail = this.state.trailList[this.state.tourStep - 1];\n      chrome.storage.local.get(\n        [\n          \"webUrl\",\n          \"userData\",\n          \"isPreview\",\n          \"old_trail_id\",\n          \"old_user_data\",\n          \"previewUserId\",\n          \"trail_web_user_tour\",\n          \"tourStep\",\n          \"isPreviewSingleTrail\",\n          \"followedTrailUserData\",\n          \"isGuest\",\n          \"currentTrailsTab\",\n        ],\n        async (items) => {\n          // Update trail flag if user not viewing followed trail preview\n          if (\n            !items.followedTrailUserData &&\n            !items.isPreview &&\n            !items.isPreviewSingleTrail\n          ) {\n            const data = {\n              trail_data_id: trail.trail_data_id,\n              flag: \"\",\n            };\n\n            // Call update trail api to add flag into table\n            await updateTrailFlag(data);\n          }\n\n          if (items.previewUserId !== \"\" || items.previewUserId !== undefined) {\n            const userTrails = items.trail_web_user_tour.filter((el) => {\n              if (el.userId !== items.previewUserId) {\n                return el;\n              }\n            });\n\n            chrome.storage.local.set({\n              previewUserId: \"\",\n              trail_web_user_tour: userTrails,\n            });\n          }\n\n          if (items.isPreview || items.isPreviewSingleTrail) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            this.props.onChangeTourType(\"\");\n            this.props.mainToggle();\n\n            if (items.isGuest) {\n              window.location.href = items.webUrl + \"#signin-to-continue\";\n            } else {\n              window.location.href = items.webUrl.split(\"#\")[0];\n            }\n\n            chrome.storage.local.set({\n              isPreview: false,\n              isGuest: false,\n              isPreviewSingleTrail: false,\n              continueTourStepId: \"\",\n              tourType: \"\",\n              currentTourType: \"\",\n              trail_id: items.old_trail_id,\n              trail_data_id: \"\",\n              guest_id: \"\",\n              trail_web_user_tour: [],\n              noStepsToWatch: \"\",\n              userData: { ...items.old_user_data },\n            });\n          } else if (\n            items.followedTrailUserData &&\n            items.currentTrailsTab === \"Following\"\n          ) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n          }\n\n          chrome.storage.local.set({\n            tourType: \"\",\n            currentTourType: \"\",\n            tourStep: \"\",\n          });\n\n          this.setState({\n            web_url: \"\",\n            tourType: \"\",\n            tourStep: \"\",\n            onDone: false,\n            overlay: false,\n            loading: false,\n            draggable: false,\n            currentTourType: \"\",\n          });\n\n          this.props.onChangeTourType(\"\");\n          this.props.mainToggle();\n        }\n      );\n\n      // Call back arrow click handler function\n      // Remove overlay and other added element\n      $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\n      $(`.trail_tour_ToolTipExtend`).remove();\n      $(\".trail_tooltip_done\").remove();\n      $(\".trail_web_user_tour\").removeClass(\"trail_web_user_tour\");\n      $(`traiil_stop${this.state.tourStep}`).removeAttr(\n        `traiil_stop${this.state.tourStep}`\n      );\n\n      // Call remove overlay function\n      removeOverlay();\n    } catch (err) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        currentTourType: \"\",\n        tourStep: \"\",\n      });\n\n      this.setState({\n        web_url: \"\",\n        tourType: \"\",\n        tourStep: \"\",\n        onDone: false,\n        overlay: false,\n        loading: false,\n        draggable: false,\n        currentTourType: \"\",\n      });\n\n      this.props.onChangeTourType(\"\");\n      this.props.mainToggle();\n    }\n\n    // Send message to close all menu pop button in inactive tabs after preview\n    chrome.runtime.sendMessage(\"\", {\n      type: \"closeMenuPopButton\",\n    });\n  };\n\n  openPopup = () => {\n    // Set state\n    this.setState({\n      open: !this.state.open,\n      openSidebar: !this.state.openSidebar,\n    });\n  };\n\n  /**\n   * on change input value\n   */\n  onChangeToInput = (e) => {\n    e.stopPropagation();\n\n    const value = e.target.value;\n    const isInvalid = value.length === 0 ? true : false;\n\n    // Set state\n    this.setState({\n      title: value,\n      titleInvalid: isInvalid,\n    });\n  };\n\n  updateUserTrailTrack = async (items) => {\n    try {\n      const trail = items.trail_web_user_tour[items.tourStep - 1];\n\n      const trackData = {\n        trail_id: trail.trail_id,\n        user_id: items.userData._id,\n        steps_visited: trail.trail_data_id,\n      };\n\n      // Call update track data function\n      await updateTrailTrack(trackData);\n    } catch (err) {}\n  };\n\n  tourManage = (step, type, tourSide) => {\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(\n        [\n          \"isPreview\",\n          \"userData\",\n          \"isPreviewSingleTrail\",\n          \"currentTrailsTab\",\n          \"followedTrailUserData\",\n          \"trail_web_user_tour\",\n          \"tourStep\",\n        ],\n        async (items) => {\n          // Update step data when guest visit trail\n          if (items.isPreview || items.isPreviewSingleTrail) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          } else if (\n            items.currentTrailsTab === \"Following\" &&\n            items.followedTrailUserData\n          ) {\n            // Call update track data function\n            await this.updateUserTrailTrack(items);\n\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          } else {\n            chrome.storage.local.set({ currentTourType: type, tourStep: step });\n            this.setState({ currentTourType: type, tourStep: step, tourSide });\n\n            resolve();\n          }\n        }\n      );\n    });\n  };\n\n  /**\n   * on trail video trail next, previos manage\n   * @step tourStep\n   */\n  onTourVideoTrail = (step) => {\n    if (this.state.trailList[step - 1]) {\n      let type = this.state.trailList[step - 1].type;\n      chrome.storage.local.set({ currentTourType: type, tourStep: step });\n      this.setState({ currentTourType: type, tourStep: step });\n      if (!matchUrl(this.state.trailList[step - 1].url, document.URL)) {\n        window.location.href = this.state.trailList[step - 1].url;\n      }\n    }\n  };\n\n  uploadFile = (file) => {\n    this.setState({ fileLoading: true });\n\n    handleFileUpload(file)\n      .then((response) => {\n        return response;\n      })\n      .then((res) => {\n        return res.data;\n      })\n      .then((data) => {\n        this.setState({\n          showPreview: true,\n          fileLoading: false,\n          fileName: file.name,\n          fileAddStatus: true,\n          fileNameInvalid: false,\n          web_url: data.response.result.fileUrl,\n        });\n      })\n      .catch((err) => {\n        this.setState({ fileLoading: false });\n      });\n  };\n\n  handleChange = (e) => {\n    const { tourType } = this.state;\n    const file = e.target.files[0];\n    const fileType = file.type.split(\"/\");\n    e.target.value = null;\n\n    if (tourType === \"audio\" && fileType[1] === \"mp4\") {\n      // Upload file function\n      this.uploadFile(file);\n    } else if (tourType !== fileType[0]) {\n      // Return alert\n      return alert(`Please upload ${tourType} file!`);\n    } else if (tourType === \"video\" && fileType[1] === \"x-matroska\") {\n      // Return alert\n      return alert(\"MKV format suport coming soon.\");\n    } else {\n      // Upload file function\n      this.uploadFile(file);\n    }\n  };\n\n  /**\n   * It will invoked on step drag and drop.\n   */\n  onSectionDragAndDrop = async ({ oldIndex, newIndex }) => {\n    const sorted = arrayMove(this.state.trailList, oldIndex, newIndex);\n\n    this.setState({ trail_web_user_tour: sorted, trailList: sorted });\n    chrome.storage.local.set({ trail_web_user_tour: sorted });\n\n    // Update sorted array in database\n    const res = await arraySorting(sorted);\n\n    if (!res.data.response || !res.data.response.result) {\n      alert(\"Something went wrong!\");\n    }\n  };\n\n  saveSortedTrails = async (e) => {\n    e.preventDefault();\n\n    // Update sorted array in database\n    const res = await arraySorting(this.state.trailList);\n\n    if (!res.data.response || !res.data.response.result) {\n      alert(\"Something went wrong!\");\n    }\n\n    this.setState({ saveSort: false });\n    chrome.storage.local.set({ saveSort: false });\n  };\n\n  // Save trails into database\n  publishTrails = async (data) => {\n    try {\n      const res = await uploadTrails(data);\n      // this.setState({ publishLoader: false });\n      if (!res.data.response) {\n        throw new Error(\"Saving trails failed!\");\n      }\n\n      return new Promise((resolve, reject) => {\n        chrome.storage.local.get(\n          [\"trail_id\"],\n          async function (items) {\n            // Get all trail from database\n            let screen = resizeScreen() ? \"mobile\" : \"web\";\n            const allDataRes = await getUserOneTrail(items.trail_id, screen);\n            const newDataArray = allDataRes.data.response.result.map((el) => {\n              return {\n                userId: this.state.currUserId,\n                trail_data_id: el.trail_data_id,\n                url: el.url,\n                path: el.path,\n                selector: el.selector,\n                class: el.class,\n                title: el.title,\n                description: el.description,\n                web_url: el.web_url,\n                trail_id: el.trail_id,\n                type: el.type,\n                uniqueTarget: el.unique_target,\n                unique_target_one: el.unique_target_one,\n                mobile_media_type: el.mobile_media_type,\n                mobile_title: el.mobile_title,\n                mobile_description: el.mobile_description,\n                mediaType: el.media_type,\n                created: el.created,\n                trailIndex: el.trailIndex,\n              };\n            });\n\n            chrome.storage.local.set({ trail_web_user_tour: newDataArray });\n            this.setState({ trailList: newDataArray });\n\n            resolve();\n          }.bind(this)\n        );\n      });\n    } catch (err) {\n      alert(err.message);\n      // this.setState({ publishLoader: false });\n    }\n  };\n\n  tooltipShareBtn = (e) => {\n    const { trailList, currUserId } = this.state;\n\n    const trailId = trailList[0].trail_id;\n    const URL = trailList[0].url;\n    let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n    const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currUserId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  // Copy Web app link\n  copyWebApplink = (e) => {\n    const { trailList, currUserId } = this.state;\n\n    if (trailList.length == 0) {\n      alert(\"Please create trail\");\n      return null;\n    }\n\n    const trailId = trailList[trailList.length - 1].trail_id;\n    const URL = trailList[0].url;\n    let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\n    const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${currUserId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\n\n    function copyStringToClipboard(str) {\n      // Create new element\n      var el = document.createElement(\"textarea\");\n\n      // Set value (string to be copied)\n      el.value = str;\n\n      // Set non-editable to avoid focus and move outside of view\n      el.setAttribute(\"readonly\", \"\");\n      el.style = { position: \"absolute\", left: \"-9999px\" };\n      document.body.appendChild(el);\n\n      // Select text inside element\n      el.select();\n\n      // Copy text to clipboard\n      document.execCommand(\"copy\");\n\n      // Remove temporary element\n      document.body.removeChild(el);\n    }\n\n    alert(\"Successfully copied\");\n    copyStringToClipboard(trailUrl);\n  };\n\n  followTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    followTrails(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"201\") {\n          throw new Error(\"Error while following trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({\n          followData: { previewUserId, follow: true },\n        });\n        this.setState({ follow: true });\n      })\n      .catch((err) => {});\n  };\n\n  unFollowTrail = (e) => {\n    e.preventDefault();\n    const previewUserId = this.state.trailList[this.state.tourStep - 1].userId;\n\n    const followData = {\n      // follower_id: this.state.currUserId,\n      previewUserId,\n    };\n\n    unFollowTrailOfUser(followData)\n      .then((res) => {\n        if (res.data.response && res.data.response.statusCode !== \"200\") {\n          throw new Error(\"Error while unfollowing trail!\");\n        }\n\n        // Set followData into chrome storage\n        chrome.storage.local.set({ followData: {} });\n        this.setState({ follow: false });\n      })\n      .catch((err) => {});\n  };\n\n  // Send notification to follower when publish button clicked\n  sendNotification = (e) => {\n    e.preventDefault();\n    this.setState({ publishLoader: true });\n\n    // Socket notification\n    socket.emit(\"sendNotification\", this.state.currUserId);\n\n    setTimeout(() => {\n      this.setState({ publishLoader: false });\n    }, 1000);\n\n    localStorage.setItem(\n      process.env.REACT_APP_LOCALSTORAGE,\n      this.state.trailList.length\n    );\n  };\n\n  // Save last show preview trail\n  onBackArrowClickHandler = async (e, close) => {\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    chrome.storage.local.get(\n      [\n        \"isPreview\",\n        \"userData\",\n        \"webUrl\",\n        \"old_trail_id\",\n        \"old_user_data\",\n        \"isPreviewSingleTrail\",\n        \"isGuest\",\n        \"followedTrailUserData\",\n        \"currentTrailsTab\",\n        \"trail_web_user_tour\",\n        \"tourStep\",\n      ],\n      async (items) => {\n        const trail = this.state.trailList[this.state.tourStep - 1];\n\n        // Update step data when guest visit trail\n        if (\n          (items.isPreview || items.isPreviewSingleTrail) &&\n          this.state.tourType === \"preview\"\n        ) {\n          // Call update track data function\n          await this.updateUserTrailTrack(items);\n\n          this.props.onChangeTourType(\"\");\n          this.props.mainToggle();\n\n          if (items.isGuest) {\n            let url = items.webUrl + \"#signin-to-continue\";\n            window.location.href = url;\n          } else {\n            window.location.href = items.webUrl.split(\"#\")[0];\n          }\n\n          chrome.storage.local.set({\n            isPreview: false,\n            isGuest: false,\n            isPreviewSingleTrail: false,\n            tourType: \"\",\n            currentTourType: \"\",\n            continueTourStepId: \"\",\n            trail_id: items.old_trail_id,\n            trail_data_id: \"\",\n            guest_id: \"\",\n            trail_web_user_tour: [],\n            noStepsToWatch: \"\",\n            userData: { ...items.old_user_data },\n          });\n        } else if (\n          items.followedTrailUserData &&\n          items.currentTrailsTab === \"Following\"\n        ) {\n          // Call update track data function\n          await this.updateUserTrailTrack(items);\n        }\n      }\n    );\n\n    // Call init button position function\n    initButtonPosition();\n\n    if (!this.state.onDone) {\n      // Set onDone state\n      this.setState({ onDone: true });\n    }\n\n    const removeThisElements = () => {\n      // Remove overlay and other added element\n      $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\n      $(`.trail_tour_ToolTipExtend`).remove();\n      $(\".trail_tooltip_done\").remove();\n      $(\".trail_web_user_tour\").removeClass(\"trail_web_user_tour\");\n      $(`traiil_stop${this.state.tourStep}`).removeAttr(\n        `traiil_stop${this.state.tourStep}`\n      );\n      $(\".trail_select_bx\").removeClass(\"trail_select_bx\");\n\n      const tooltip = shadowRoot.querySelector(\".trail_tooltip\");\n      if (tooltip) {\n        tooltip.parentNode.removeChild(tooltip);\n      }\n\n      // Call remove overlay function\n      removeOverlay();\n    };\n\n    return new Promise((resolve, reject) => {\n      chrome.storage.local.get(\n        [\n          \"previewUserId\",\n          \"isPreview\",\n          \"isPreviewSingleTrail\",\n          \"followedTrailUserData\",\n        ],\n        async (items) => {\n          if (\n            (!items.previewUserId || items.previewUserId === \"\") &&\n            !items.followedTrailUserData\n          ) {\n            const { currentTourType, tourType } = this.state;\n\n            if (\n              (currentTourType === \"tooltip\" ||\n                currentTourType === \"audio\" ||\n                currentTourType === \"video\" ||\n                currentTourType === \"modal\") &&\n              tourType === \"preview\"\n            ) {\n              if (this.state.trailList.length > 0) {\n                if (!items.isPreview || !items.isPreviewSingleTrail) {\n                  try {\n                    const data = {\n                      trail_data_id: this.state.trailList[\n                        this.state.tourStep - 1\n                      ].trail_data_id,\n                      flag: \"continue\",\n                    };\n\n                    // Call update trail api to add flag into table\n                    await updateTrailFlag(data);\n                  } catch (err) {}\n                }\n\n                // Remove elements\n                await removeThisElements();\n\n                // Call toggle function\n                chrome.storage.local.set({\n                  tourType: \"\",\n                  currentTourType: \"\",\n                  tourStep: \"\",\n                });\n                this.setState({\n                  web_url: \"\",\n                  tourType: \"\",\n                  currentTourType: \"\",\n                  tourStep: \"\",\n                  overlay: false,\n                  loading: false,\n                  open: false,\n                  openSidebar: false,\n                  draggable: false,\n                });\n                this.props.onChangeTourType(\"\");\n                this.props.mainToggle();\n              }\n            } else if (currentTourType === \"preview\" && tourType === \"modal\") {\n              this.props.mainToggle();\n              this.props.onChangeTourType(\"\");\n              this.setState({\n                web_url: \"\",\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                overlay: false,\n                createModalOpen: false,\n                loading: false,\n                stepType: \"\",\n                open: false,\n                openSidebar: false,\n                draggable: false,\n              });\n              chrome.storage.local.set({\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                stepType: \"\",\n              });\n            } else {\n              // Remove elements\n              await removeThisElements();\n              //\n\n              this.props.mainToggle();\n              this.props.onChangeTourType(\"\");\n              this.setState({\n                web_url: \"\",\n                tourType: \"\",\n                currentTourType: \"\",\n                tourStep: \"\",\n                overlay: false,\n                fileName: \"\",\n                titile: \"\",\n                loading: false,\n                stepType: \"\",\n                open: false,\n                openSidebar: false,\n                draggable: false,\n                titleInvalid: false,\n                fileNameInvalid: false,\n              });\n            }\n\n            chrome.storage.local.set({\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n              stepType: \"\",\n            });\n\n            if (this.state.deleteModal.show) {\n              // Hide delete modal\n              this.onDeleteModalClose();\n            }\n\n            if (this.state.onDone) {\n              // Set onDone state\n              this.setState({ onDone: false });\n            }\n\n            resolve();\n          } else {\n            // Remove elements\n            await removeThisElements();\n            this.props.mainToggle();\n            this.props.onChangeTourType(\"\");\n            chrome.storage.local.set({\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n            });\n            this.setState({\n              web_url: \"\",\n              tourType: \"\",\n              currentTourType: \"\",\n              tourStep: \"\",\n              overlay: false,\n              loading: false,\n              open: false,\n              openSidebar: false,\n              draggable: false,\n            });\n\n            if (this.state.onDone) {\n              // Set onDone state\n              this.setState({ onDone: false });\n            }\n\n            resolve();\n          }\n\n          // Send message to close all menu pop button in inactive tabs after preview\n          chrome.runtime.sendMessage(\"\", {\n            type: \"closeMenuPopButton\",\n          });\n        }\n      );\n    });\n  };\n\n  onToggleCreateModal = (status) => {\n    if (!status) {\n      // Call init button position function\n      initButtonPosition();\n    }\n\n    if (!status) {\n      chrome.storage.local.set({\n        tourType: \"\",\n        stepType: \"\",\n        currentTourType: \"\",\n        tourStep: \"\",\n      });\n      this.setState({\n        web_url: \"\",\n        tourType: \"\",\n        stepType: \"\",\n        open: false,\n        currentTourType: \"\",\n        tourStep: \"\",\n        overlay: false,\n        createModalOpen: status,\n        draggable: false,\n      });\n      this.props.mainToggle();\n      this.props.onChangeTourType(\"\");\n    } else {\n      this.setState({ createModalOpen: status });\n    }\n  };\n\n  onCloseTooltipHandle = async (e) => {\n    // Call init button position function\n    initButtonPosition();\n\n    // Hide continue button\n    chrome.storage.local.set({ closeContinue: false });\n\n    // Set onDone state\n    this.setState({ onDone: true });\n\n    const { trailList, tourStep } = this.state;\n\n    if (trailList.length > 0 && trailList.length === tourStep) {\n      // Call clear toggle function\n      await this.onClearToggle();\n    } else {\n      chrome.storage.local.get(\n        [\"isPreview\", \"isPreviewSingleTrail\", \"followedTrailUserData\"],\n        (items) => {\n          if (\n            !items.isPreview &&\n            !items.isPreviewSingleTrail &&\n            !items.followedTrailUserData\n          ) {\n            chrome.storage.local.set({ closeContinue: true });\n          }\n        }\n      );\n\n      // Call back arrow click handler function\n      await this.onBackArrowClickHandler(e, \"close\");\n    }\n\n    // Set onDone state\n    this.setState({\n      onDone: false,\n      draggable: false,\n      targetDataNotFound: false,\n    });\n  };\n\n  setLoadingState = (query) => {\n    this.setState({ loading: query });\n  };\n\n  onClickToGetRow = (e, result, tourStep) => {\n    e.preventDefault();\n    this.setState({ MobileTargetNotFound: {} });\n    chrome.storage.local.set({ MobileTargetNotFound: {} });\n    this.setState({ rowData: result, tourStep, open: false });\n  };\n\n  // Send tip function\n  sendTip = async (toAddress, amount) => {\n    this.setState({ sendLoader: true });\n\n    // const { privateKey } = this.state;\n    const privateKey = undefined; // Need to send private key but for demos hard code in code\n    sendTransection(privateKey, toAddress, amount)\n      .then((res) => {\n        if (res && res.code && res.code === 400) {\n          throw new Error(res.err);\n        }\n\n        // Set is success state\n        this.setState({ isSuccess: true });\n\n        setTimeout(() => {\n          // Hide modal\n          this.onSendTipModalClose();\n\n          // Set is success state\n          this.setState({ isSuccess: false });\n        }, 5000);\n      })\n      .catch((err) => {\n        this.setState({ setError: err.message });\n\n        setTimeout(() => {\n          // Hide modal\n          this.onSendTipModalClose();\n\n          // Set is success state\n          this.setState({ setError: false });\n        }, 5000);\n      });\n  };\n\n  dragStop(data) {\n    const position = document\n      .getElementById(\"extension-div\")\n      .shadowRoot.getElementById(\"my-extension-defaultroot\");\n  }\n\n  audioToggler = () => {\n    // Set state\n    this.setState({\n      audioRef: !this.state.audioRef,\n    });\n  };\n\n  videoToggler = () => {\n    // Set state\n    this.setState({\n      videoRef: !this.state.videoRef,\n    });\n  };\n\n  modelToggler = () => {\n    // Set state\n    this.setState({\n      previewModalRef: !this.state.previewModalRef,\n    });\n  };\n\n  webTourToggler = () => {\n    // Set state\n    this.setState({\n      tooltipRef: !this.state.tooltipRef,\n    });\n  };\n\n  render() {\n    let {\n      open,\n      trailList,\n      tourStatus,\n      tourType,\n      tourStep,\n      currentTourType,\n      web_url,\n      overlay,\n      follow,\n      fileName,\n      fileLoading,\n      createModalOpen,\n      stepType,\n      onDone,\n      isDraggable,\n      trailName,\n      openSidebar,\n      currentTrailsTab,\n      isTourLoading,\n      title,\n      titleInvalid,\n      fileNameInvalid,\n    } = this.state;\n\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\n\n    // Auto logout function\n    autoLogoutFunction();\n\n    const localStorageCount = localStorage.getItem(\n      process.env.REACT_APP_LOCALSTORAGE\n    );\n    const stateCount = trailList.length;\n\n    if (web_url !== \"\") {\n      this.setState({ fileAddStatus: true });\n    }\n\n    tourUrl = false;\n\n    if (tourStep !== \"\" && stateCount > 0) {\n      tourUrl = matchUrl(trailList[tourStep - 1].url, document.URL);\n    }\n\n    // if (tourType === \"\" && currentTourType === \"\") {\n    //   const myExtensionRootFlip = shadowRoot.getElementById(\n    //     \"my-extension-root-flip\"\n    //   );\n\n    //   if (myExtensionRootFlip) {\n    //     myExtensionRootFlip.classList.add(\"widthAuto\");\n    //   }\n    // } else {\n    //   const myExtensionRootFlip = shadowRoot.getElementById(\n    //     \"my-extension-root-flip\"\n    //   );\n\n    //   if (myExtensionRootFlip) {\n    //     myExtensionRootFlip.classList.remove(\"widthAuto\");\n    //   }\n    // }\n\n    if (openSidebar) {\n      const defaultRoot = shadowRoot.getElementById(\"my-extension-defaultroot\");\n\n      if (defaultRoot) {\n        defaultRoot.style.boxShadow = \"rgb(212 30 121) 0px 0px 9px\";\n      }\n    } else {\n      const defaultRoot = shadowRoot.getElementById(\"my-extension-defaultroot\");\n\n      if (defaultRoot) {\n        defaultRoot.style.boxShadow = \"none\";\n      }\n    }\n\n    if (!openSidebar && flipped && defaultComp) {\n      const flipId = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.getElementById(\"my-extension-root-flip\");\n      flipId.setAttribute(\"class\", \"trail_flip_box trail_container\");\n    } else if (openSidebar || !flipped) {\n      const trailFlipBox = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".trail_flip_box\");\n      if (trailFlipBox) {\n        trailFlipBox.classList.remove(\"trail_flip_box\");\n      }\n    }\n\n    $(() => {\n      const modalDiv = document\n        .getElementById(\"extension-div\")\n        .shadowRoot.querySelector(\".tr_modal\");\n\n      if (modalDiv) {\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\n            \"class\",\n            \"trial_modal_show trial_create_modal_main\"\n          );\n        }\n\n        const modal = document\n          .getElementById(\"extension-div\")\n          .shadowRoot.querySelector(\".trial_create_modal_main .modal\");\n\n        if (modal && resizeScreen()) {\n          modal.style.height = \"75%\";\n        }\n      }\n    });\n\n    if (\n      (currentTourType === \"tooltip\" ||\n        currentTourType === \"audio\" ||\n        currentTourType === \"video\" ||\n        currentTourType === \"modal\" ||\n        currentTourType === \"Make Edit\" ||\n        currentTourType === \"\") &&\n      (tourType === \"preview\" || tourType === \"\") &&\n      (tourUrl || !tourUrl)\n    ) {\n      chrome.storage.local.set({ loading: \"false\" });\n      this.setLoadingState(false);\n    }\n\n    let mediaType = \"\";\n    if (\n      tourStatus !== \"preview\" &&\n      (tourType === \"audio\" || tourType === \"video\")\n    ) {\n      if (tourType === \"video\") {\n        mediaType = \"video/*, .mkv, .mov\";\n      } else if (tourType === \"audio\") {\n        mediaType = \"audio/*\";\n      }\n    }\n\n    let sideBar = (\n      <div className=\"first_step\">\n        <div className=\"hdr\">\n          <div className=\"titleBack\">\n            <button\n              disabled={onDone}\n              className=\"trail_builder-back-button\"\n              onClick={this.onBackArrowClickHandler}\n              onTouchEnd={this.onBackArrowClickHandler}\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"7.734\"\n                height=\"13.404\"\n                viewBox=\"0 0 7.734 13.404\"\n              >\n                <g id=\"left-arrow\" transform=\"translate(0.557 0.557)\">\n                  <path\n                    id=\"Path_2\"\n                    data-name=\"Path 2\"\n                    d=\"M39.276,18.719a.437.437,0,0,0,.617,0,.437.437,0,0,0,0-.617l-5.428-5.428,5.428-5.428a.437.437,0,0,0-.617-.617l-5.748,5.737a.437.437,0,0,0,0,.617Z\"\n                    transform=\"translate(-33.4 -6.5)\"\n                    fill=\"#289728\"\n                    stroke=\"#D41E79\"\n                    stroke-linecap=\"round\"\n                    stroke-linejoin=\"round\"\n                    stroke-width=\"1\"\n                  />\n                </g>\n              </svg>\n            </button>\n            <span>Trail Builder</span>\n          </div>\n          {obj.previewUserId && obj.previewUserId !== \"\" && (\n            <div className=\"optionBtn\">\n              {follow ? (\n                <Button type=\"primary\" onClick={this.unFollowTrail}>\n                  Unfollow\n                </Button>\n              ) : (\n                <Button type=\"primary\" onClick={this.followTrail}>\n                  Follow\n                </Button>\n              )}\n            </div>\n          )}\n        </div>\n        {tourType === \"audio\" || tourType === \"video\" ? (\n          <h4 className=\"title my-4\">Upload Media</h4>\n        ) : (\n          // <h4 className=\"title my-4\">Trail It, Curated Guided Tour</h4>\n          <h4 className=\"title my-4\">{trailName}</h4>\n        )}\n        <div\n          id=\"scroll\"\n          className=\"sidepopcontent scrollbar\"\n          // className={`sidepopcontent ${\n          //   (tourType === \"audio\" || tourType === \"video\") && \"overflowAuto\"\n          // } scrollbar`}\n        >\n          <div className=\"pr5px pl-4 trail_video_frm\">\n            {tourStatus !== \"preview\" && tourType === \"video\" && (\n              <div className=\"mb-2\">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  value={title}\n                  onChange={this.onChangeToInput}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  placeholder=\"Enter Video title\"\n                  className=\"ant-input\"\n                  autoComplete=\"off\"\n                />\n\n                {titleInvalid && title.length === 0 && (\n                  <div class=\"ant-form-item-explain ant-form-item-explain-error\">\n                    <div role=\"alert\">Please enter title!</div>\n                  </div>\n                )}\n              </div>\n            )}\n            {tourStatus !== \"preview\" && tourType === \"video\" && (\n              <input\n                type=\"text\"\n                name=\"web_url\"\n                value={fileName}\n                onKeyDown={(e) => e.stopPropagation()}\n                placeholder=\"Video Filename\"\n                className=\"ant-input mb-2\"\n                autoComplete=\"off\"\n                disabled={true}\n              />\n            )}\n            {tourStatus !== \"preview\" && tourType === \"video\" && (\n              <div className=\"upload_bx\">\n                <div className=\"ant-upload\">\n                  <p className=\"ant-upload-drag-icon\">\n                    {fileLoading && (\n                      <div class=\"trial_spinner\">\n                        <img\n                          alt=\"ring1\"\n                          class=\"ring1\"\n                          src={require(`./images/loding1.png`)}\n                        />\n                        <img\n                          alt=\"ring2\"\n                          class=\"ring2\"\n                          src={require(`./images/loding2.png`)}\n                        />\n                      </div>\n                    )}\n                    {!fileLoading && <CloudUploadOutlined />}\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    {fileLoading ? \"Uploading\" : \"Upload\"} Video\n                  </p>\n                </div>\n\n                <input\n                  type=\"file\"\n                  name=\"media\"\n                  accept={mediaType}\n                  onChange={this.handleChange}\n                />\n\n                {fileNameInvalid && fileName.length === 0 && (\n                  <div class=\"ant-form-item-explain ant-form-item-explain-error\">\n                    <div role=\"alert\">File is required!</div>\n                  </div>\n                )}\n              </div>\n            )}\n            {tourStatus !== \"preview\" && tourType === \"video\" && (\n              <div className=\"add-step-bt-container\">\n                <button\n                  disabled={fileLoading}\n                  onClick={this.addStepClickHandler}\n                  className=\"custom-button add-step-button trail_add_step_btn\"\n                >\n                  ADD STEP\n                </button>\n              </div>\n            )}\n            {tourStatus === \"preview\" && tourType === \"video\" && (\n              <input\n                type=\"submit\"\n                onClick={() => this.onTourVideoTrail(this.state.tourStep - 1)}\n                value=\"Previous\"\n                className=\"custom-button\"\n              />\n            )}\n            {tourStatus === \"preview\" && tourType === \"video\" && (\n              <input\n                type=\"submit\"\n                onClick={() => this.onTourVideoTrail(this.state.tourStep + 1)}\n                value=\"Next\"\n                className=\"custom-button\"\n              />\n            )}\n            {tourStatus !== \"preview\" && tourType === \"audio\" && (\n              <div className=\"mb-2\">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  value={title}\n                  placeholder=\"Enter Audio Title\"\n                  className=\"ant-input\"\n                  onChange={this.onChangeToInput}\n                  onKeyDown={(e) => e.stopPropagation()}\n                  autoComplete=\"off\"\n                />\n\n                {titleInvalid && title.length === 0 && (\n                  <div class=\"ant-form-item-explain ant-form-item-explain-error\">\n                    <div role=\"alert\">Please enter title!</div>\n                  </div>\n                )}\n              </div>\n            )}\n            {tourStatus !== \"preview\" && tourType === \"audio\" && (\n              <input\n                type=\"text\"\n                name=\"web_url\"\n                value={fileName}\n                onKeyDown={(e) => e.stopPropagation()}\n                placeholder=\"Audio Filename\"\n                className=\"ant-input mb-2\"\n                autoComplete=\"off\"\n                disabled={true}\n              />\n            )}\n            {tourStatus !== \"preview\" && tourType === \"audio\" && (\n              <div className=\"upload_bx\">\n                <div className=\"ant-upload\">\n                  <p className=\"ant-upload-drag-icon\">\n                    {fileLoading && (\n                      <div class=\"trial_spinner\">\n                        <img\n                          alt=\"ring1\"\n                          class=\"ring1\"\n                          src={require(`./images/loding1.png`)}\n                        />\n                        <img\n                          alt=\"ring2\"\n                          class=\"ring2\"\n                          src={require(`./images/loding2.png`)}\n                        />\n                      </div>\n                    )}\n                    {!fileLoading && <CloudUploadOutlined />}\n                  </p>\n                  <p className=\"ant-upload-text\">\n                    {fileLoading ? \"Uploading\" : \"Upload\"} Audio\n                  </p>\n                </div>\n\n                <input\n                  type=\"file\"\n                  name=\"media\"\n                  accept={mediaType}\n                  onChange={this.handleChange}\n                />\n\n                {fileNameInvalid && fileName.length === 0 && (\n                  <div class=\"ant-form-item-explain ant-form-item-explain-error\">\n                    <div role=\"alert\">File is required!</div>\n                  </div>\n                )}\n              </div>\n            )}\n            {tourStatus !== \"preview\" && tourType === \"audio\" && (\n              <div className=\"add-step-bt-container\">\n                <button\n                  disabled={fileLoading}\n                  onClick={this.addStepClickHandler}\n                  className=\"custom-button add-step-button trail_add_step_btn\"\n                >\n                  ADD STEP\n                </button>\n              </div>\n            )}\n            {tourStatus === \"preview\" && tourType === \"audio\" && (\n              <input\n                type=\"submit\"\n                onClick={() => this.onTourVideoTrail(this.state.tourStep - 1)}\n                value=\"Previous\"\n                className=\"custom-button\"\n              />\n            )}\n            {tourStatus === \"preview\" && tourType === \"audio\" && (\n              <input\n                type=\"submit\"\n                onClick={() => this.onTourVideoTrail(this.state.tourStep + 1)}\n                value=\"Next\"\n                className=\"custom-button\"\n              />\n            )}\n          </div>\n          {tourType !== \"audio\" && tourType !== \"video\" && (\n            <form className=\"scrollable-steps-list\" id=\"\">\n              <SortableContainer\n                onSortEnd={this.onSectionDragAndDrop}\n                useDragHandle\n              >\n                {this.state.trailList.map((result, index) => (\n                  <SortableItem\n                    key={`item-${index}`}\n                    tourType={this.state.tourType}\n                    onClick={this.onClickToGetRow}\n                    index={index}\n                    i={index}\n                    tourStep={tourStep}\n                    result={result}\n                    isDeleteModalOpen={this.state.deleteModal.show}\n                    onDeleteModalOpen={this.onDeleteModalOpen}\n                    MobileTargetNotFound={this.state.MobileTargetNotFound}\n                    currentTrailsTab={currentTrailsTab}\n                  />\n                ))}\n              </SortableContainer>\n            </form>\n          )}\n        </div>\n        <div className=\"mt-18\">\n          {tourType !== \"audio\" && tourType !== \"video\" && this.state.saveSort && (\n            <div className=\"trailButtonsWrapper\">\n              <button className=\"custom-button\" onClick={this.saveSortedTrails}>\n                Save\n              </button>\n            </div>\n          )}\n          {/* {tourType !== \"audio\" &&\n            tourType !== \"video\" &&\n            this.state.trailList.length > 0 && (\n              <div className=\"trailButtonsWrapper jc-end pb-0\">\n                <button\n                  className=\"custom-button share-button\"\n                  onClick={this.copyWebApplink}\n                >\n                  Share\n                </button>\n              </div>\n            )} */}\n        </div>\n      </div>\n    );\n\n    if (tourType === \"preview\") {\n      sideBar = (\n        <form className=\"flow tr_side_form\" id=\"\">\n          <SortableContainer\n            onSortEnd={this.onSectionDragAndDrop}\n            useDragHandle\n            pressDelay={200}\n          >\n            {this.state.trailList.map((result, index) => (\n              <SortableItem\n                currentTrailsTab={currentTrailsTab}\n                key={`item-${index}`}\n                tourType={this.state.tourType}\n                onClick={this.onClickToGetRow}\n                index={index}\n                i={index}\n                tourStep={tourStep}\n                result={result}\n                isDeleteModalOpen={this.state.deleteModal.show}\n                onDeleteModalOpen={this.onDeleteModalOpen}\n                MobileTargetNotFound={this.state.MobileTargetNotFound}\n              />\n            ))}\n          </SortableContainer>\n        </form>\n      );\n    }\n\n    let componentData = (\n      <div id=\"my-extension-defaultroot\">\n        {/* Delete modal */}\n        {this.state.deleteModal.show && (\n          <TrailDeleteModal\n            onDone={onDone}\n            isTourLoading={isTourLoading}\n            onTourLoading={this.onTourLoading}\n            deleteModal={this.state.deleteModal}\n            onDeleteModalClose={this.onDeleteModalClose}\n            onDeleteButtonClick={this.onDeleteButtonClick}\n          />\n        )}\n\n        {/* Send tip modal */}\n        {this.state.sendTipModal && (\n          <SendTipModal\n            sendTip={this.sendTip}\n            setError={this.state.setError}\n            isSuccess={this.state.isSuccess}\n            isLoading={this.state.isSuccess}\n            sendLoader={this.state.sendLoader}\n            sendTipModal={this.state.sendTipModal}\n            onSendTipModalClose={this.onSendTipModalClose}\n          />\n        )}\n\n        <div\n          className={`sidepanal adadad trail_sidepanel_overlay ${\n            tourType === \"audio\" ||\n            tourType === \"video\" ||\n            tourType === \"Make Edit\"\n              ? \"white_background\"\n              : \"transparent_background\"\n          }`}\n        >\n          {createModalOpen && (\n            <CreateModalComponent\n              stepType={stepType}\n              open={createModalOpen}\n              screenSize={resizeScreen}\n              onSave={this.onSaveTrail}\n              isTourLoading={isTourLoading}\n              toggle={this.onToggleCreateModal}\n              onTourLoading={this.onTourLoading}\n              closeButtonHandler={this.onBackArrowClickHandler}\n            />\n          )}\n          <div>\n            {currentTourType === \"tooltip\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <WebUserTour\n                  toogleTargetDataNotFound={(value) =>\n                    this.setState({ targetDataNotFound: value })\n                  }\n                  tooltipRef={this.state.tooltipRef}\n                  tooltipToggle={this.webTourToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                  onNotFoundTarget={this.onNotFoundTarget}\n                  onSendTipModalOpen={this.onSendTipModalOpen}\n                  onChangeTourType={this.props.onChangeTourType}\n                  mainToggle={this.props.mainToggle}\n                />\n              )}\n            {currentTourType === \"video\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <VideoTour\n                  videoRef={this.state.videoRef}\n                  videoToggle={this.videoToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                />\n              )}\n            {currentTourType === \"audio\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <AudioTour\n                  audioRef={this.state.audioRef}\n                  audioToggle={this.audioToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                />\n              )}\n            {currentTourType === \"modal\" &&\n              tourType === \"preview\" &&\n              !overlay &&\n              tourStep !== \"\" &&\n              tourUrl && (\n                <PreviewModalComponent\n                  ref={this.previewModalRef}\n                  previewModalRef={this.state.previewModalRef}\n                  previewModalToggle={this.modelToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                  onSendTipModalOpen={this.onSendTipModalOpen}\n                />\n              )}\n\n            {currentTourType !== \"\" &&\n              tourType === \"preview\" &&\n              tourStep !== \"\" &&\n              !overlay &&\n              this.state.targetDataNotFound && (\n                <TargetNotFound\n                  toogleTargetDataNotFound={(value) =>\n                    this.setState({ targetDataNotFound: value })\n                  }\n                  previewModalToggle={this.modelToggler}\n                  onDone={onDone}\n                  data={trailList}\n                  toggle={this.onClearToggle}\n                  tourStep={tourStep}\n                  tour={this.tourManage}\n                  tourSide={this.state.tourSide}\n                  closeButtonHandler={this.onCloseTooltipHandle}\n                  setLoadingState={this.setLoadingState}\n                  onSendTipModalOpen={this.onSendTipModalOpen}\n                />\n              )}\n          </div>\n          <div\n            className={`sidepopup ${\n              openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n            }`}\n            // className={`sidepopup ${\n            //   openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n            // } ${tourType === \"preview\" ? \"overflow1\" : \"\"}`}\n          >\n            <div className=\"space\"></div>\n            {sideBar}\n            <div className=\"space\"></div>\n\n            {tourType !== \"audio\" &&\n              tourType !== \"video\" &&\n              this.state.trailList.length > 0 && (\n                <div className=\"trailButtonsWrapper jc-end pb-0\">\n                  <button\n                    className=\"custom-button share-button\"\n                    onClick={this.copyWebApplink}\n                  >\n                    Share\n                  </button>\n                </div>\n              )}\n          </div>\n          {this.state.dynamicPopupButton && (\n            <button className=\"menu pop\" onClick={this.openPopup}>\n              <img alt=\"\" src={require(\"./images/trailit_X_button_new.png\")} />\n            </button>\n          )}\n        </div>\n      </div>\n    );\n\n    if (\n      isDraggable &&\n      tourType !== \"Make Edit\" &&\n      currentTourType !== \"audio\" &&\n      currentTourType !== \"video\"\n    ) {\n      componentData = (\n        <Draggable disabled={!isDraggable} position={null}>\n          <div>\n            <div id=\"my-extension-defaultroot\">\n              {/* Delete modal */}\n              {this.state.deleteModal.show && (\n                <TrailDeleteModal\n                  onDone={onDone}\n                  isTourLoading={isTourLoading}\n                  onTourLoading={this.onTourLoading}\n                  deleteModal={this.state.deleteModal}\n                  onDeleteModalClose={this.onDeleteModalClose}\n                  onDeleteButtonClick={this.onDeleteButtonClick}\n                />\n              )}\n\n              {/* Send tip modal */}\n              {this.state.sendTipModal && (\n                <SendTipModal\n                  sendTip={this.sendTip}\n                  setError={this.state.setError}\n                  isSuccess={this.state.isSuccess}\n                  isLoading={this.state.isSuccess}\n                  sendLoader={this.state.sendLoader}\n                  sendTipModal={this.state.sendTipModal}\n                  onSendTipModalClose={this.onSendTipModalClose}\n                />\n              )}\n\n              <div\n                className={`sidepanal adadad trail_sidepanel_overlay ${\n                  tourType === \"audio\" ||\n                  tourType === \"video\" ||\n                  tourType === \"Make Edit\"\n                    ? \"white_background\"\n                    : \"transparent_background\"\n                }`}\n              >\n                {createModalOpen && (\n                  <CreateModalComponent\n                    stepType={stepType}\n                    open={createModalOpen}\n                    onSave={this.onSaveTrail}\n                    screenSize={resizeScreen}\n                    isTourLoading={isTourLoading}\n                    toggle={this.onToggleCreateModal}\n                    onTourLoading={this.onTourLoading}\n                    closeButtonHandler={this.onBackArrowClickHandler}\n                  />\n                )}\n                <div>\n                  {currentTourType === \"tooltip\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <WebUserTour\n                        toogleTargetDataNotFound={(value) =>\n                          this.setState({\n                            targetDataNotFound: value,\n                          })\n                        }\n                        tooltipRef={this.state.tooltipRef}\n                        tooltipToggle={this.webTourToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                        onNotFoundTarget={this.onNotFoundTarget}\n                        onSendTipModalOpen={this.onSendTipModalOpen}\n                        onChangeTourType={this.props.onChangeTourType}\n                        mainToggle={this.props.mainToggle}\n                      />\n                    )}\n                  {currentTourType === \"video\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <VideoTour\n                        videoRef={this.state.videoRef}\n                        videoToggle={this.videoToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                      />\n                    )}\n                  {currentTourType === \"audio\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <AudioTour\n                        audioRef={this.state.audioRef}\n                        audioToggle={this.audioToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                      />\n                    )}\n                  {currentTourType === \"modal\" &&\n                    tourType === \"preview\" &&\n                    !overlay &&\n                    tourStep !== \"\" &&\n                    tourUrl && (\n                      <PreviewModalComponent\n                        ref={this.previewModalRef}\n                        previewModalRef={this.state.previewModalRef}\n                        previewModalToggle={this.modelToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                        onSendTipModalOpen={this.onSendTipModalOpen}\n                      />\n                    )}\n\n                  {currentTourType !== \"\" &&\n                    tourType === \"preview\" &&\n                    tourStep !== \"\" &&\n                    !overlay &&\n                    this.state.targetDataNotFound && (\n                      <TargetNotFound\n                        toogleTargetDataNotFound={(value) =>\n                          this.setState({ targetDataNotFound: value })\n                        }\n                        previewModalToggle={this.modelToggler}\n                        onDone={onDone}\n                        data={trailList}\n                        toggle={this.onClearToggle}\n                        tourStep={tourStep}\n                        tour={this.tourManage}\n                        tourSide={this.state.tourSide}\n                        closeButtonHandler={this.onCloseTooltipHandle}\n                        setLoadingState={this.setLoadingState}\n                        onSendTipModalOpen={this.onSendTipModalOpen}\n                      />\n                    )}\n                </div>\n                <div\n                  className={`sidepopup ${\n                    openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n                  }`}\n                  // className={`sidepopup ${\n                  //   openSidebar ? \"open trail_builder_side_panel_open\" : \"\"\n                  // } ${tourType === \"preview\" ? \"overflow1\" : \"\"}`}\n                >\n                  <div className=\"space\"></div>\n                  {sideBar}\n                  <div className=\"space\"></div>\n                  {tourType !== \"audio\" &&\n                    tourType !== \"video\" &&\n                    this.state.trailList.length > 0 && (\n                      <div className=\"trailButtonsWrapper jc-end pb-0\">\n                        <button\n                          className=\"custom-button share-button\"\n                          onClick={this.copyWebApplink}\n                        >\n                          Share\n                        </button>\n                      </div>\n                    )}\n                </div>\n                {this.state.dynamicPopupButton && (\n                  <button\n                    onTouchEnd={this.openPopup}\n                    className=\"menu pop\"\n                    onClick={this.openPopup}\n                  >\n                    <img\n                      alt=\"\"\n                      src={require(\"./images/trailit_X_button_new.png\")}\n                    />\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </Draggable>\n      );\n    }\n\n    if (isTourLoading) {\n      if (\n        (currentTourType === \"preview\" || currentTourType === \"\") &&\n        (tourType === \"modal\" || tourType === \"Make Edit\" || tourType === \"\")\n      ) {\n        const modal = shadowRoot.querySelector(\".trial_create_modal_main\");\n\n        if (modal) {\n          modal.classList.remove(\"trial_create_modal_main\");\n        }\n      }\n\n      const myExtensionRootFlip = shadowRoot.getElementById(\n        \"my-extension-root-flip\"\n      );\n\n      if (myExtensionRootFlip) {\n        myExtensionRootFlip.style.zIndex = \"99999999\";\n      }\n\n      const loader = shadowRoot.getElementById(\"extension-splash-screen\");\n\n      if (loader) {\n        loader.style.display = \"flex\";\n      }\n    } else {\n      const myExtensionRootFlip = shadowRoot.getElementById(\n        \"my-extension-root-flip\"\n      );\n\n      if (myExtensionRootFlip) {\n        myExtensionRootFlip.style.zIndex = \"9999999999\";\n      }\n\n      const loader = shadowRoot.getElementById(\"extension-splash-screen\");\n\n      if (loader) {\n        loader.style.display = \"none\";\n      }\n    }\n\n    return (\n      <>\n        <style>{defaultButtonCss1}</style>\n        <style>{defaultButtonCss2}</style>\n        <style>{defaultButtonCss3}</style>\n\n        {componentData}\n      </>\n    );\n  }\n}\n\nclass MainFlip extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mainComponent: false,\n      defaultComponent: false,\n      isFlipped: false,\n      tourType: \"\",\n    };\n\n    this.onStorageHandleChange = this.onStorageHandleChange.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\n      \"visibilitychange\",\n      function () {\n        if (document.hidden) {\n          //...\n        }\n      },\n      false\n    );\n\n    chrome.storage.local.get(\n      [\"openButton\", \"tourType\"],\n      function (items) {\n        this.onChangeTourType(items.tourType);\n        if (items.tourType !== \"preview\") {\n          this.setState({\n            defaultComponent: false,\n            mainComponent: false,\n            isFlipped: false,\n          });\n        } else {\n          toggle();\n          this.setState({\n            defaultComponent: true,\n            mainComponent: false,\n            isFlipped: true,\n          });\n        }\n      }.bind(this)\n    );\n  }\n\n  onStorageHandleChange = (changes) => {\n    if (\n      changes.newValue.tourType !== undefined &&\n      changes.newValue.tourType === \"\"\n    ) {\n      this.setState({ isFlipped: false });\n    } else if (\n      changes.newValue.tourType !== undefined &&\n      changes.newValue.tourType !== \"\"\n    ) {\n      this.setState({ isFlipped: true });\n    }\n  };\n\n  mainToggle = (isTrue) => {\n    if (this.state.mainComponent || isTrue) {\n      root1 = \"block\";\n      this.setState({\n        defaultComponent: true,\n        mainComponent: false,\n        isFlipped: true,\n      });\n    } else {\n      root1 = \"none\";\n      this.setState({\n        defaultComponent: false,\n        mainComponent: true,\n        isFlipped: false,\n      });\n    }\n  };\n\n  downToggleButton = (status) => {\n    if (status) {\n      root1 = \"block\";\n      this.setState({ defaultComponent: true, mainComponent: false });\n    } else {\n      root1 = \"none\";\n      this.setState({ defaultComponent: false, mainComponent: true });\n    }\n  };\n\n  onChangeTourType = (type) => {\n    if (type === \"\" || type === undefined) {\n      this.setState({ isFlipped: false, tourType: \"\" });\n    } else {\n      this.setState({ isFlipped: true, tourType: type });\n    }\n  };\n\n  render() {\n    const { defaultComponent, isFlipped } = this.state;\n    defaultComp = defaultComponent;\n    flipped = isFlipped;\n\n    return (\n      <React.Fragment>\n        <style>{mainFlipCss}</style>\n        <div className={`trail_card ${isFlipped ? \"trail_flipped\" : \"\"}`}>\n          <div className={\"trail_card__face trail_card__face--front\"}>\n            <Main\n              mainToggle={this.mainToggle}\n              onChangeTourType={this.onChangeTourType}\n              downToggleButton={this.downToggleButton}\n            />\n          </div>\n          <div className={\"trail_card__face trail_card__face--back\"}>\n            <DefaultButton\n              mainToggle={this.mainToggle}\n              onChangeTourType={this.onChangeTourType}\n              downToggleButton={this.downToggleButton}\n            />\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\n// MainFlip render function\nconst mainFlipRender = () => {\n  chrome.storage.local.get(\n    [\"isAuth\", \"authToken\", \"userData\"],\n    function (items) {\n      if (items.isAuth) {\n        // Update content file code in tabs\n        const extensionTestID = \"extension-div\";\n        let extensionTest = document.getElementById(extensionTestID);\n\n        if (!extensionTest) {\n          extensionTest = document.createElement(\"div\");\n          extensionTest.setAttribute(\"id\", extensionTestID);\n          window.document.body.append(extensionTest);\n          extensionTest.attachShadow({ mode: \"open\" });\n        }\n\n        // Select our shadow host\n        let extensionRoot = document.getElementById(\"extension-div\");\n        if (extensionRoot) {\n          // Create the shadow root\n          const shadowRoot = extensionRoot.shadowRoot;\n\n          if (shadowRoot) {\n            app = shadowRoot.getElementById(\"my-extension-root-flip\");\n            if (!app) {\n              // Create a div element\n              app = document.createElement(\"div\");\n              app.setAttribute(\"id\", \"my-extension-root-flip\");\n\n              const loader = document.createElement(\"div\");\n              loader.setAttribute(\"id\", \"extension-splash-screen\");\n              loader.innerHTML = `\n                <svg className=\"extension-splash-spinner\" viewBox=\"0 0 50 50\">\n                  <circle\n                      className=\"path\"\n                      cx=\"25\"\n                      cy=\"25\"\n                      r=\"20\"\n                      fill=\"none\"\n                      strokeWidth=\"5\"\n                  ></circle>\n                </svg>\n              `;\n\n              const modalOpen = document.createElement(\"div\");\n              modalOpen.setAttribute(\"class\", \"modal-open\");\n\n              const style0 = document.createElement(\"style\");\n              style0.textContent = myExtensionRootFlipCss0;\n\n              const style1 = document.createElement(\"style\");\n              style1.textContent = myExtensionRootFlipCss1;\n\n              const style2 = document.createElement(\"style\");\n              style2.textContent = myExtensionRootFlipCss2;\n\n              const style3 = document.createElement(\"style\");\n              style3.textContent = myExtensionRootFlipCss3;\n\n              const style4 = document.createElement(\"style\");\n              style4.textContent = myExtensionRootFlipCss4;\n\n              const style5 = document.createElement(\"style\");\n              style5.textContent = myExtensionRootFlipCss5;\n\n              const tooltipStyle1 = document.createElement(\"style\");\n              tooltipStyle1.textContent = tooltipCss1;\n\n              // Append div to shadow DOM\n              shadowRoot.appendChild(style1);\n              shadowRoot.appendChild(style2);\n              shadowRoot.appendChild(style3);\n              shadowRoot.appendChild(style4);\n              shadowRoot.appendChild(style5);\n              shadowRoot.appendChild(tooltipStyle1);\n              shadowRoot.appendChild(app);\n              shadowRoot.appendChild(loader);\n              shadowRoot.appendChild(modalOpen);\n            }\n          }\n        }\n\n        app.style.display = \"none\";\n\n        ReactDOM.render(<MainFlip />, app);\n      }\n    }\n  );\n};\n\nchrome.runtime.onConnect.addListener((port) => {\n  if (port.name === \"Trailit-webapp\") {\n    port.onMessage.addListener((msgObj, sender, sendResponse) => {\n      if (msgObj.message === \"check_login_status\") {\n        chrome.storage.local.get([\"isAuth\", \"userData\"], (items) => {\n          if (items.isAuth) {\n            port.postMessage({\n              response: true,\n              userId: get([\"userData\", \"_id\"], items),\n            });\n          } else {\n            port.postMessage({ response: false });\n          }\n        });\n      }\n    });\n  }\n});\n\nchrome.runtime.onMessage.addListener((msgObj, sender, sendResponse) => {\n  if (msgObj.message === \"addon_login\") {\n    chrome.storage.local.set({\n      userData: { ...msgObj.payload.loggedInData },\n      authToken: msgObj.payload.authToken,\n      isAuth: true,\n      // reload: true,\n    });\n\n    // Call main flip render\n    mainFlipRender();\n  }\n  if (msgObj.message === \"addon_logout\") {\n    chrome.storage.local.clear();\n\n    if (app && app.style) {\n      app.style.display = \"none\";\n    }\n  }\n\n  if (msgObj.message === \"autoLogoutTriggered\") {\n    chrome.storage.local.get(\n      [\"isAuth\", \"autoLogoutTime\"],\n      async function (items) {\n        const logoutTime = items.autoLogoutTime;\n        if (!logoutTime) return;\n\n        if (items.isAuth && logoutTime < Date.now()) {\n          try {\n            // Call logout api\n            await logout();\n            // if (msgObj.apiCall) {\n            // }\n\n            chrome.runtime.sendMessage(\"\", { type: \"logout\" });\n            chrome.runtime.sendMessage({ badgeText: `` });\n            chrome.storage.local.set({\n              trail_web_user_tour: [],\n              notification: true,\n              closeContinue: false,\n            });\n            chrome.storage.local.clear();\n          } catch (err) {}\n        }\n      }\n    );\n  }\n});\n\nif (chrome.runtime.id) {\n  // Call mainFlipRender function\n  mainFlipRender();\n\n  chrome.runtime.onMessage.addListener((msgObj, sender, sendResponse) => {\n    if (msgObj.status === \"logout\") {\n      // Remove items from local storage\n      // window.localStorage.removeItem(\"add-on-auto-lgout-tm\");\n\n      // Reset items from chrome storage\n      chrome.storage.local.remove(\"autoLogoutTime\");\n\n      if (app && app.style && app.style.display === \"block\") {\n        app.style.display = \"none\";\n      }\n    } else {\n      if (\n        msgObj.subject !== \"updateTimeout\" &&\n        msgObj.subject !== \"DOMObj\" &&\n        msgObj !== \"chrome_modal\" &&\n        msgObj.subject !== \"CreateTrail\" &&\n        msgObj.message !== \"urlChanged\" &&\n        msgObj.message !== \"addon_login\" &&\n        msgObj.message !== \"addon_logout\"\n      ) {\n        setTimeout(() => {\n          // to handle open tab in entire tab\n          chrome.storage.local.get(\n            [\"openButton\", \"tourType\"],\n            function (items) {\n              if (app && app.style && app.style.display === \"none\") {\n                app.style.display = \"block\";\n              }\n            }\n          );\n        });\n      }\n    }\n  });\n}\n\nconst toggle = () => {\n  if (app.style.display === \"none\") {\n    app.style.display = \"block\";\n  } else {\n    app.style.display = \"none\";\n  }\n};\n",["315","316"],"/home/savan/Documents/Portfolio/extension/src/components/mySubscription.js",["317","318","319","320"],"import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody } from \"reactstrap\";\r\nimport $ from \"jquery\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass MySubscription extends React.Component {\r\n  toggle = () => {\r\n    this.props.toggle(false);\r\n  };\r\n\r\n  render() {\r\n    const { open, followerList } = this.props;\r\n\r\n    $(document).ready(() => {\r\n      const modalDiv = document.querySelector(\".tr_modal\");\r\n\r\n      if (modalDiv) {\r\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\r\n            \"class\",\r\n            \"trial_modal_show trial_create_modal_main\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          isOpen={open}\r\n          toggle={this.toggle}\r\n          className=\"tr_modal\"\r\n          centered={true}\r\n        >\r\n          <ModalHeader toggle={this.toggle}>My Subscription</ModalHeader>\r\n          <ModalBody>\r\n            <ul className=\"tr_notification_bx\">\r\n              {followerList && followerList.length <= 0 && (\r\n                <li class=\"tr_notFound_subscription\">No data found</li>\r\n              )}\r\n              {followerList.map((res) => (\r\n                <li>\r\n                  <a href=\"javascript:void(0);\">\r\n                    <img src=\"https://ca.slack-edge.com/TC9UZTSLX-UC8UK8ECS-96ca73a9bdf0-512\" />\r\n                    <div>\r\n                      <h4>{res}</h4>\r\n                      <p>2 hrs ago</p>\r\n                    </div>\r\n                  </a>\r\n                </li>\r\n              ))}\r\n            </ul>\r\n            <div className=\"trailButtonsWrapper\">\r\n              <Button className=\"custom-button\" onClick={this.toggle}>\r\n                Cancel\r\n              </Button>\r\n            </div>\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MySubscription;\r\n",["321","322"],"/home/savan/Documents/Portfolio/extension/src/components/Modal/SendTipModal.js",[],"/home/savan/Documents/Portfolio/extension/src/components/Modal/TrailSettingsModal.js",[],"/home/savan/Documents/Portfolio/extension/src/components/Modal/createModalComponent.js",["323","324","325","326","327"],"import React from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from \"reactstrap\";\r\nimport { Form, Input } from \"antd\";\r\nimport Icon from \"@ant-design/icons\";\r\nimport $ from \"jquery\";\r\n\r\nimport {\r\n  commonTypeSelectonButton,\r\n  commonInitialRenderFunction,\r\n  commonTooltipFormFunction,\r\n  handleFileChange,\r\n  commonFileUploadFunction,\r\n} from \"../common\";\r\n\r\nlet modalOpen;\r\n\r\nclass CreateModalComponent extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      title: \"\",\r\n      description: \"\",\r\n      web_url: \"\",\r\n      trailStatus: \"text\",\r\n      fileName: \"\",\r\n      fileLoading: false,\r\n      showPreview: false,\r\n      titleInvalid: false,\r\n      fileNameInvalid: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // window.scrollTo(0, 0);\r\n    const scrollTop = $(window).scrollTop();\r\n    $(\"html, body\").animate({ scrollTop: scrollTop });\r\n\r\n    // Set trail status state\r\n    this.setState({ trailStatus: this.props.stepType });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.stepType !== this.props.stepType) {\r\n      // Set trail status state\r\n      this.setState({ trailStatus: this.props.stepType });\r\n    }\r\n  }\r\n\r\n  onChangeToInput = (e) => {\r\n    e.stopPropagation();\r\n\r\n    const value = e.target.value;\r\n    const isInvalid = value.length === 0 ? true : false;\r\n\r\n    // Set state\r\n    this.setState({\r\n      title: value,\r\n      titleInvalid: isInvalid,\r\n    });\r\n  };\r\n\r\n  onTitleChangeHandler = (e) => {\r\n    e.stopPropagation();\r\n\r\n    this.setState({ title: e.target.value });\r\n  };\r\n\r\n  onDescriptionChangeHandler = (value) => {\r\n    this.setState({ description: value });\r\n  };\r\n\r\n  onAddStep = async () => {\r\n    const { trailStatus, title, web_url, description, fileName } = this.state;\r\n\r\n    if (fileName === \"\" || title === \"\") {\r\n      this.setState({\r\n        fileNameInvalid: true,\r\n        titleInvalid: true,\r\n      });\r\n\r\n      return;\r\n    } else {\r\n      this.setState({\r\n        fileNameInvalid: false,\r\n        titleInvalid: false,\r\n      });\r\n    }\r\n\r\n    // Call on tour loading function\r\n    this.props.onTourLoading(true);\r\n\r\n    let obj;\r\n\r\n    if (trailStatus === \"text\") {\r\n      obj = {\r\n        url: document.URL,\r\n        type: \"modal\",\r\n        mediaType: \"modal\",\r\n        title: title,\r\n        description,\r\n      };\r\n      // });\r\n    } else {\r\n      if (this.state.title === \"\" && this.state.web_url === \"\") {\r\n        return;\r\n      }\r\n\r\n      obj = {\r\n        url: document.URL,\r\n        type: \"modal\",\r\n        mediaType: trailStatus,\r\n        title,\r\n        web_url,\r\n      };\r\n    }\r\n\r\n    try {\r\n      await this.props.onSave(obj);\r\n      this.toggle();\r\n\r\n      // Call on tour loading function\r\n      this.props.onTourLoading(false);\r\n    } catch (err) {\r\n      console.log(\"err\", err);\r\n      // Call on tour loading function\r\n      this.props.onTourLoading(false);\r\n\r\n      alert(\"Error while creating tour!\");\r\n    }\r\n  };\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      title: \"\",\r\n      description: \"\",\r\n      web_url: \"\",\r\n      fileName: \"\",\r\n      trailStatus: \"text\",\r\n    });\r\n\r\n    this.props.toggle(false);\r\n  };\r\n\r\n  onSelectOption = (status) => {\r\n    this.setState({ trailStatus: status });\r\n  };\r\n\r\n  uploadFile = (file) => {\r\n    this.setState({ fileLoading: true });\r\n\r\n    commonFileUploadFunction(file)\r\n      .then((response) => {\r\n        return response;\r\n      })\r\n      .then((res) => {\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        this.setState({\r\n          showPreview: true,\r\n          fileLoading: false,\r\n          fileName: file.name,\r\n          fileNameInvalid: false,\r\n          web_url: data.response.result.fileUrl,\r\n        });\r\n      })\r\n      .catch((err) => {\r\n        this.setState({ fileLoading: false });\r\n        console.log(\"Error fetching profile \" + err);\r\n      });\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const { trailStatus } = this.state;\r\n\r\n    // Call common hadler file change function in common file\r\n    handleFileChange(e, trailStatus, this.uploadFile);\r\n  };\r\n\r\n  selectedTooltipForm = (mediaType) => {\r\n    const {\r\n      trailStatus,\r\n      title,\r\n      fileName,\r\n      fileLoading,\r\n      titleInvalid,\r\n      fileNameInvalid,\r\n    } = this.state;\r\n\r\n    // Common tooltip form function imported from common file\r\n    return commonTooltipFormFunction(\r\n      trailStatus,\r\n      title,\r\n      fileName,\r\n      fileLoading,\r\n      this.toggle,\r\n      this.onAddStep,\r\n      this.onChangeToInput,\r\n      this.handleChange,\r\n      mediaType,\r\n      titleInvalid,\r\n      fileNameInvalid\r\n    );\r\n  };\r\n\r\n  onButtonCloseHandler = async (e) => {\r\n    // Call parent component function to close tooltip preview\r\n    await this.props.closeButtonHandler(e);\r\n  };\r\n\r\n  render() {\r\n    modalOpen = this.props.open;\r\n    const { title, description, fileName, fileLoading } = this.state;\r\n    let tourType = \"modal\";\r\n\r\n    let tooltipForm = commonInitialRenderFunction(\r\n      this.state.trailStatus,\r\n      title,\r\n      description,\r\n      this.onTitleChangeHandler,\r\n      this.onDescriptionChangeHandler,\r\n      this.toggle,\r\n      this.onAddStep,\r\n      this.selectedTooltipForm,\r\n      fileLoading\r\n    );\r\n\r\n    const { trailStatus } = this.state;\r\n\r\n    if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.getElementById(\"my-extension-root-flip\").style.display ===\r\n      \"none\"\r\n    ) {\r\n      modalOpen = false;\r\n    } else if (\r\n      document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.getElementById(\"my-extension-root-flip\").style.display ===\r\n      \"block\"\r\n    ) {\r\n      modalOpen = true;\r\n    }\r\n\r\n    $(document).ready(() => {\r\n      const modalDiv = document\r\n        .getElementById(\"extension-div\")\r\n        .shadowRoot.querySelector(\".trail_create_modal\");\r\n      if (modalDiv) {\r\n        if (!modalDiv.parentNode.parentNode.parentNode.getAttribute(\"class\")) {\r\n          modalDiv.parentNode.parentNode.parentNode.setAttribute(\r\n            \"class\",\r\n            \"trial_modal_show trial_create_modal_main\"\r\n          );\r\n        }\r\n      }\r\n    });\r\n\r\n    let headerTitle = \"\";\r\n\r\n    if (trailStatus === \"video\") {\r\n      headerTitle = \"Video\";\r\n    } else if (trailStatus === \"audio\") {\r\n      headerTitle = \"Audio\";\r\n    }\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Modal\r\n          centered={true}\r\n          isOpen={modalOpen}\r\n          toggle={this.onButtonCloseHandler}\r\n          className={`tr_modal trail_create_modal ${\r\n            this.props.screenSize() && \"responsive_modal\"\r\n          }`}\r\n          container={document\r\n            .getElementById(\"extension-div\")\r\n            .shadowRoot.querySelector(\".modal-open\")}\r\n        >\r\n          <ModalHeader\r\n            toggle={this.toggle}\r\n            className=\"tr_modal_trail_modal_header\"\r\n          >\r\n            Create {headerTitle} Overlay\r\n          </ModalHeader>\r\n          <ModalBody>\r\n            {commonTypeSelectonButton(\r\n              trailStatus,\r\n              this.onSelectOption,\r\n              tooltipForm,\r\n              fileName,\r\n              fileLoading,\r\n              tourType\r\n            )}\r\n          </ModalBody>\r\n        </Modal>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateModalComponent;\r\n","/home/savan/Documents/Portfolio/extension/src/components/Modal/TrailDeleteModal.js",[],"/home/savan/Documents/Portfolio/extension/src/css/tooltip.js",[],"/home/savan/Documents/Portfolio/extension/src/css/mainflip.js",[],"/home/savan/Documents/Portfolio/extension/src/css/defaultButton.js",[],"/home/savan/Documents/Portfolio/extension/src/code/sendtx.js",[],"/home/savan/Documents/Portfolio/extension/src/common/draggable.js",[],"/home/savan/Documents/Portfolio/extension/src/components/Modal/ContinueTourConfirmation.js",[],"/home/savan/Documents/Portfolio/extension/src/common/SendTipForm.js",["328"],"/home/savan/Documents/Portfolio/extension/src/components/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/near.js",["329"],"import BN from 'bn.js';\nimport { Account } from './account';\nimport { Connection } from './connection';\nimport { Contract } from './contract';\nimport { readKeyFile } from './key_stores/unencrypted_file_system_keystore';\nimport { LocalAccountCreator, UrlAccountCreator } from './account_creator';\nimport { InMemoryKeyStore, MergeKeyStore } from './key_stores';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nexport class Near {\n    constructor(config) {\n        this.config = config;\n        this.connection = Connection.fromConfig({\n            networkId: config.networkId,\n            provider: { type: 'JsonRpcProvider', args: { url: config.nodeUrl } },\n            signer: config.signer || { type: 'InMemorySigner', keyStore: config.keyStore || config.deps.keyStore }\n        });\n        if (config.masterAccount) {\n            // TODO: figure out better way of specifiying initial balance.\n            // Hardcoded number below must be enough to pay the gas cost to dev-deploy with near-shell for multiple times\n            const initialBalance = config.initialBalance ? new BN(config.initialBalance) : new BN('500000000000000000000000000');\n            this.accountCreator = new LocalAccountCreator(new Account(this.connection, config.masterAccount), initialBalance);\n        }\n        else if (config.helperUrl) {\n            this.accountCreator = new UrlAccountCreator(this.connection, config.helperUrl);\n        }\n        else {\n            this.accountCreator = null;\n        }\n    }\n    /**\n     *\n     * @param accountId near accountId used to interact with the network.\n     */\n    account(accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, accountId);\n            yield account.state();\n            return account;\n        });\n    }\n    /**\n     *\n     * @param accountId\n     * @param publicKey\n     */\n    createAccount(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.accountCreator) {\n                throw new Error('Must specify account creator, either via masterAccount or helperUrl configuration settings.');\n            }\n            yield this.accountCreator.createAccount(accountId, publicKey);\n            return new Account(this.connection, accountId);\n        });\n    }\n    /**\n     * @deprecated Use `new nearApi.Contract(yourAccount, contractId, { viewMethods, changeMethods })` instead.\n     * @param contractId\n     * @param options\n     */\n    loadContract(contractId, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const account = new Account(this.connection, options.sender);\n            return new Contract(account, contractId, options);\n        });\n    }\n    /**\n     * @deprecated Use `yourAccount.sendMoney` instead.\n     * @param amount\n     * @param originator\n     * @param receiver\n     */\n    sendTokens(amount, originator, receiver) {\n        return __awaiter(this, void 0, void 0, function* () {\n            console.warn('near.sendTokens is deprecated. Use `yourAccount.sendMoney` instead.');\n            const account = new Account(this.connection, originator);\n            const result = yield account.sendMoney(receiver, amount);\n            return result.transaction_outcome.id;\n        });\n    }\n}\n/**\n * Initialize connection to Near network.\n */\nexport function connect(config) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Try to find extra key in `KeyPath` if provided.\n        if (config.keyPath && config.deps && config.deps.keyStore) {\n            try {\n                const accountKeyFile = yield readKeyFile(config.keyPath);\n                if (accountKeyFile[0]) {\n                    // TODO: Only load key if network ID matches\n                    const keyPair = accountKeyFile[1];\n                    const keyPathStore = new InMemoryKeyStore();\n                    yield keyPathStore.setKey(config.networkId, accountKeyFile[0], keyPair);\n                    if (!config.masterAccount) {\n                        config.masterAccount = accountKeyFile[0];\n                    }\n                    config.deps.keyStore = new MergeKeyStore([config.deps.keyStore, keyPathStore]);\n                    console.log(`Loaded master account ${accountKeyFile[0]} key from ${config.keyPath} with public key = ${keyPair.getPublicKey()}`);\n                }\n            }\n            catch (error) {\n                console.warn(`Failed to load master account key from ${config.keyPath}: ${error}`);\n            }\n        }\n        return new Near(config);\n    });\n}\n",["330","331"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/contract.js",["332"],"import BN from 'bn.js';\nimport { getTransactionLastResult } from './providers';\nimport { PositionalArgsError, ArgumentTypeError } from './utils/errors';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\n// Makes `function.name` return given name\nfunction nameFunction(name, body) {\n    return {\n        [name](...args) {\n            return body(...args);\n        }\n    }[name];\n}\nconst isUint8Array = (x) => x && x.byteLength !== undefined && x.byteLength === x.length;\nconst isObject = (x) => Object.prototype.toString.call(x) === '[object Object]';\n/**\n * Defines a smart contract on NEAR including the mutable and non-mutable methods\n */\nexport class Contract {\n    constructor(account, contractId, options) {\n        this.account = account;\n        this.contractId = contractId;\n        const { viewMethods = [], changeMethods = [] } = options;\n        viewMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, options = {}, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args)) || !isObject(options)) {\n                        throw new PositionalArgsError();\n                    }\n                    return this.account.viewFunction(this.contractId, methodName, args, options);\n                }))\n            });\n        });\n        changeMethods.forEach((methodName) => {\n            Object.defineProperty(this, methodName, {\n                writable: false,\n                enumerable: true,\n                value: nameFunction(methodName, (args = {}, gas, amount, ...ignored) => __awaiter(this, void 0, void 0, function* () {\n                    if (ignored.length || !(isObject(args) || isUint8Array(args))) {\n                        throw new PositionalArgsError();\n                    }\n                    validateBNLike({ gas, amount });\n                    const rawResult = yield this.account.functionCall(this.contractId, methodName, args, gas, amount);\n                    return getTransactionLastResult(rawResult);\n                }))\n            });\n        });\n    }\n}\n/**\n * Validation on arguments being a big number from bn.js\n * Throws if an argument is not in BN format or otherwise invalid\n * @param argMap\n */\nfunction validateBNLike(argMap) {\n    const bnLike = 'number, decimal string or BN';\n    for (const argName of Object.keys(argMap)) {\n        const argValue = argMap[argName];\n        if (argValue && !BN.isBN(argValue) && isNaN(argValue)) {\n            throw new ArgumentTypeError(argName, bnLike, argValue);\n        }\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/account_creator.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/validators.js",["333","334"],"'use strict';\nimport BN from 'bn.js';\n/** Finds seat price given validators stakes and number of seats.\n *  Calculation follow the spec: https://nomicon.io/Economics/README.html#validator-selection\n * @params validators: current or next epoch validators.\n * @params numSeats: number of seats.\n */\nexport function findSeatPrice(validators, numSeats) {\n    const stakes = validators.map(v => new BN(v.stake, 10)).sort((a, b) => a.cmp(b));\n    const num = new BN(numSeats);\n    const stakesSum = stakes.reduce((a, b) => a.add(b));\n    if (stakesSum.lt(num)) {\n        throw new Error('Stakes are below seats');\n    }\n    // assert stakesSum >= numSeats\n    let left = new BN(1), right = stakesSum.add(new BN(1));\n    while (!left.eq(right.sub(new BN(1)))) {\n        const mid = left.add(right).div(new BN(2));\n        let found = false;\n        let currentSum = new BN(0);\n        for (let i = 0; i < stakes.length; ++i) {\n            currentSum = currentSum.add(stakes[i].div(mid));\n            if (currentSum.gte(num)) {\n                left = mid;\n                found = true;\n                break;\n            }\n        }\n        if (!found) {\n            right = mid;\n        }\n    }\n    return left;\n}\n/** Diff validators between current and next epoch.\n * Returns additions, subtractions and changes to validator set.\n * @params currentValidators: list of current validators.\n * @params nextValidators: list of next validators.\n */\nexport function diffEpochValidators(currentValidators, nextValidators) {\n    const validatorsMap = new Map();\n    currentValidators.forEach(v => validatorsMap.set(v.account_id, v));\n    const nextValidatorsSet = new Set(nextValidators.map(v => v.account_id));\n    return {\n        newValidators: nextValidators.filter(v => !validatorsMap.has(v.account_id)),\n        removedValidators: currentValidators.filter(v => !nextValidatorsSet.has(v.account_id)),\n        changedValidators: nextValidators.filter(v => (validatorsMap.has(v.account_id) && validatorsMap.get(v.account_id).stake != v.stake))\n            .map(v => ({ current: validatorsMap.get(v.account_id), next: v }))\n    };\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/key_pair.js",[],"/home/savan/Documents/Portfolio/extension/src/css/textEditor.js",[],"/home/savan/Documents/Portfolio/extension/src/components/login.js",["335"],"/* eslint-disable react/jsx-no-target-blank */\r\nimport React from \"react\";\r\nimport { Form, Input, Button, Col } from \"antd\";\r\nimport axios from \"axios\";\r\nimport * as nearAPI from \"near-api-js\";\r\nimport { Near } from \"near-api-js\";\r\n\r\nimport { keyPairGenerate } from \"../code/generateKey\";\r\n\r\nconst chrome = window.chrome;\r\naxios.defaults.headers.post[\"Access-Control-Allow-Origin\"] = \"*\";\r\n\r\nconst NearConfig = {\r\n  networkId: \"testnet\",\r\n  nodeUrl: \"https://rpc.testnet.near.org\",\r\n  contractName: \"trail.testnet\",\r\n  walletUrl: \"https://wallet.testnet.near.org\",\r\n  helperUrl: \"https://helper.testnet.near.org\",\r\n};\r\n\r\nconst { networkId, nodeUrl, walletUrl } = NearConfig;\r\n\r\nconst near = new Near({\r\n  networkId,\r\n  nodeUrl,\r\n  walletUrl,\r\n  deps: { keyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore() },\r\n});\r\nconst wallet = new nearAPI.WalletAccount(near);\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      errors: \"\",\r\n      isAuth: false,\r\n      isLoading: false,\r\n    };\r\n  }\r\n\r\n  // Antd form reference\r\n  formRef = React.createRef();\r\n\r\n  // Facebook response function\r\n  responseFacebook = (response) => {\r\n    console.log(response);\r\n  };\r\n\r\n  // On click to submit function\r\n  onClickToSubmit = (values) => {\r\n    this.setState({ isLoading: true });\r\n\r\n    axios\r\n      .post(`${process.env.REACT_APP_NEW_MS2_DOMAIN}user/login`, values, {\r\n        withCredentials: true,\r\n      })\r\n      .then((res, err) => {\r\n        if (res.status === 200) {\r\n          const { responseCode, responseMessage } = res.data.data.response;\r\n\r\n          if (responseCode === 208 || responseCode === 404) {\r\n            this.setState({ errors: responseMessage });\r\n\r\n            setTimeout(() => {\r\n              this.setState({ errors: \"\" });\r\n            }, 3000);\r\n          } else {\r\n            const { jwt, user } = res.data.data.response.data;\r\n\r\n            chrome.storage.local.set(\r\n              {\r\n                isAuth: true,\r\n                reload: true,\r\n                userData: user,\r\n                authToken: jwt,\r\n                keypair: keyPairGenerate(),\r\n                trailDeleteModal: { value: null },\r\n              },\r\n              function () {\r\n                // bkg.console.log(\"JWT, USER\", jwt, user)\r\n              }\r\n            );\r\n\r\n            this.props.clickToRedirect(\"userProfile\");\r\n\r\n            chrome.storage.local.set({ notification: true });\r\n\r\n            this.setState({ isAuth: true });\r\n          }\r\n        }\r\n\r\n        this.setState({ isLoading: false });\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"err\", err);\r\n\r\n        this.setState({ isLoading: false });\r\n      });\r\n  };\r\n\r\n  onNearLoginCilck = async () => {\r\n    const appTitle = \"Trail Web App\";\r\n    await wallet.requestSignIn(NearConfig.contractName, appTitle);\r\n  };\r\n\r\n  // Validate password with regular expression function\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    var digit = /^(.*[0-9]+.*)$/;\r\n    var upper = /^(.*[A-Z]+.*)$/;\r\n    var lower = /^(.*[a-z]+.*)$/;\r\n\r\n    if (value && !digit.test(value)) {\r\n      callback(\"Password must contain one digit\");\r\n    }\r\n\r\n    if (value && !upper.test(value)) {\r\n      callback(\"Password must contain one uppercase letter\");\r\n    }\r\n\r\n    if (value && !lower.test(value)) {\r\n      callback(\"Password must contain one lowercase letter\");\r\n    }\r\n\r\n    if (value && value.length <= 8) {\r\n      callback(\"Password must be 8 digit\");\r\n    }\r\n\r\n    if (value && this.state.confirmDirty) {\r\n      this.formRef.validateFields([\"confirm\"], { force: true });\r\n    }\r\n\r\n    callback();\r\n  };\r\n\r\n  onFinishFailed = (errorInfo) => {\r\n    console.log(\"Failed:\", errorInfo);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"trailMain\">\r\n        <div className=\"auth_tr_wrapper\">\r\n          <div className=\"trailit_userPanal trailit_Big\">\r\n            <div className=\"trailit_userPanalRightBox\">\r\n              <div className=\"trailit_userPanalHeaderBox login_header\">\r\n                <img\r\n                  width=\"62px\"\r\n                  height=\"70px\"\r\n                  alt=\"white_logo\"\r\n                  src={require(\"../images/trailit_logo-white-not-next-01.svg\")}\r\n                />\r\n                <span className=\"welcome_text\">Welcome to Trailit</span>\r\n              </div>\r\n              <div className=\"trailit_userPanalContentBox\">\r\n                {this.state.errors && (\r\n                  <p className=\"tr_error\">{this.state.errors}</p>\r\n                )}\r\n                <div className=\"pt-5\">\r\n                  <Form\r\n                    className=\"row\"\r\n                    ref={this.formRef}\r\n                    name=\"control-ref\"\r\n                    onFinish={this.onClickToSubmit}\r\n                    onFinishFailed={this.onFinishFailed}\r\n                  >\r\n                    <div className=\"signup_message\">\r\n                      Enter your details to login. If you have not registered in\r\n                      please{\" \"}\r\n                      <b>\r\n                        <a\r\n                          className=\"tr_link\"\r\n                          target=\"_blank\"\r\n                          href=\"http://169.61.16.14#signup\"\r\n                        >\r\n                          Sign Up Now\r\n                        </a>\r\n                      </b>\r\n                    </div>\r\n                    <Col md={12}>\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"trailit_near\"\r\n                        onClick={() =>\r\n                          window.open(\"http://169.61.16.14#signin\")\r\n                        }\r\n                      >\r\n                        Sign In with Near\r\n                      </button>\r\n                    </Col>\r\n                    <Col md={12} className=\"text-center\">\r\n                      <Button\r\n                        className=\"py-2 px-3 btn-sm btn-pink trailit_signin\"\r\n                        onClick={() =>\r\n                          window.open(\"http://169.61.16.14#signin\")\r\n                        }\r\n                      >\r\n                        Sign in\r\n                      </Button>\r\n                      {/* <button type=\"button\" className=\"trailit_facebook\">\r\n                        Sign In with Facebook\r\n                      </button>\r\n                      <button type=\"button\" className=\"trailit_google\">\r\n                        Sign In with Google\r\n                      </button> */}\r\n                      {/* <hr className=\"trailit_dark trail_or\" /> */}\r\n                    </Col>\r\n                    {/* <Col md={12}>\r\n                      <Form.Item\r\n                        name=\"email\"\r\n                        className=\"form-input\"\r\n                        rules={[\r\n                          {\r\n                            type: \"email\",\r\n                            message: \"Please enter valid email!\",\r\n                          },\r\n                          {\r\n                            required: true,\r\n                            message: \"Please enter email!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input placeholder=\"Email\" className=\"tr_input\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={12}>\r\n                      <Form.Item\r\n                        name=\"password\"\r\n                        className=\"form-input\"\r\n                        rules={[\r\n                          {\r\n                            // min: 3,\r\n                            required: true,\r\n                            message: \"Please enter password!\",\r\n                          },\r\n                        ]}\r\n                      >\r\n                        <Input\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          className=\"tr_input\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col md={12} className=\"text-center mb-3 mb-1\">\r\n                      <Button\r\n                        disabled={this.state.isLoading}\r\n                        htmlType=\"submit\"\r\n                        className=\"py-2 px-3 btn-sm btn-pink\"\r\n                      >\r\n                        Sign in\r\n                      </Button>\r\n                    </Col> */}\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/web.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/serialize.js",["336","337","338","339"],"import bs58 from 'bs58';\nimport BN from 'bn.js';\n// TODO: Make sure this polyfill not included when not required\nimport * as encoding from 'text-encoding-utf-8';\n\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\n\nexport function base_encode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58.encode(Buffer.from(value));\n}\n\nexport function base_decode(value) {\n    return Buffer.from(bs58.decode(value));\n}\n\nconst INITIAL_LENGTH = 1024;\n\nexport class BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\n\n/// Binary encoder.\nexport class BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybe_resize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    write_u8(value) {\n        this.maybe_resize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    write_u32(value) {\n        this.maybe_resize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    write_u64(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 8)));\n    }\n    write_u128(value) {\n        this.maybe_resize();\n        this.write_buffer(Buffer.from(new BN(value).toArray('le', 16)));\n    }\n    write_buffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    write_string(str) {\n        this.maybe_resize();\n        const b = Buffer.from(str, 'utf8');\n        this.write_u32(b.length);\n        this.write_buffer(b);\n    }\n    write_fixed_array(array) {\n        this.write_buffer(Buffer.from(array));\n    }\n    write_array(array, fn) {\n        this.maybe_resize();\n        this.write_u32(array.length);\n        for (const elem of array) {\n            this.maybe_resize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\n\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\n\nexport class BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    read_u8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    read_u32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    read_u64() {\n        const buf = this.read_buffer(8);\n        return new BN(buf, 'le');\n    }\n    read_u128() {\n        const buf = this.read_buffer(16);\n        return new BN(buf, 'le');\n    }\n    read_buffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    read_string() {\n        const len = this.read_u32();\n        const buf = this.read_buffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    read_fixed_array(len) {\n        return new Uint8Array(this.read_buffer(len));\n    }\n    read_array(fn) {\n        const len = this.read_u32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_u128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_string\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_fixed_array\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"read_array\", null);\n\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write_${fieldType}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.write_fixed_array(value);\n            }\n            else {\n                writer.write_array(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null) {\n                        writer.write_u8(0);\n                    }\n                    else {\n                        writer.write_u8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction serializeStruct(schema, obj, writer) {\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.write_u8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nexport function serialize(schema, obj) {\n    const writer = new BinaryWriter();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\n\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read_${fieldType}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.read_fixed_array(fieldType[0]);\n            }\n            return reader.read_array(() => deserializeField(schema, fieldName, fieldType[0], reader));\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\n\nfunction deserializeStruct(schema, classType, reader) {\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.read_u8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n\n/// Deserializes object from bytes using schema.\nexport function deserialize(schema, classType, buffer) {\n    const reader = new BinaryReader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/provider.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/network.js",[],"/home/savan/Documents/Portfolio/extension/src/common/celo/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/merge_key_store.js",[],"/home/savan/Documents/Portfolio/extension/src/components/User/userProfileEdit.js",["340"],"/home/savan/Documents/Portfolio/extension/src/components/User/userProfileList.js",["341","342","343","344","345","346","347"],"import React, { Component } from \"react\";\r\nimport $ from \"jquery\";\r\nimport _ from \"lodash\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faList, faThLarge } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { getUserOneTrail } from \"../../common/axios\";\r\nimport BgImage from \"../../images/trailit_bx_img.png\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\nclass UserProfileList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n      isLoading: this.props.isLoading,\r\n      list: this.props.list,\r\n      isLoadingLink: false,\r\n      isCopiedLink: false,\r\n      isCopiedError: false,\r\n      viewType: \"grid\",\r\n    };\r\n  }\r\n\r\n  styleBgImg = {\r\n    background: `linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(${BgImage}) center center / cover no-repeat scroll`,\r\n  };\r\n\r\n  async componentWillReceiveProps(nextProps, prevState) {\r\n    const { addRaw, getOneEditRow } = nextProps;\r\n\r\n    let list = await nextProps.list;\r\n    if (!_.isEmpty(addRaw) && this.props.title === \"My Trails\") {\r\n      let findRow = await list.find((r) => r.trail_id == addRaw.trail_id);\r\n      if (findRow == undefined) {\r\n        list.push(addRaw);\r\n      }\r\n    }\r\n\r\n    if (!_.isEmpty(getOneEditRow)) {\r\n      let findInd = await list.findIndex(\r\n        (r) => r.trail_id == getOneEditRow.trail_id\r\n      );\r\n      if (findInd != -1) {\r\n        list[findInd] = getOneEditRow;\r\n      }\r\n    }\r\n\r\n    this.setState({ isLoading: nextProps.isLoading, list: list });\r\n  }\r\n\r\n  onClickToEdit = (e, res) => {\r\n    e.stopPropagation();\r\n    $(\"body\").attr(\"class\", \"trailit_EditTrailShow\");\r\n    this.props.getRow(res);\r\n    this.props.onEdit(true);\r\n    this.setState({ showMenu: false });\r\n  };\r\n\r\n  handleClickMenu = (e) => {\r\n    e.stopPropagation();\r\n    this.setState({ showMenu: !this.state.showMenu });\r\n  };\r\n\r\n  onMouseLeave = (e) => {\r\n    if (this.state.showMenu) {\r\n      // Set show menu state\r\n      this.setState({ showMenu: false });\r\n    }\r\n  };\r\n\r\n  onPublishLink = async (e, res) => {\r\n    e.stopPropagation();\r\n    // this.setState({ isLoadingLink: true });\r\n    const { userId } = this.props;\r\n    let screen = resizeScreen() ? \"mobile\" : \"web\";\r\n    let result = await getUserOneTrail(res.trail_id, screen);\r\n\r\n    if (result.status == 200) {\r\n      if (result.data.response.statusCode == 200) {\r\n        let trailList = result.data.response.result;\r\n        if (\r\n          result.data.response &&\r\n          result.data.response.result &&\r\n          result.data.response.result.length > 0\r\n        ) {\r\n          const trailId = res.trail_id;\r\n          const URL = trailList[0].url;\r\n          let qryString = URL.split(\"?\").length > 1 ? \"&\" : \"?\";\r\n          const trailUrl = `${process.env.REACT_APP_GO_TRAILIT_URL}/live/${URL}${qryString}trailUserId=${userId}&trailId=${trailId}&trailPreview=true&tourStep=1&singleStepPreview=undefined&trailDataId=undefined&previewUserId=undefined&redirectUrl=undefined`;\r\n\r\n          function copyStringToClipboard(str) {\r\n            // Create new element\r\n            var el = document.createElement(\"textarea\");\r\n\r\n            // Set value (string to be copied)\r\n            el.value = str;\r\n\r\n            // Set non-editable to avoid focus and move outside of view\r\n            el.setAttribute(\"readonly\", \"\");\r\n            el.style = {\r\n              position: \"absolute\",\r\n              left: \"-9999px\",\r\n            };\r\n            document.body.appendChild(el);\r\n\r\n            // Select text inside element\r\n            el.select();\r\n\r\n            // Copy text to clipboard\r\n            document.execCommand(\"copy\");\r\n\r\n            // Remove temporary element\r\n            document.body.removeChild(el);\r\n          }\r\n\r\n          copyStringToClipboard(trailUrl);\r\n\r\n          alert(\"Successfully copied\");\r\n        } else {\r\n          this.setState({ isCopiedError: true });\r\n\r\n          setTimeout(() => {\r\n            this.setState({ isCopiedError: false });\r\n          }, 2000);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  onBoxClick = (e, res) => {\r\n    e.preventDefault();\r\n    // ...query for the active tab...\r\n    chrome.runtime.sendMessage(\"\", {\r\n      type: \"DOMInfo\",\r\n      status: true,\r\n    });\r\n\r\n    this.setState((prevState) => {\r\n      return {\r\n        reload: !prevState.reload,\r\n      };\r\n    });\r\n\r\n    let followedTrailUserData = null;\r\n\r\n    if (res.userData) {\r\n      followedTrailUserData = { ...res.userData };\r\n    }\r\n\r\n    chrome.storage.local.set({\r\n      trail_id: res.trail_id,\r\n      trail_name: res.trail_name,\r\n      trail_web_user_tour: undefined,\r\n      followedTrailUserData,\r\n      trail_status: res.trail_user_status,\r\n    });\r\n    chrome.storage.local.get(\r\n      [\"authToken\", \"userData\", \"reload\", \"openButton\"],\r\n      function (items) {\r\n        if (items.openButton === undefined) {\r\n          chrome.storage.local.set({ openButton: \"ManageTrail\" });\r\n        }\r\n      }.bind(this)\r\n    );\r\n\r\n    window.close();\r\n  };\r\n\r\n  deleteButtonHandler = (e, trail) => {\r\n    e.stopPropagation();\r\n\r\n    chrome.storage.local.set({\r\n      trailDeleteModal: {\r\n        value: \"open\",\r\n        title: trail.trail_name,\r\n        id: trail.trail_id,\r\n      },\r\n    });\r\n  };\r\n\r\n  onListButtonHandler = () => {\r\n    // Set state\r\n    this.setState({ viewType: \"list\" });\r\n  };\r\n\r\n  onGridButtonHandler = () => {\r\n    // Set state\r\n    this.setState({ viewType: \"grid\" });\r\n  };\r\n\r\n  render() {\r\n    const { isLoading, list, viewType } = this.state;\r\n    const {\r\n      profileImage,\r\n      errorMsg,\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n    } = this.props;\r\n\r\n    // let userImage = \"\";\r\n    // this.props.title === \"Following\" ? res.userData && res.userData.profileImage !== \"\" ? res.userData.profileImage : require(\"../../images/user.png\")\r\n    // : profileImage == \"\" ? require(\"../../images/user.png\") : profileImage\r\n    // if (\r\n    //   this.props.title === \"Following\"\r\n    // ) {\r\n    //   if (res.userData && res.userData.profileImage !== \"\") {\r\n\r\n    //   } else {\r\n\r\n    //   }\r\n    //   userImage = items.authorData.profileImage;\r\n    // } else if (\r\n    //   items.followedTrailUserData &&\r\n    //   items.followedTrailUserData.profileImage\r\n    // ) {\r\n    //   userImage = items.followedTrailUserData.profileImage;\r\n    // } else if (items.userData && items.userData.profileImage) {\r\n    //   userImage = items.userData.profileImage;\r\n    // }\r\n\r\n    return (\r\n      <div className=\"trailit_userPanalContentInnerBox\">\r\n        <div className=\"activeTab-list-grid-view\">\r\n          <div className=\"trailit_18600 trailit_mb3\">{this.props.title}</div>\r\n          <div className=\"list-grid-buttons\">\r\n            <button\r\n              onClick={this.onListButtonHandler}\r\n              className={`list-button ${viewType === \"list\" ? \"active\" : \"\"}`}\r\n            >\r\n              <FontAwesomeIcon icon={faList} size=\"sm\" />\r\n            </button>\r\n            <button\r\n              onClick={this.onGridButtonHandler}\r\n              className={`grid-button ${viewType === \"grid\" ? \"active\" : \"\"}`}\r\n            >\r\n              <FontAwesomeIcon icon={faThLarge} size=\"sm\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"trailit_scrollBoxs\">\r\n          <div className=\"trailit_Row\">\r\n            {list &&\r\n              list.length === 0 &&\r\n              !isLoading &&\r\n              errorMsg.length === 0 && (\r\n                <div className=\"trailit_noData\">Data Not Available</div>\r\n              )}\r\n            {errorMsg.length > 0 && !isLoading && (\r\n              <div className=\"trailit_errorData\">{errorMsg}</div>\r\n            )}\r\n            {!isLoading &&\r\n              list &&\r\n              list.length > 0 &&\r\n              errorMsg.length === 0 &&\r\n              list.map((res) => {\r\n                let styles = \"\";\r\n                let stlStatus = false;\r\n\r\n                if (\r\n                  res.cover_image_url !== \"\" &&\r\n                  res.cover_image_url !== null &&\r\n                  res.cover_image_url !== \"undefined\"\r\n                ) {\r\n                  stlStatus = true;\r\n\r\n                  let fileUrl = res.cover_image_url;\r\n\r\n                  if (fileUrl.includes(\"(\") && fileUrl.includes(\")\")) {\r\n                    fileUrl = `'${fileUrl}'`;\r\n                  }\r\n\r\n                  styles = {\r\n                    background: `linear-gradient(0deg, rgba(0, 0, 0, 0.25), rgba(0, 0, 0, 0.25)), url(${fileUrl}) center center / cover no-repeat scroll`,\r\n                  };\r\n                }\r\n\r\n                let user_name = \"-\";\r\n                let user_image = require(\"../../images/user.png\");\r\n\r\n                if (this.props.title === \"Following\") {\r\n                  if (\r\n                    res.userData &&\r\n                    res.userData.firstName &&\r\n                    res.userData.lastName\r\n                  ) {\r\n                    user_name = `${res.userData.firstName} ${res.userData.lastName}`;\r\n                  } else if (res.userData && res.userData.userName) {\r\n                    user_name = res.userData.userName;\r\n                  }\r\n\r\n                  if (\r\n                    res.userData &&\r\n                    res.userData.profileImage &&\r\n                    res.userData.profileImage !== \"\"\r\n                  ) {\r\n                    user_image = res.userData.profileImage;\r\n                  }\r\n                } else {\r\n                  if (firstName && lastName) {\r\n                    user_name = `${firstName} ${lastName}`;\r\n                  } else if (userName) {\r\n                    user_name = userName;\r\n                  }\r\n\r\n                  if (profileImage !== \"\") {\r\n                    user_image = profileImage;\r\n                  }\r\n                }\r\n\r\n                return (\r\n                  <div\r\n                    className={`trailit_col6 ${\r\n                      viewType === \"list\" ? \"width100\" : \"\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      className=\"trailit_bx\"\r\n                      onClick={(e) => this.onBoxClick(e, res)}\r\n                      onMouseLeave={this.onMouseLeave}\r\n                    >\r\n                      <div className=\"img\">\r\n                        <span\r\n                          className=\"img_bg\"\r\n                          style={stlStatus ? styles : this.styleBgImg}\r\n                        >\r\n                          <div className=\"trailit_img_content\">\r\n                            <div className=\"trailit_top\">\r\n                              {this.props.title !== \"Following\" && (\r\n                                <div className=\"trailit_dotsMenu\">\r\n                                  <button\r\n                                    type=\"button\"\r\n                                    onClick={this.handleClickMenu}\r\n                                    className=\"trailit_dotsButton\"\r\n                                  >\r\n                                    <img\r\n                                      width=\"16px\"\r\n                                      src={require(\"../../images/dots.svg\")}\r\n                                      alt=\"dots\"\r\n                                    />\r\n                                  </button>\r\n                                  {this.state.showMenu && (\r\n                                    <div className=\"trailit_dotsMenuList\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.onPublishLink(e, res)\r\n                                        }\r\n                                      >\r\n                                        Share\r\n                                      </button>\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.onClickToEdit(e, res)\r\n                                        }\r\n                                      >\r\n                                        Edit\r\n                                      </button>\r\n                                      {/* <button type=\"button\">Publish</button> */}\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        onClick={(e) =>\r\n                                          this.deleteButtonHandler(e, res)\r\n                                        }\r\n                                      >\r\n                                        Delete\r\n                                      </button>\r\n                                    </div>\r\n                                  )}\r\n                                </div>\r\n                              )}\r\n                            </div>\r\n                            <div className=\"trailit_bottom\">\r\n                              <div className=\"trailit_bottom_content d-flex justify-content-between\">\r\n                                <div className=\"trailit_10_500_roboto trailit_text_white align-items-center d-flex\">\r\n                                  <img\r\n                                    alt=\"user_image\"\r\n                                    className=\"trialit_user\"\r\n                                    src={user_image}\r\n                                  />\r\n                                  <span className=\"trailit_ml2 trailit_ellipsis_40\">\r\n                                    {user_name}\r\n                                  </span>\r\n                                </div>\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"trailit_bx_title\">\r\n                        <div className=\"trailit_10_500 trailit_ellips_2line\">\r\n                          {res.trail_name}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserProfileList;\r\n","/home/savan/Documents/Portfolio/extension/src/components/User/validation.js",[],"/home/savan/Documents/Portfolio/extension/src/reportWebVitals.js",[],"/home/savan/Documents/Portfolio/extension/src/common/initButtonPosition.js",[],"/home/savan/Documents/Portfolio/extension/src/common/trailitLogoInPreview.js",[],"/home/savan/Documents/Portfolio/extension/src/common/axios.js",["348"],"/home/savan/Documents/Portfolio/extension/src/components/webUserTour.js",["349","350","351","352","353","354","355","356","357","358","359","360"],"import React from \"react\";\r\nimport { Button } from \"antd\";\r\nimport { CloseOutlined, LeftOutlined, RightOutlined } from \"@ant-design/icons\";\r\nimport { Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport $ from \"jquery\";\r\n\r\nimport AudioTour from \"./audioTour\";\r\nimport { resizeScreen } from \"../common/helper\";\r\nimport { stopMediaPlaying } from \"../common/stopePlayingMedia\";\r\nimport {\r\n  addOverlay,\r\n  setOverlayHtml,\r\n  removeOverlay,\r\n} from \"../common/trailOverlay\";\r\nimport {\r\n  addTrailitLogo,\r\n  removeTrailitLogo,\r\n} from \"../common/trailitLogoInPreview\";\r\nimport ContinueTourConfirmation from \"./Modal/ContinueTourConfirmation\";\r\nimport { matchUrl } from \"./common\";\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass WebUserTour extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      isTourActive: true,\r\n      tourStep: 1,\r\n      tourSteps: {},\r\n      tourContent: [],\r\n      uniqueTargetStatus: false,\r\n      curentTour: {},\r\n    };\r\n  }\r\n\r\n  handleWithoutLogin = (event, tourSide, type, currentStep) => {\r\n    this.props.toogleTargetDataNotFound(false);\r\n\r\n    chrome.storage.local.get([\"isGuest\"], (items) => {\r\n      if (currentStep % 3 === 0 && tourSide === \"next\" && items.isGuest) {\r\n        this.props.tooltipToggle();\r\n      } else {\r\n        this.onClickToManagePopoverButton(event, tourSide);\r\n      }\r\n    });\r\n  };\r\n\r\n  continueTrailWithoutLogin = (event, tourSide) => {\r\n    this.onClickToManagePopoverButton(event, tourSide);\r\n    this.props.tooltipToggle();\r\n  };\r\n  toSignInWithoutLogin = () => {\r\n    this.props.toggle();\r\n  };\r\n\r\n  componentDidMount() {\r\n    $(() => {\r\n      this.handleLoad();\r\n    });\r\n  }\r\n\r\n  resizeFunction = () => {\r\n    let { tourStep } = this.state;\r\n    const shadowRoot = document.getElementById(\"extension-div\").shadowRoot;\r\n\r\n    if (!shadowRoot.querySelector(\".trail_tooltip_done\")) return;\r\n\r\n    this.getWebUserTour(\"\", this.props.data[tourStep - 1], tourStep);\r\n  };\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.tourStep !== this.props.tourStep) {\r\n      this.createPopOver(this.props.tourStep);\r\n      chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n      this.getWebUserTour(\r\n        \"\",\r\n        this.props.data[this.props.tourStep - 1],\r\n        this.props.tourStep\r\n      );\r\n    }\r\n\r\n    // Call add logo function\r\n    this.addLogo();\r\n  }\r\n\r\n  handleLoad = (e) => {\r\n    let { tourStep } = this.state;\r\n    let timeout = 0;\r\n\r\n    if (document.URL.includes(\"https://common.fund\")) {\r\n      timeout = 2000;\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.createPopOver(tourStep);\r\n      chrome.runtime.onMessage.addListener(this.handleMessage.bind(this));\r\n      this.getWebUserTour(\"\", this.props.data[tourStep - 1], tourStep);\r\n\r\n      if (\r\n        this.props.data[tourStep - 1].mediaType &&\r\n        (this.props.data[tourStep - 1].mediaType === \"video\" ||\r\n          this.props.data[tourStep - 1].mediaType === \"audio\")\r\n      ) {\r\n        if (document.readyState === \"complete\") {\r\n          $(document).ready(() => {\r\n            // Stop playing websites audio or video\r\n            stopMediaPlaying();\r\n          });\r\n        } else if (\r\n          document.readyState === \"interactive\" &&\r\n          document.URL.includes(\"https://www.youtube.com/\")\r\n        ) {\r\n          $(document).ready(() => {\r\n            // Stop playing websites audio or video\r\n            stopMediaPlaying();\r\n          });\r\n        } else {\r\n          document.body.onload = function () {\r\n            // Stop playing websites audio or video\r\n            stopMediaPlaying();\r\n          };\r\n        }\r\n\r\n        // Add logo\r\n        this.addLogo();\r\n\r\n        setTimeout(() => {\r\n          document.querySelectorAll(\"video\").forEach((res) => {\r\n            if (res.className !== \"preview-video\") {\r\n              res.pause();\r\n            }\r\n          });\r\n        }, 2000);\r\n      }\r\n\r\n      // Add event listener\r\n      window.addEventListener(\"resize\", this.resizeFunction);\r\n    }, timeout);\r\n  };\r\n\r\n  addLogo = () => {\r\n    // Add trailit logo\r\n    addTrailitLogo();\r\n  };\r\n\r\n  handleMessage(msg) {\r\n    setTimeout(() => {\r\n      chrome.storage.local.get(\r\n        [\r\n          \"trail_web_user_tour\",\r\n          \"tourStatus\",\r\n          \"tourType\",\r\n          \"tourStep\",\r\n          \"currentTourType\",\r\n        ],\r\n        function (items) {\r\n          this.createPopOver(items.tourStep);\r\n          this.getWebUserTour(\r\n            \"\",\r\n            this.props.data[items.tourStep - 1],\r\n            items.tourStep\r\n          );\r\n        }\r\n      );\r\n    }, 3000);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove listener when this component unmounts\r\n    chrome.runtime.onMessage.removeListener(this.handleMessage);\r\n\r\n    // Remove event listener\r\n    window.removeEventListener(\"resize\", this.resizeFunction);\r\n\r\n    // Remove trailit logo\r\n    removeTrailitLogo();\r\n\r\n    this.setState({ isTourActive: false });\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    return {\r\n      tourStep: props.tourStep,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * create popover based on their url\r\n   */\r\n  createPopOver = (step) => {\r\n    const { tourSteps } = this.state;\r\n\r\n    let content = this.props.data\r\n      .map((res, index) => {\r\n        let unqTarget = res.uniqueTarget;\r\n\r\n        if (resizeScreen()) {\r\n          if (res.unique_target_one != \"\") {\r\n            unqTarget = res.unique_target_one;\r\n          }\r\n        }\r\n\r\n        if (\r\n          res.url == this.props.data[step - 1].url &&\r\n          res.type == \"tooltip\" &&\r\n          document.querySelector(unqTarget) != null\r\n        ) {\r\n          tourSteps[`step${index + 1}`] = false;\r\n          res[\"step\"] = index + 1;\r\n          return res;\r\n        }\r\n      })\r\n      .filter((r) => r != undefined);\r\n\r\n    this.setState({ tourContent: content, tourSteps });\r\n  };\r\n\r\n  /**\r\n   * get currentweb user tour\r\n   */\r\n  getWebUserTour = (event, data, step) => {\r\n    let { tourSteps } = this.state;\r\n    let activeWeb = data;\r\n    let unqTarget = this.props.data[step - 1].uniqueTarget;\r\n\r\n    if (resizeScreen()) {\r\n      if (this.props.data[step - 1].unique_target_one != \"\") {\r\n        unqTarget = this.props.data[step - 1].unique_target_one;\r\n      }\r\n    }\r\n\r\n    if (document.querySelector(unqTarget) == null) {\r\n      this.props.toogleTargetDataNotFound(true);\r\n    } else {\r\n      // Call Add overlay function\r\n      addOverlay();\r\n\r\n      let targetElement = \"html, body\";\r\n      var docHeight = document.documentElement.scrollHeight;\r\n      let original = document.querySelector(unqTarget);\r\n      let bounding = original.getBoundingClientRect();\r\n      let offset = $(unqTarget).offset();\r\n\r\n      let leftPosition = offset.left;\r\n      let topPosition = offset.top;\r\n\r\n      setTimeout(() => {\r\n        if ($(unqTarget).offset() !== undefined) {\r\n          if (topPosition !== $(unqTarget).offset().top) {\r\n            // Call remove overlay function\r\n            removeOverlay();\r\n\r\n            // shadowRoot.querySelector('.trail_overlay').remove();\r\n            this.createPopOver(step);\r\n            this.getWebUserTour(event, data, step);\r\n          }\r\n        }\r\n      }, 1000);\r\n\r\n      // Call set overlay html function\r\n      setOverlayHtml(\r\n        window,\r\n        docHeight,\r\n        topPosition,\r\n        bounding,\r\n        leftPosition,\r\n        \"webUserTour\"\r\n      );\r\n\r\n      if (event != \"\") {\r\n        event.preventDefault();\r\n      }\r\n\r\n      const y =\r\n        document.querySelector(unqTarget).getBoundingClientRect().top +\r\n        document.querySelector(targetElement).scrollTop +\r\n        bounding.height -\r\n        300;\r\n      $(targetElement).stop().animate(\r\n        {\r\n          scrollTop: y,\r\n        },\r\n        1000\r\n      );\r\n\r\n      window.addEventListener(\"load\", () => {\r\n        setTimeout(() => {\r\n          $(targetElement).stop().animate(\r\n            {\r\n              scrollTop: y,\r\n            },\r\n            1000\r\n          );\r\n        }, 2000);\r\n      });\r\n\r\n      activeWeb = {\r\n        ...activeWeb,\r\n        uniqueTarget: unqTarget,\r\n      };\r\n\r\n      tourSteps[`step${step}`] = true;\r\n      this.setState({\r\n        curentTour: activeWeb,\r\n        uniqueTargetStatus: true,\r\n        tourStep: step,\r\n        tourSteps,\r\n      });\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Manage popover web user tour button\r\n   * @data tooltip data\r\n   * @step tooltip current step\r\n   */\r\n  onClickToManagePopoverButton = async (event, tourSide) => {\r\n    this.props.toogleTargetDataNotFound(false);\r\n\r\n    let step =\r\n      tourSide === \"prev\" ? this.props.tourStep - 1 : this.props.tourStep + 1;\r\n\r\n    removeOverlay();\r\n\r\n    // document.getElementById('extension-div').shadowRoot.querySelector('.trail_overlay').remove();\r\n    $(\".trail_web_user_tour\").parents().css(\"z-index\", \"\");\r\n    $(\".trail_web_user_tour\").removeAttr(\"trail_web_user_tour\");\r\n\r\n    let { tourStep } = this.state;\r\n    let unqTarget = this.props.data[tourStep - 1].uniqueTarget;\r\n\r\n    if (resizeScreen()) {\r\n      if (this.props.data[tourStep - 1].unique_target_one != \"\") {\r\n        unqTarget = this.props.data[tourStep - 1].unique_target_one;\r\n      }\r\n    }\r\n\r\n    document.querySelector(unqTarget).classList.remove(\"trail_web_user_tour\");\r\n    if (matchUrl(this.props.data[step - 1].url, document.URL)) {\r\n      let type = this.props.data[step - 1].type;\r\n\r\n      if (type === \"tooltip\") {\r\n        this.props.tour(step, type, tourSide);\r\n      } else {\r\n        this.setState({ tourStep: step - 1 });\r\n        this.props.tour(step, type, tourSide);\r\n      }\r\n    } else {\r\n      // Set loading true to show overlay\r\n      this.props.setLoadingState(true);\r\n      let type = this.props.data[step - 1].type;\r\n      await this.props.tour(step, type, tourSide);\r\n      window.location.href = this.props.data[step - 1].url;\r\n      setTimeout(() => {\r\n        this.createPopOver(step);\r\n        this.getWebUserTour(event, this.props.data[step - 1], step);\r\n      }, 2000);\r\n    }\r\n\r\n    // Call remove overlay function\r\n  };\r\n\r\n  onClickToDoneTour = (data, step) => {\r\n    this.props.toogleTargetDataNotFound(false);\r\n    let { tourSteps } = this.state;\r\n\r\n    Object.keys(tourSteps).map((r, i) => {\r\n      tourSteps[r] = false;\r\n    });\r\n\r\n    this.setState({ tourSteps, tourStep: 1 });\r\n\r\n    this.props.toggle({ removePreviewTrails: true });\r\n  };\r\n\r\n  onLoadedEvent = (e) => {\r\n    let { uniqueTarget } = this.props.data[this.state.tourStep - 1];\r\n    let targetElement = \"html, body\";\r\n    let bounding = document.querySelector(uniqueTarget).getBoundingClientRect();\r\n    const y =\r\n      document.querySelector(uniqueTarget).getBoundingClientRect().top +\r\n      document.querySelector(targetElement).scrollTop +\r\n      bounding.height -\r\n      300;\r\n    $(targetElement).stop().animate(\r\n      {\r\n        scrollTop: y,\r\n      },\r\n      1000\r\n    );\r\n  };\r\n\r\n  onButtonCloseHandler = async (e) => {\r\n    this.props.toogleTargetDataNotFound(false);\r\n    let res = await this.props.closeButtonHandler(e);\r\n\r\n    return res;\r\n  };\r\n\r\n  render() {\r\n    const { tourSteps, tourStep, tourContent, uniqueTargetStatus } = this.state;\r\n    let preview = null;\r\n    let mediaTypeStatus;\r\n\r\n    if (\r\n      resizeScreen() &&\r\n      this.props.data[tourStep - 1].unique_target_one != \"\"\r\n    ) {\r\n      mediaTypeStatus = this.props.data[tourStep - 1].mobile_media_type;\r\n    } else {\r\n      mediaTypeStatus = this.props.data[tourStep - 1].mediaType;\r\n    }\r\n\r\n    if (mediaTypeStatus && mediaTypeStatus === \"video\") {\r\n      preview = (\r\n        <div className=\"tr_preview_video_bx\">\r\n          <video\r\n            className=\"preview-video\"\r\n            disablePictureInPicture\r\n            controlsList=\"nodownload\"\r\n            controls\r\n            onLoadedData={(e) => this.onLoadedEvent(e)}\r\n            allow=\"autoplay\"\r\n            autoPlay={true}\r\n          >\r\n            <source src={this.props.data[tourStep - 1].web_url} />\r\n          </video>\r\n        </div>\r\n      );\r\n    } else if (mediaTypeStatus && mediaTypeStatus === \"audio\") {\r\n      preview = (\r\n        <AudioTour\r\n          data={this.props.data}\r\n          toggle={this.props.toggle}\r\n          tourStep={this.props.tourStep}\r\n          tour={this.props.tour}\r\n          previewInTooltip\r\n        />\r\n      );\r\n    } else if (mediaTypeStatus && mediaTypeStatus === \"image\") {\r\n      preview = (\r\n        <div className=\"tr_preview_picture_bx\">\r\n          <img\r\n            className=\"preview-picture\"\r\n            src={this.props.data[tourStep - 1].web_url}\r\n            alt=\"preview-img\"\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {this.props.tooltipRef && (\r\n          <ContinueTourConfirmation\r\n            open={this.props.tooltipRef}\r\n            toggle={this.props.tooltipToggle}\r\n            continueTrail={this.continueTrailWithoutLogin}\r\n            toSignIn={this.toSignInWithoutLogin}\r\n          />\r\n        )}\r\n        {uniqueTargetStatus &&\r\n          matchUrl(this.props.data[tourStep - 1].url, document.URL) && (\r\n            <React.Fragment>\r\n              {tourContent.map((res, index) => {\r\n                let unTarget = resizeScreen()\r\n                  ? res.unique_target_one != \"\"\r\n                    ? res.unique_target_one\r\n                    : res.uniqueTarget\r\n                  : res.uniqueTarget;\r\n                let title, description;\r\n\r\n                if (resizeScreen() && res.unique_target_one != \"\") {\r\n                  title = res.mobile_title;\r\n                  description = res.mobile_description;\r\n                } else {\r\n                  title = res.title;\r\n                  description = res.description;\r\n                }\r\n\r\n                return (\r\n                  <Popover\r\n                    target={unTarget}\r\n                    container={\r\n                      document.getElementById(\"extension-div\").shadowRoot\r\n                    }\r\n                    className={`trail_tooltip_done ${\r\n                      mediaTypeStatus && mediaTypeStatus === \"text\"\r\n                        ? \"trail_text_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"video\")\r\n                        ? \"tr_video_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"image\")\r\n                        ? \"tr_picture_only\"\r\n                        : \"\" || (mediaTypeStatus && mediaTypeStatus === \"audio\")\r\n                        ? \"tr_audio_only\"\r\n                        : \"\"\r\n                    } ${resizeScreen() && \"mobile_preview_popover\"}`}\r\n                    placement=\"top\"\r\n                    isOpen={tourSteps[`step${res.step}`]}\r\n                  >\r\n                    {/* <button> */}\r\n                    <img\r\n                      alt=\"..\"\r\n                      className=\"trailit_IconRightBottom\"\r\n                      src={require(`../images/trailit_icon1.png`)}\r\n                      onClick={(e) => {\r\n                        // Call send tip open modal function\r\n                        this.props.onSendTipModalOpen();\r\n                      }}\r\n                    />\r\n                    {/* </button> */}\r\n                    <div className=\"trail_preview_bx\">\r\n                      <PopoverHeader\r\n                        className={`top ${\r\n                          resizeScreen() && \"tooltip_title_mobile\"\r\n                        }`}\r\n                      >\r\n                        {title}\r\n                      </PopoverHeader>\r\n                      <PopoverBody>\r\n                        {\r\n                          <span\r\n                            dangerouslySetInnerHTML={{ __html: description }}\r\n                          ></span>\r\n                        }\r\n                        {preview}\r\n                      </PopoverBody>\r\n                      <PopoverHeader\r\n                        className={`bottom ${\r\n                          resizeScreen() && \"tooltip_title_mobile\"\r\n                        }`}\r\n                      >\r\n                        {res.title}\r\n                      </PopoverHeader>\r\n                    </div>\r\n                    <div className=\"btn-wrap\">\r\n                      {this.props.data.length > 0 && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"trial_button_close\"\r\n                          onClick={this.onButtonCloseHandler}\r\n                        >\r\n                          <CloseOutlined type=\"close\" />\r\n                        </Button>\r\n                      )}\r\n                      {1 < tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"prev\"\r\n                          onClick={(e) =>\r\n                            this.onClickToManagePopoverButton(e, \"prev\")\r\n                          }\r\n                        >\r\n                          <LeftOutlined type=\"left\" />\r\n                        </Button>\r\n                      )}\r\n                      {this.props.data.length > tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"next\"\r\n                          onClick={(e) => {\r\n                            this.handleWithoutLogin(\r\n                              e,\r\n                              \"next\",\r\n                              this.props.data[this.props.tourStep - 1].type,\r\n                              this.props.tourStep\r\n                            );\r\n                          }}\r\n                        >\r\n                          <RightOutlined type=\"right\" />\r\n                        </Button>\r\n                      )}\r\n                      {this.props.data.length === tourStep && (\r\n                        <Button\r\n                          disabled={this.props.onDone}\r\n                          type=\"link\"\r\n                          className=\"next\"\r\n                          onClick={() => this.onClickToDoneTour(res, tourStep)}\r\n                        >\r\n                          <RightOutlined type=\"right\" />\r\n                        </Button>\r\n                      )}\r\n                    </div>\r\n                  </Popover>\r\n                );\r\n              })}\r\n            </React.Fragment>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WebUserTour;\r\n","/home/savan/Documents/Portfolio/extension/src/components/Modal/targetNotFound.js",[],"/home/savan/Documents/Portfolio/extension/src/components/Modal/CreateTourConfirmationModal.js",[],"/home/savan/Documents/Portfolio/extension/src/common/stopePlayingMedia.js",[],"/home/savan/Documents/Portfolio/extension/src/css/audioTour.js",[],"/home/savan/Documents/Portfolio/extension/src/components/settingsComponents.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/wallet-account.js",["361","362"],"import { Account } from './account';\nimport { SCHEMA, createTransaction } from './transaction';\nimport { KeyPair, serialize, PublicKey } from './utils';\nimport { base_decode } from './utils/serialize';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOGIN_WALLET_URL_SUFFIX = '/login/';\nconst MULTISIG_HAS_METHOD = 'add_request_and_confirm';\nconst LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nconst PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\nexport class WalletConnection {\n    constructor(near, appKeyPrefix) {\n        this._near = near;\n        const authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n        const authData = JSON.parse(window.localStorage.getItem(authDataKey));\n        this._networkId = near.config.networkId;\n        this._walletBaseUrl = near.config.walletUrl;\n        appKeyPrefix = appKeyPrefix || near.config.contractName || 'default';\n        this._keyStore = near.connection.signer.keyStore;\n        this._authData = authData || { allKeys: [] };\n        this._authDataKey = authDataKey;\n        if (!this.isSignedIn()) {\n            this._completeSignInWithAccessKey();\n        }\n    }\n    /**\n     * Returns true, if this WalletAccount is authorized with the wallet.\n     * @example\n     * walletAccount.isSignedIn();\n     */\n    isSignedIn() {\n        return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * walletAccount.getAccountId();\n     */\n    getAccountId() {\n        return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param contractId The NEAR account where the contract is deployed\n     * @param title Name of the application that will appear as requesting access in Wallet\n     * @param successUrl Optional url to redirect upon success\n     * @param failureUrl Optional url to redirect upon failure\n     *\n     * @example\n     *   walletAccount.requestSignIn(\n     *     account-with-deploy-contract,\n     *     \"Guest Book\",\n     *     \"https://example.com/success.html\",\n     *     \"https://example.com/error.html\");\n     */\n    requestSignIn(contractId, title, successUrl, failureUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.getAccountId() || (yield this._keyStore.getKey(this._networkId, this.getAccountId()))) {\n                return Promise.resolve();\n            }\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n            newUrl.searchParams.set('title', title);\n            newUrl.searchParams.set('contract_id', contractId);\n            newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n            newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n            newUrl.searchParams.set('app_url', currentUrl.origin);\n            const accessKey = KeyPair.fromRandom('ed25519');\n            newUrl.searchParams.set('public_key', accessKey.getPublicKey().toString());\n            yield this._keyStore.setKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Requests the user to quickly sign for a transaction or batch of transactions\n     * @param transactions Array of Transaction objects that will be requested to sign\n     * @param callbackUrl The url to navigate to after the user is prompted to sign\n     */\n    requestSignTransactions(transactions, callbackUrl) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const newUrl = new URL('sign', this._walletBaseUrl);\n            newUrl.searchParams.set('transactions', transactions\n                .map(transaction => serialize.serialize(SCHEMA, transaction))\n                .map(serialized => Buffer.from(serialized).toString('base64'))\n                .join(','));\n            newUrl.searchParams.set('callbackUrl', callbackUrl || currentUrl.href);\n            window.location.assign(newUrl.toString());\n        });\n    }\n    /**\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n    _completeSignInWithAccessKey() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const currentUrl = new URL(window.location.href);\n            const publicKey = currentUrl.searchParams.get('public_key') || '';\n            const allKeys = (currentUrl.searchParams.get('all_keys') || '').split(',');\n            const accountId = currentUrl.searchParams.get('account_id') || '';\n            // TODO: Handle situation when access key is not added\n            if (accountId && publicKey) {\n                this._authData = {\n                    accountId,\n                    allKeys\n                };\n                window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n                yield this._moveKeyFromTempToPermanent(accountId, publicKey);\n            }\n            currentUrl.searchParams.delete('public_key');\n            currentUrl.searchParams.delete('all_keys');\n            currentUrl.searchParams.delete('account_id');\n            window.history.replaceState({}, document.title, currentUrl.toString());\n        });\n    }\n    /**\n     *\n     * @param accountId The NEAR account owning the given public key\n     * @param publicKey The public key being set to the key store\n     */\n    _moveKeyFromTempToPermanent(accountId, publicKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const keyPair = yield this._keyStore.getKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n            yield this._keyStore.setKey(this._networkId, accountId, keyPair);\n            yield this._keyStore.removeKey(this._networkId, PENDING_ACCESS_KEY_PREFIX + publicKey);\n        });\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n    signOut() {\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Returns the current connected wallet account\n     */\n    account() {\n        if (!this._connectedAccount) {\n            this._connectedAccount = new ConnectedWalletAccount(this, this._near.connection, this._authData.accountId);\n        }\n        return this._connectedAccount;\n    }\n}\nexport const WalletAccount = WalletConnection;\n/**\n * {@link Account} implementation which redirects to wallet using (@link WalletConnection) when no local key is available.\n */\nclass ConnectedWalletAccount extends Account {\n    constructor(walletConnection, connection, accountId) {\n        super(connection, accountId);\n        this.walletConnection = walletConnection;\n    }\n    // Overriding Account methods\n    signAndSendTransaction(receiverId, actions) {\n        const _super = Object.create(null, {\n            signAndSendTransaction: { get: () => super.signAndSendTransaction }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ready;\n            const localKey = yield this.connection.signer.getPublicKey(this.accountId, this.connection.networkId);\n            let accessKey = yield this.accessKeyForTransaction(receiverId, actions, localKey);\n            if (!accessKey) {\n                throw new Error(`Cannot find matching key for transaction sent to ${receiverId}`);\n            }\n            if (localKey && localKey.toString() === accessKey.public_key) {\n                try {\n                    return yield _super.signAndSendTransaction.call(this, receiverId, actions);\n                }\n                catch (e) {\n                    // TODO: Use TypedError when available\n                    if (e.message.includes('does not have enough balance')) {\n                        accessKey = yield this.accessKeyForTransaction(receiverId, actions);\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            const publicKey = PublicKey.from(accessKey.public_key);\n            // TODO: Cache & listen for nonce updates for given access key\n            const nonce = accessKey.access_key.nonce + 1;\n            const status = yield this.connection.provider.status();\n            const blockHash = base_decode(status.sync_info.latest_block_hash);\n            const transaction = createTransaction(this.accountId, publicKey, receiverId, nonce, actions, blockHash);\n            yield this.walletConnection.requestSignTransactions([transaction], window.location.href);\n            return new Promise((resolve, reject) => {\n                setTimeout(() => {\n                    reject(new Error('Failed to redirect to sign transaction'));\n                }, 1000);\n            });\n            // TODO: Aggregate multiple transaction request with \"debounce\".\n            // TODO: Introduce TrasactionQueue which also can be used to watch for status?\n        });\n    }\n    /**\n     * Check if given access key allows the function call or method attempted in transaction\n     * @param accessKey Array of {access_key: AccessKey, public_key: PublicKey} items\n     * @param receiverId The NEAR account attempting to have access\n     * @param actions The action(s) needed to be checked for access\n     */\n    accessKeyMatchesTransaction(accessKey, receiverId, actions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { access_key: { permission } } = accessKey;\n            if (permission === 'FullAccess') {\n                return true;\n            }\n            if (permission.FunctionCall) {\n                const { receiver_id: allowedReceiverId, method_names: allowedMethods } = permission.FunctionCall;\n                /********************************\n                Accept multisig access keys and let wallets attempt to signAndSendTransaction\n                If an access key has itself as receiverId and method permission add_request_and_confirm, then it is being used in a wallet with multisig contract: https://github.com/near/core-contracts/blob/671c05f09abecabe7a7e58efe942550a35fc3292/multisig/src/lib.rs#L149-L153\n                ********************************/\n                if (allowedReceiverId === this.accountId && allowedMethods.includes(MULTISIG_HAS_METHOD)) {\n                    return true;\n                }\n                if (allowedReceiverId === receiverId) {\n                    if (actions.length !== 1) {\n                        return false;\n                    }\n                    const [{ functionCall }] = actions;\n                    return functionCall &&\n                        (!functionCall.deposit || functionCall.deposit.toString() === \"0\") && // TODO: Should support charging amount smaller than allowance?\n                        (allowedMethods.length === 0 || allowedMethods.includes(functionCall.methodName));\n                    // TODO: Handle cases when allowance doesn't have enough to pay for gas\n                }\n            }\n            // TODO: Support other permissions than FunctionCall\n            return false;\n        });\n    }\n    /**\n     * Helper function returning the access key (if it exists) to the receiver that grants the designated permission\n     * @param receiverId The NEAR account seeking the access key for a transaction\n     * @param actions The action(s) sought to gain access to\n     * @param localKey A local public key provided to check for access\n     * @returns Promise<any>\n     */\n    accessKeyForTransaction(receiverId, actions, localKey) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const accessKeys = yield this.getAccessKeys();\n            if (localKey) {\n                const accessKey = accessKeys.find(key => key.public_key === localKey.toString());\n                if (accessKey && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            const walletKeys = this.walletConnection._authData.allKeys;\n            for (const accessKey of accessKeys) {\n                if (walletKeys.indexOf(accessKey.public_key) !== -1 && (yield this.accessKeyMatchesTransaction(accessKey, receiverId, actions))) {\n                    return accessKey;\n                }\n            }\n            return null;\n        });\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/index.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/enums.js",["363","364"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/format.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/browser_local_storage_key_store.js",["365","366","367","368","369","370","371"],"import { KeyStore } from './keystore';\nimport { KeyPair } from '../utils/key_pair';\n\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nconst LOCAL_STORAGE_KEY_PREFIX = 'near-api-js:keystore:';\nexport class BrowserLocalStorageKeyStore extends KeyStore {\n    constructor(localStorage = window.localStorage, prefix = LOCAL_STORAGE_KEY_PREFIX) {\n        super();\n        this.localStorage = localStorage;\n        this.prefix = prefix;\n    }\n    /**\n     * Sets a local storage item\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @param keyPair The key pair to store in local storage\n     */\n    setKey(networkId, accountId, keyPair) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.setItem(this.storageKeyForSecretKey(networkId, accountId), keyPair.toString());\n        });\n    }\n    /**\n     * Gets a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     * @returns {Promise<KeyPair>}\n     */\n    getKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const value = this.localStorage.getItem(this.storageKeyForSecretKey(networkId, accountId));\n            if (!value) {\n                return null;\n            }\n            return KeyPair.fromString(value);\n        });\n    }\n    /**\n     * Removes a key from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the key pair\n     */\n    removeKey(networkId, accountId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.localStorage.removeItem(this.storageKeyForSecretKey(networkId, accountId));\n        });\n    }\n    /**\n     * Removes all items from local storage\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    this.localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n    /**\n     * Get the network(s) from local storage\n     * @returns {Promise<string[]>}\n     */\n    getNetworks() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Set();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    result.add(parts[1]);\n                }\n            }\n            return Array.from(result.values());\n        });\n    }\n    /**\n     * Gets the account(s) from local storage\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @returns{Promise<string[]>}\n     */\n    getAccounts(networkId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = new Array();\n            for (const key of this.storageKeys()) {\n                if (key.startsWith(this.prefix)) {\n                    const parts = key.substring(this.prefix.length).split(':');\n                    if (parts[1] === networkId) {\n                        result.push(parts[0]);\n                    }\n                }\n            }\n            return result;\n        });\n    }\n    /**\n     * Helper function to retrieve a local storage key\n     * @param networkId The targeted network. (ex. default, betanet, etc…)\n     * @param accountId The NEAR account tied to the storage keythat's sought\n     * @returns {string} An example might be: `near-api-js:keystore:near-friend:default`\n     */\n    storageKeyForSecretKey(networkId, accountId) {\n        return `${this.prefix}${accountId}:${networkId}`;\n    }\n    *storageKeys() {\n        for (let i = 0; i < this.localStorage.length; i++) {\n            yield this.localStorage.key(i);\n        }\n    }\n}\n","/home/savan/Documents/Portfolio/extension/src/components/User/index.js",[],"/home/savan/Documents/Portfolio/extension/src/AppUtill.js",[],"/home/savan/Documents/Portfolio/extension/src/components/tooltip.js",[],"/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailModal.js",["372","373","374","375","376","377","378","379","380","381","382"],"/home/savan/Documents/Portfolio/extension/src/components/SortableItem.js",["383","384"],"import React from \"react\";\r\nimport {\r\n  sortableContainer,\r\n  sortableElement,\r\n  sortableHandle,\r\n} from \"react-sortable-hoc\";\r\nimport _ from \"lodash\";\r\n\r\nconst resizeScreen = () => {\r\n  return window.innerWidth <= 760;\r\n};\r\n\r\n/**\r\n * Draggable list handle\r\n */\r\nconst DragHandle = sortableHandle(() => (\r\n  <span className=\"drag_icon trailit_draggable_icon\">\r\n    <img\r\n      className=\"trail_draggable_icon_pic\"\r\n      src={require(\"../images/move.png\")}\r\n      alt=\"drag icon\"\r\n      width=\"25px\"\r\n    />\r\n  </span>\r\n));\r\n\r\n/**\r\n * Draggable item sort\r\n */\r\nclass SortableItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MobileTargetNotFound: {},\r\n      result: [],\r\n      showMenu: false,\r\n    };\r\n  }\r\n\r\n  static getDerivedStateFromProps(nextProps, prevState) {\r\n    return {\r\n      MobileTargetNotFound: nextProps.MobileTargetNotFound,\r\n      result: nextProps.result,\r\n    };\r\n  }\r\n\r\n  onClickToAddSubMenu = (e, result, tourStep) => {\r\n    this.props.onClick(e, result, tourStep);\r\n  };\r\n\r\n  handleClickMenu = (e) => {\r\n    e.stopPropagation();\r\n\r\n    // Set show menu state\r\n    this.setState({ showMenu: !this.state.showMenu }); // border: 1px solid black;\r\n  };\r\n\r\n  onMouseLeave = (e) => {\r\n    if (this.state.showMenu) {\r\n      // Set show menu state\r\n      this.setState({ showMenu: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let { i, result, tourStep, tourType, currentTrailsTab, index } = this.props;\r\n\r\n    const { MobileTargetNotFound } = this.state;\r\n    let subStep = result.unique_target_one != \"\" ? true : false;\r\n    let subStepStatus = false;\r\n\r\n    if (!_.isEmpty(MobileTargetNotFound)) {\r\n      subStepStatus =\r\n        result.trail_data_id === MobileTargetNotFound.trail_data_id;\r\n    }\r\n\r\n    if (!resizeScreen()) {\r\n      subStepStatus = false;\r\n      subStep = false;\r\n    }\r\n\r\n    return (\r\n      <div className=\"mr-5\">\r\n        {tourType !== \"Make Edit\" ? (\r\n          <div\r\n            // onMouseLeave={this.onMouseLeave}\r\n            className={`${\r\n              currentTrailsTab === \"Following\"\r\n                ? result.visited\r\n                  ? \"info_bbx_gradient\"\r\n                  : \"info_bbx_grey\"\r\n                : \"info_bbx_gradient\"\r\n            } ${tourStep === i + 1 ? \"active\" : \"inactive\"} ${\r\n              this.state.showMenu ? \"z-index-2\" : \"\"\r\n            }`}\r\n          >\r\n            <div className=\"d-flex\">\r\n              <div className=\"d-flex-1\">\r\n                <h4>Step {i + 1}</h4>\r\n                <div className=\"d-flex-image\">\r\n                  {result.mediaType === \"video\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/vd_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"audio\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/mp3_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"image\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/img_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                  {result.mediaType === \"text\" && (\r\n                    <img\r\n                      width=\"16px\"\r\n                      src={require(\"../images/txt_ic.png\")}\r\n                      alt=\"dots\"\r\n                    />\r\n                  )}\r\n                </div>\r\n              </div>\r\n              <div className=\"d-flex-2\">\r\n                <p>{result.title}</p>\r\n              </div>\r\n              <div className=\"d-flex-3\">\r\n                <div>\r\n                  {this.props.tourType === \"Make Edit\" && (\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"trailit_dotsButton\"\r\n                      onClick={this.handleClickMenu}\r\n                    >\r\n                      <img\r\n                        width=\"16px\"\r\n                        src={require(\"../images/trailit_dotsPink.png\")}\r\n                        alt=\"dots\"\r\n                      />\r\n                    </button>\r\n                  )}\r\n                  {this.state.showMenu && (\r\n                    <div className={`trailit_dotsMenuList`}>\r\n                      <button\r\n                        type=\"button\"\r\n                        onClick={(e) => {\r\n                          // Set show state\r\n                          this.setState({ showMenu: false });\r\n\r\n                          // Show delete modal\r\n                          this.props.onDeleteModalOpen(\r\n                            result.title,\r\n                            result.trail_data_id,\r\n                            false\r\n                          );\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <div\r\n            onMouseLeave={this.onMouseLeave}\r\n            className={`trailitStepBox ${\r\n              tourStep === i + 1 ? \"active\" : \"inactive\"\r\n            } ${this.state.showMenu ? \"z-index-2\" : \"\"}`}\r\n          >\r\n            {tourType !== \"preview\" && <DragHandle />}\r\n            <div className=\"trailitStepTitle\">\r\n              Step {i + 1} <span>{result.title}</span>\r\n            </div>\r\n            <div className=\"trailitIconRight\">\r\n              <div className=\"trailit_right_container\">\r\n                {this.props.tourType === \"Make Edit\" && (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={this.handleClickMenu}\r\n                    className=\"trailit_dotsButton\"\r\n                  >\r\n                    <svg\r\n                      width=\"24\"\r\n                      height=\"6\"\r\n                      viewBox=\"0 0 24 6\"\r\n                      fill=\"none\"\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                      <circle\r\n                        r=\"2.66666\"\r\n                        transform=\"matrix(1 0 0 -1 2.66666 2.66671)\"\r\n                        fill=\"white\"\r\n                      />\r\n                      <circle\r\n                        r=\"2.66666\"\r\n                        transform=\"matrix(1 0 0 -1 11.9999 2.66671)\"\r\n                        fill=\"white\"\r\n                      />\r\n                      <circle\r\n                        r=\"2.66666\"\r\n                        transform=\"matrix(1 0 0 -1 21.3333 2.66671)\"\r\n                        fill=\"white\"\r\n                      />\r\n                    </svg>\r\n                  </button>\r\n                )}\r\n                {this.state.showMenu && (\r\n                  <div className={`trailit_dotsMenuList`}>\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={(e) => {\r\n                        // Set show state\r\n                        this.setState({ showMenu: false });\r\n\r\n                        // Show delete modal\r\n                        this.props.onDeleteModalOpen(\r\n                          result.title,\r\n                          result.trail_data_id,\r\n                          false\r\n                        );\r\n                      }}\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              {result.mediaType === \"image\" && (\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"21\"\r\n                  viewBox=\"0 0 24 21\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M9 6.75C9 7.34674 8.76295 7.91903 8.34099 8.34099C7.91903 8.76295 7.34674 9 6.75 9C6.15326 9 5.58097 8.76295 5.15901 8.34099C4.73705 7.91903 4.5 7.34674 4.5 6.75C4.5 6.15326 4.73705 5.58097 5.15901 5.15901C5.58097 4.73705 6.15326 4.5 6.75 4.5C7.34674 4.5 7.91903 4.73705 8.34099 5.15901C8.76295 5.58097 9 6.15326 9 6.75Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                  <path\r\n                    d=\"M3 0C2.20435 0 1.44129 0.316071 0.87868 0.87868C0.316071 1.44129 0 2.20435 0 3V18C0 18.7956 0.316071 19.5587 0.87868 20.1213C1.44129 20.6839 2.20435 21 3 21H21C21.7956 21 22.5587 20.6839 23.1213 20.1213C23.6839 19.5587 24 18.7956 24 18V3C24 2.20435 23.6839 1.44129 23.1213 0.87868C22.5587 0.316071 21.7956 0 21 0H3ZM21 1.5C21.3978 1.5 21.7794 1.65804 22.0607 1.93934C22.342 2.22064 22.5 2.60218 22.5 3V12.75L16.8345 9.8295C16.6938 9.75904 16.5346 9.73459 16.3792 9.75963C16.2239 9.78466 16.0804 9.85791 15.969 9.969L10.404 15.534L6.414 12.876C6.26994 12.7801 6.09714 12.737 5.92491 12.7539C5.75267 12.7709 5.5916 12.8468 5.469 12.969L1.5 16.5V3C1.5 2.60218 1.65804 2.22064 1.93934 1.93934C2.22064 1.65804 2.60218 1.5 3 1.5H21Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n              )}\r\n              {result.mediaType === \"video\" && (\r\n                <svg\r\n                  width=\"27\"\r\n                  height=\"17\"\r\n                  viewBox=\"0 0 27 17\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M26.5518 2.35774C26.4154 2.27908 26.2607 2.23739 26.1031 2.23686C25.9454 2.23633 25.7904 2.27697 25.6535 2.35472L20.7 5.16867V4.47368C20.6986 3.28761 20.2241 2.1505 19.3805 1.31182C18.5368 0.473132 17.3931 0.00136164 16.2 0H1.8C1.32277 0.00053284 0.865249 0.189237 0.5278 0.524713C0.19035 0.860189 0.000535974 1.31504 0 1.78947V12.5263C0.00136965 13.7124 0.475915 14.8495 1.31953 15.6882C2.16315 16.5269 3.30695 16.9986 4.5 17H18.9C19.3772 16.9995 19.8347 16.8108 20.1722 16.4753C20.5096 16.1398 20.6995 15.685 20.7 15.2105V11.8313L25.6535 14.6453C25.7904 14.723 25.9454 14.7637 26.103 14.7632C26.2607 14.7626 26.4154 14.7209 26.5517 14.6423C26.6881 14.5636 26.8013 14.4507 26.8799 14.3149C26.9586 14.1791 27 14.0251 27 13.8684V3.13158C27 2.97486 26.9586 2.82089 26.88 2.68509C26.8013 2.54928 26.6881 2.43639 26.5518 2.35774ZM18.9 15.2105H4.5C3.78416 15.2097 3.09787 14.9267 2.5917 14.4235C2.08553 13.9202 1.8008 13.238 1.8 12.5263V1.78947H16.2C16.9158 1.79027 17.6021 2.07333 18.1083 2.57654C18.6145 3.07976 18.8992 3.76203 18.9 4.47368L18.9002 6.72384V6.73312L18.9006 10.2617C18.9003 10.2711 18.9006 10.2804 18.9006 10.2897L18.9011 15.2105H18.9ZM25.2 12.3267L20.7 9.77019V7.22981L25.2 4.67332V12.3267Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n              )}\r\n              {result.mediaType === \"text\" && (\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  version=\"1.1\"\r\n                  width=\"24\"\r\n                  height=\"19\"\r\n                  x=\"0\"\r\n                  y=\"0\"\r\n                  viewBox=\"0 0 512 512\"\r\n                  alt=\"twitter\"\r\n                >\r\n                  <g>\r\n                    <g xmlns=\"http://www.w3.org/2000/svg\">\r\n                      <path\r\n                        d=\"m15 114.235c8.284 0 15-6.716 15-15v-69.235h69.235c8.284 0 15-6.716 15-15s-6.716-15-15-15h-84.235c-8.284 0-15 6.716-15 15v84.235c0 8.285 6.716 15 15 15z\"\r\n                        fill=\"#ffffff\"\r\n                        data-original=\"#000000\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"m497 0h-84.235c-8.284 0-15 6.716-15 15s6.716 15 15 15h69.235v69.235c0 8.284 6.716 15 15 15s15-6.716 15-15v-84.235c0-8.284-6.716-15-15-15z\"\r\n                        fill=\"#ffffff\"\r\n                        data-original=\"#000000\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"m497 397.765c-8.284 0-15 6.716-15 15v69.235h-69.235c-8.284 0-15 6.716-15 15s6.716 15 15 15h84.235c8.284 0 15-6.716 15-15v-84.235c0-8.285-6.716-15-15-15z\"\r\n                        fill=\"#ffffff\"\r\n                        data-original=\"#000000\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"m99.235 482h-69.235v-69.235c0-8.284-6.716-15-15-15s-15 6.716-15 15v84.235c0 8.284 6.716 15 15 15h84.235c8.284 0 15-6.716 15-15s-6.715-15-15-15z\"\r\n                        fill=\"#ffffff\"\r\n                        data-original=\"#000000\"\r\n                      ></path>\r\n                      <path\r\n                        d=\"m419.66 191.38v-94.73c0-4.7-3.81-8.51-8.52-8.51h-155.14-155.14c-4.71 0-8.52 3.81-8.52 8.51v94.73c0 4.71 3.81 8.52 8.52 8.52h45.24c4.7 0 8.51-3.81 8.51-8.52v-32.45c0-4.71 3.82-8.52 8.52-8.52h53.21c4.71 0 8.52 3.81 8.52 8.52v234.14c0 4.71-3.81 8.52-8.52 8.52h-23.27c-4.71 0-8.52 3.81-8.52 8.52v45.24c0 4.7 3.81 8.51 8.52 8.51h62.93 62.93c4.71 0 8.52-3.81 8.52-8.51v-45.24c0-4.71-3.81-8.52-8.52-8.52h-23.27c-4.71 0-8.52-3.81-8.52-8.52v-234.14c0-4.71 3.81-8.52 8.52-8.52h53.21c4.7 0 8.52 3.81 8.52 8.52v32.45c0 4.71 3.81 8.52 8.51 8.52h45.24c4.71 0 8.52-3.81 8.52-8.52z\"\r\n                        fill=\"#ffffff\"\r\n                        data-original=\"#000000\"\r\n                      ></path>\r\n                    </g>\r\n                  </g>\r\n                </svg>\r\n              )}\r\n              {result.mediaType === \"audio\" && (\r\n                <svg\r\n                  width=\"24\"\r\n                  height=\"19\"\r\n                  viewBox=\"0 0 24 19\"\r\n                  fill=\"none\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path\r\n                    d=\"M17.3861 0.00321735C17.1829 0.0455981 17.0017 0.156542 16.8745 0.316414C16.7473 0.476286 16.6823 0.674778 16.6911 0.876763V18.0051C16.6705 18.1277 16.6775 18.2531 16.7116 18.3728C16.7458 18.4924 16.8063 18.6034 16.8889 18.698C16.9716 18.7927 17.0744 18.8687 17.1902 18.9209C17.3061 18.973 17.4322 19 17.5598 19C17.6875 19 17.8136 18.973 17.9295 18.9209C18.0453 18.8687 18.1481 18.7927 18.2308 18.698C18.3134 18.6034 18.3739 18.4924 18.408 18.3728C18.4422 18.2531 18.4492 18.1277 18.4286 18.0051V0.876763C18.4315 0.756365 18.4083 0.636717 18.3605 0.525631C18.3127 0.414545 18.2413 0.314518 18.1511 0.232082C18.0608 0.149646 17.9537 0.0866533 17.8368 0.0472172C17.7198 0.00778116 17.5956 -0.00721183 17.4723 0.00321735C17.4436 0.00184863 17.4148 0.00184863 17.3861 0.00321735ZM6.26641 0.904709C6.06322 0.94709 5.882 1.05803 5.7548 1.21791C5.62761 1.37778 5.56266 1.57627 5.57143 1.77826V17.1036C5.55079 17.2262 5.55779 17.3516 5.59195 17.4713C5.62611 17.5909 5.6866 17.7019 5.76924 17.7966C5.85188 17.8912 5.95469 17.9672 6.07054 18.0194C6.18639 18.0715 6.31251 18.0985 6.44015 18.0985C6.5678 18.0985 6.69392 18.0715 6.80977 18.0194C6.92562 17.9672 7.02842 17.8912 7.11107 17.7966C7.19371 17.7019 7.2542 17.5909 7.28836 17.4713C7.32252 17.3516 7.32952 17.2262 7.30888 17.1036V1.77826C7.31182 1.65786 7.28863 1.53821 7.24081 1.42712C7.193 1.31604 7.12164 1.21601 7.0314 1.13357C6.94115 1.05114 6.83405 0.988145 6.71708 0.948709C6.60011 0.909273 6.47591 0.89428 6.35259 0.904709C6.32388 0.903341 6.29512 0.903341 6.26641 0.904709ZM14.6062 3.60919C14.403 3.65157 14.2218 3.76251 14.0946 3.92238C13.9674 4.08225 13.9024 4.28075 13.9112 4.48273V14.3991C13.8901 14.5219 13.8968 14.6476 13.9307 14.7675C13.9646 14.8875 14.025 14.9988 14.1076 15.0937C14.1903 15.1887 14.2932 15.265 14.4092 15.3173C14.5252 15.3696 14.6516 15.3968 14.7795 15.3968C14.9073 15.3968 15.0337 15.3696 15.1497 15.3173C15.2657 15.265 15.3686 15.1887 15.4513 15.0937C15.5339 14.9988 15.5943 14.8875 15.6282 14.7675C15.6622 14.6476 15.6688 14.5219 15.6477 14.3991V4.48273C15.6506 4.3625 15.6275 4.24302 15.5798 4.13206C15.5321 4.02111 15.4609 3.92118 15.3709 3.83877C15.2808 3.75637 15.1739 3.69333 15.0572 3.65377C14.9405 3.61422 14.8165 3.59902 14.6933 3.60919C14.664 3.60776 14.6346 3.60776 14.6053 3.60919H14.6062ZM3.48649 4.51068C3.2833 4.55306 3.10207 4.664 2.97488 4.82387C2.84769 4.98375 2.78273 5.18224 2.79151 5.38422V13.4977C2.77042 13.6204 2.77707 13.7461 2.811 13.866C2.84492 13.986 2.9053 14.0973 2.98794 14.1923C3.07058 14.2872 3.17349 14.3635 3.28951 14.4158C3.40553 14.4682 3.53188 14.4953 3.65977 14.4953C3.78765 14.4953 3.914 14.4682 4.03003 14.4158C4.14605 14.3635 4.24896 14.2872 4.3316 14.1923C4.41424 14.0973 4.47462 13.986 4.50854 13.866C4.54246 13.7461 4.54911 13.6204 4.52803 13.4977V5.38422C4.53095 5.26399 4.5078 5.14451 4.46009 5.03356C4.41239 4.92261 4.3412 4.82267 4.25116 4.74026C4.16112 4.65786 4.05425 4.59482 3.93751 4.55527C3.82077 4.51571 3.69677 4.50052 3.57359 4.51068C3.54427 4.50925 3.51489 4.50925 3.48556 4.51068H3.48649ZM9.04633 5.41217C8.84314 5.45455 8.66192 5.56549 8.53473 5.72537C8.40753 5.88524 8.34258 6.08373 8.35135 6.28572V12.5962C8.33027 12.7189 8.33692 12.8446 8.37084 12.9645C8.40477 13.0845 8.46515 13.1958 8.54779 13.2908C8.63042 13.3857 8.73333 13.462 8.84936 13.5143C8.96538 13.5667 9.09173 13.5938 9.21961 13.5938C9.3475 13.5938 9.47385 13.5667 9.58987 13.5143C9.70589 13.462 9.8088 13.3857 9.89144 13.2908C9.97408 13.1958 10.0345 13.0845 10.0684 12.9645C10.1023 12.8446 10.109 12.7189 10.0879 12.5962V6.28572C10.0908 6.16548 10.0676 6.046 10.0199 5.93505C9.97224 5.8241 9.90105 5.72416 9.81101 5.64176C9.72097 5.55935 9.6141 5.49631 9.49736 5.45676C9.38061 5.4172 9.25662 5.40201 9.13344 5.41217C9.10411 5.41074 9.07473 5.41074 9.04541 5.41217H9.04633ZM20.166 5.41217C19.9628 5.45455 19.7816 5.56549 19.6544 5.72537C19.5272 5.88524 19.4623 6.08373 19.471 6.28572V12.5962C19.4504 12.7187 19.4574 12.8442 19.4916 12.9638C19.5257 13.0835 19.5862 13.1945 19.6689 13.2891C19.7515 13.3837 19.8543 13.4598 19.9702 13.5119C20.086 13.564 20.2121 13.591 20.3398 13.591C20.4674 13.591 20.5935 13.564 20.7094 13.5119C20.8252 13.4598 20.928 13.3837 21.0107 13.2891C21.0933 13.1945 21.1538 13.0835 21.188 12.9638C21.2221 12.8442 21.2291 12.7187 21.2085 12.5962V6.28572C21.2114 6.16532 21.1882 6.04567 21.1404 5.93458C21.0926 5.8235 21.0213 5.72347 20.931 5.64103C20.8408 5.5586 20.7337 5.4956 20.6167 5.45617C20.4997 5.41673 20.3755 5.40174 20.2522 5.41217C20.2235 5.4108 20.1947 5.4108 20.166 5.41217ZM0.706564 7.21515C0.503376 7.25753 0.322151 7.36848 0.194959 7.52835C0.0677665 7.68822 0.00280949 7.88671 0.0115831 8.0887V10.7932C-0.00905553 10.9157 -0.00205331 11.0412 0.0321043 11.1608C0.066262 11.2805 0.126758 11.3915 0.209398 11.4861C0.292039 11.5808 0.394847 11.6568 0.510696 11.7089C0.626545 11.7611 0.752664 11.7881 0.880309 11.7881C1.00795 11.7881 1.13407 11.7611 1.24992 11.7089C1.36577 11.6568 1.46858 11.5808 1.55122 11.4861C1.63386 11.3915 1.69436 11.2805 1.72851 11.1608C1.76267 11.0412 1.76967 10.9157 1.74903 10.7932V8.0887C1.75198 7.9683 1.72878 7.84865 1.68097 7.73757C1.63315 7.62648 1.5618 7.52645 1.47155 7.44402C1.3813 7.36158 1.2742 7.29859 1.15724 7.25915C1.04027 7.21972 0.916068 7.20472 0.792741 7.21515C0.763724 7.21376 0.734654 7.21376 0.705637 7.21515H0.706564ZM11.8263 7.21515C11.6231 7.25753 11.4418 7.36848 11.3146 7.52835C11.1875 7.68822 11.1225 7.88671 11.1313 8.0887V10.7932C11.1102 10.9159 11.1168 11.0416 11.1508 11.1616C11.1847 11.2815 11.2451 11.3928 11.3277 11.4878C11.4103 11.5827 11.5133 11.659 11.6293 11.7114C11.7453 11.7637 11.8717 11.7908 11.9995 11.7908C12.1274 11.7908 12.2538 11.7637 12.3698 11.7114C12.4858 11.659 12.5887 11.5827 12.6714 11.4878C12.754 11.3928 12.8144 11.2815 12.8483 11.1616C12.8822 11.0416 12.8889 10.9159 12.8678 10.7932V8.0887C12.8707 7.96847 12.8476 7.84899 12.7999 7.73803C12.7522 7.62708 12.681 7.52715 12.5909 7.44474C12.5009 7.36233 12.394 7.2993 12.2773 7.25974C12.1605 7.22019 12.0365 7.20499 11.9134 7.21515C11.884 7.21373 11.8547 7.21373 11.8253 7.21515H11.8263ZM22.9459 7.21515C22.7428 7.25753 22.5615 7.36848 22.4343 7.52835C22.3071 7.68822 22.2422 7.88671 22.251 8.0887V10.7932C22.2303 10.9157 22.2373 11.0412 22.2715 11.1608C22.3056 11.2805 22.3661 11.3915 22.4488 11.4861C22.5314 11.5808 22.6342 11.6568 22.7501 11.7089C22.8659 11.7611 22.992 11.7881 23.1197 11.7881C23.2473 11.7881 23.3735 11.7611 23.4893 11.7089C23.6052 11.6568 23.708 11.5808 23.7906 11.4861C23.8732 11.3915 23.9337 11.2805 23.9679 11.1608C24.0021 11.0412 24.0091 10.9157 23.9884 10.7932V8.0887C23.9914 7.9683 23.9682 7.84865 23.9203 7.73757C23.8725 7.62648 23.8012 7.52645 23.7109 7.44402C23.6207 7.36158 23.5136 7.29859 23.3966 7.25915C23.2797 7.21972 23.1554 7.20472 23.0321 7.21515C23.0034 7.21379 22.9747 7.21379 22.9459 7.21515Z\"\r\n                    fill=\"white\"\r\n                  />\r\n                </svg>\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {subStep && (\r\n          <div\r\n            className={`trailitStepBox trailitSubStepBox ${\r\n              tourStep === i + 1 ? \"active\" : \"inactive\"\r\n            } ${this.state.showMenu ? \"z-index-2\" : \"\"}`}\r\n          >\r\n            {/* <DragHandle /> */}\r\n            <div className=\"trailitStepTitle\">\r\n              Step {i + 1} - {result.title}\r\n            </div>\r\n          </div>\r\n        )}\r\n        {subStepStatus && tourType === \"Make Edit\" && (\r\n          <div className=\"trailitAddSubStep\">\r\n            <button\r\n              type=\"button\"\r\n              onClick={(e) => this.onClickToAddSubMenu(e, result, i + 1)}\r\n            >\r\n              <img\r\n                width=\"10px\"\r\n                src={require(\"../images/imgpsh_fullsize_anim.png\")}\r\n                alt=\"...\"\r\n              />\r\n              Substep\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default sortableElement(SortableItem);\r\n\r\n/**\r\n * Draggable sort list\r\n */\r\nexport const SortableContainer = sortableContainer(({ children }) => {\r\n  return <div>{children}</div>;\r\n});\r\n","/home/savan/Documents/Portfolio/extension/src/css/main.js",[],"/home/savan/Documents/Portfolio/extension/src/components/CreateNewTrailTab.js",["385","386","387"],"import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport Icon from '@ant-design/icons';\r\nimport $ from 'jquery';\r\nimport { createTrailId } from '../common/axios';\r\n\r\nconst chrome = window.chrome;\r\n\r\nclass CreateNewTrailTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            trail_name: '',\r\n            loading: false\r\n        };\r\n    };\r\n        \r\n    clickToAddTrails = (values) => {\r\n        // this.props.form.validateFields((err, values) => {\r\n        //     if (!err) {\r\n                this.setState({loading: true});\r\n                chrome.storage.local.get([\"trail_web_user_tour\", \"userData\"], async function (items) {\r\n                    const result = await createTrailId(items.userData._id, values.trail_name);\r\n                    if(result.status == 200) {\r\n                        this.setState({trail_name: '', loading: false});\r\n                        this.props.onChange(false);\r\n                        chrome.storage.local.set({trail_id: result.data.response[0].trail_id})\r\n                    }\r\n                }.bind(this))\r\n        //     }\r\n        // });\r\n    }\r\n    \r\n    render () {        \r\n        return(\r\n            <React.Fragment>\r\n                <Form name=\"normal_login\" className=\"tr_new_trail_create_form\">\r\n                    <Form.Item\r\n                        name=\"trail_name\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input Trail Name',\r\n                            }\r\n                        ]}\r\n                    >\r\n                        <Input\r\n                            placeholder=\"Enter Trail Name\"\r\n                            className=\"tr_input\"\r\n                        />\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\" onClick={this.clickToAddTrails} className=\"tr_button\" loading={this.state.loading}>\r\n                            Add Trail\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateNewTrailTab;","/home/savan/Documents/Portfolio/extension/src/near-api-js/signer.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/account_multisig.js",["388","389","390"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/utils/rpc_errors.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/keystore.js",[],"/home/savan/Documents/Portfolio/extension/src/code/getBalance.js",["391","392"],"/home/savan/Documents/Portfolio/extension/src/common/audAndVidCommon.js",[],"/home/savan/Documents/Portfolio/extension/src/common/trailOverlay.js",[],"/home/savan/Documents/Portfolio/extension/src/components/videoTour.js",["393","394"],"/home/savan/Documents/Portfolio/extension/src/css/videoTour.js",[],"/home/savan/Documents/Portfolio/extension/src/near-api-js/connection.js",[],"/home/savan/Documents/Portfolio/extension/src/components/userProfile.js",["395","396","397","398"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/providers/json-rpc-provider.js",["399","400","401","402","403","404","405"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/key_stores/in_memory_key_store.js",["406","407","408","409","410","411","412"],"/home/savan/Documents/Portfolio/extension/src/components/User/userCUSD.js",["413","414","415","416"],"/home/savan/Documents/Portfolio/extension/src/common/celo/wallet/index.js",["417"],"/home/savan/Documents/Portfolio/extension/src/near-api-js/generated/rpc_error_types.js",[],{"ruleId":"418","severity":1,"message":"419","line":95,"column":20,"nodeType":"420","messageId":"421","endLine":95,"endColumn":36},{"ruleId":"418","severity":1,"message":"422","line":523,"column":9,"nodeType":"420","messageId":"421","endLine":523,"endColumn":13},{"ruleId":"418","severity":1,"message":"423","line":546,"column":13,"nodeType":"420","messageId":"421","endLine":546,"endColumn":18},{"ruleId":"424","severity":1,"message":"425","line":1214,"column":37,"nodeType":"426","messageId":"427","endLine":1214,"endColumn":39},{"ruleId":"424","severity":1,"message":"428","line":1215,"column":44,"nodeType":"426","messageId":"427","endLine":1215,"endColumn":46},{"ruleId":"418","severity":1,"message":"429","line":1993,"column":13,"nodeType":"420","messageId":"421","endLine":1993,"endColumn":28},{"ruleId":"418","severity":1,"message":"430","line":1993,"column":30,"nodeType":"420","messageId":"421","endLine":1993,"endColumn":38},{"ruleId":"424","severity":1,"message":"428","line":2158,"column":26,"nodeType":"426","messageId":"427","endLine":2158,"endColumn":28},{"ruleId":"424","severity":1,"message":"425","line":2522,"column":38,"nodeType":"426","messageId":"427","endLine":2522,"endColumn":40},{"ruleId":"424","severity":1,"message":"428","line":2639,"column":32,"nodeType":"426","messageId":"427","endLine":2639,"endColumn":34},{"ruleId":"431","severity":1,"message":"432","line":2866,"column":70,"nodeType":"433","messageId":"434","endLine":2866,"endColumn":72},{"ruleId":"424","severity":1,"message":"428","line":3241,"column":26,"nodeType":"426","messageId":"427","endLine":3241,"endColumn":28},{"ruleId":"418","severity":1,"message":"435","line":3360,"column":15,"nodeType":"420","messageId":"421","endLine":3360,"endColumn":20},{"ruleId":"418","severity":1,"message":"436","line":3716,"column":11,"nodeType":"420","messageId":"421","endLine":3716,"endColumn":19},{"ruleId":"418","severity":1,"message":"437","line":3751,"column":7,"nodeType":"420","messageId":"421","endLine":3751,"endColumn":11},{"ruleId":"418","severity":1,"message":"438","line":3780,"column":11,"nodeType":"420","messageId":"421","endLine":3780,"endColumn":28},{"ruleId":"439","replacedBy":"440"},{"ruleId":"441","replacedBy":"442"},{"ruleId":"418","severity":1,"message":"443","line":5,"column":7,"nodeType":"420","messageId":"421","endLine":5,"endColumn":13},{"ruleId":"444","severity":1,"message":"445","line":44,"column":19,"nodeType":"446","endLine":44,"endColumn":49},{"ruleId":"447","severity":1,"message":"448","line":44,"column":27,"nodeType":"449","messageId":"450","endLine":44,"endColumn":48},{"ruleId":"451","severity":1,"message":"452","line":45,"column":21,"nodeType":"446","endLine":45,"endColumn":97},{"ruleId":"439","replacedBy":"453"},{"ruleId":"441","replacedBy":"454"},{"ruleId":"418","severity":1,"message":"455","line":2,"column":10,"nodeType":"420","messageId":"421","endLine":2,"endColumn":16},{"ruleId":"418","severity":1,"message":"456","line":2,"column":49,"nodeType":"420","messageId":"421","endLine":2,"endColumn":60},{"ruleId":"418","severity":1,"message":"457","line":3,"column":10,"nodeType":"420","messageId":"421","endLine":3,"endColumn":14},{"ruleId":"418","severity":1,"message":"458","line":3,"column":16,"nodeType":"420","messageId":"421","endLine":3,"endColumn":21},{"ruleId":"418","severity":1,"message":"459","line":4,"column":8,"nodeType":"420","messageId":"421","endLine":4,"endColumn":12},{"ruleId":"418","severity":1,"message":"455","line":2,"column":23,"nodeType":"420","messageId":"421","endLine":2,"endColumn":29},{"ruleId":"460","severity":1,"message":"461","line":71,"column":48,"nodeType":"462","messageId":"463","endLine":74,"endColumn":10},{"ruleId":"439","replacedBy":"464"},{"ruleId":"441","replacedBy":"465"},{"ruleId":"460","severity":1,"message":"461","line":37,"column":122,"nodeType":"462","messageId":"463","endLine":42,"endColumn":18},{"ruleId":"466","severity":1,"message":"467","line":1,"column":1,"nodeType":"468","messageId":"469","endLine":1,"endColumn":14,"fix":"470"},{"ruleId":"424","severity":1,"message":"425","line":47,"column":129,"nodeType":"426","messageId":"427","endLine":47,"endColumn":131},{"ruleId":"418","severity":1,"message":"458","line":3,"column":16,"nodeType":"420","messageId":"421","endLine":3,"endColumn":21},{"ruleId":"471","severity":1,"message":"472","line":9,"column":63,"nodeType":"473","messageId":"474","endLine":9,"endColumn":80},{"ruleId":"475","severity":1,"message":"476","line":10,"column":63,"nodeType":"477","messageId":"478","endLine":10,"endColumn":64},{"ruleId":"479","severity":1,"message":"480","line":163,"column":24,"nodeType":"481","messageId":"482","endLine":163,"endColumn":31},{"ruleId":"431","severity":1,"message":"483","line":242,"column":58,"nodeType":"433","messageId":"484","endLine":242,"endColumn":60},{"ruleId":"424","severity":1,"message":"428","line":183,"column":42,"nodeType":"426","messageId":"427","endLine":183,"endColumn":44},{"ruleId":"424","severity":1,"message":"428","line":39,"column":55,"nodeType":"426","messageId":"427","endLine":39,"endColumn":57},{"ruleId":"424","severity":1,"message":"428","line":40,"column":19,"nodeType":"426","messageId":"427","endLine":40,"endColumn":21},{"ruleId":"424","severity":1,"message":"428","line":47,"column":27,"nodeType":"426","messageId":"427","endLine":47,"endColumn":29},{"ruleId":"424","severity":1,"message":"425","line":49,"column":19,"nodeType":"426","messageId":"427","endLine":49,"endColumn":21},{"ruleId":"424","severity":1,"message":"428","line":84,"column":23,"nodeType":"426","messageId":"427","endLine":84,"endColumn":25},{"ruleId":"424","severity":1,"message":"428","line":85,"column":43,"nodeType":"426","messageId":"427","endLine":85,"endColumn":45},{"ruleId":"485","severity":1,"message":"486","line":169,"column":9,"nodeType":"481","messageId":"427","endLine":169,"endColumn":13,"fix":"487"},{"ruleId":"418","severity":1,"message":"488","line":2,"column":10,"nodeType":"420","messageId":"421","endLine":2,"endColumn":13},{"ruleId":"431","severity":1,"message":"489","line":195,"column":25,"nodeType":"433","messageId":"434","endLine":195,"endColumn":27},{"ruleId":"424","severity":1,"message":"425","line":199,"column":37,"nodeType":"426","messageId":"427","endLine":199,"endColumn":39},{"ruleId":"424","severity":1,"message":"428","line":205,"column":19,"nodeType":"426","messageId":"427","endLine":205,"endColumn":21},{"ruleId":"424","severity":1,"message":"428","line":206,"column":20,"nodeType":"426","messageId":"427","endLine":206,"endColumn":22},{"ruleId":"424","severity":1,"message":"425","line":214,"column":24,"nodeType":"426","messageId":"427","endLine":214,"endColumn":26},{"ruleId":"424","severity":1,"message":"425","line":228,"column":55,"nodeType":"426","messageId":"427","endLine":228,"endColumn":57},{"ruleId":"424","severity":1,"message":"425","line":271,"column":17,"nodeType":"426","messageId":"427","endLine":271,"endColumn":19},{"ruleId":"424","severity":1,"message":"425","line":334,"column":59,"nodeType":"426","messageId":"427","endLine":334,"endColumn":61},{"ruleId":"431","severity":1,"message":"483","line":368,"column":39,"nodeType":"433","messageId":"484","endLine":368,"endColumn":41},{"ruleId":"424","severity":1,"message":"425","line":408,"column":55,"nodeType":"426","messageId":"427","endLine":408,"endColumn":57},{"ruleId":"424","severity":1,"message":"425","line":468,"column":43,"nodeType":"426","messageId":"427","endLine":468,"endColumn":45},{"ruleId":"424","severity":1,"message":"425","line":474,"column":61,"nodeType":"426","messageId":"427","endLine":474,"endColumn":63},{"ruleId":"460","severity":1,"message":"461","line":89,"column":48,"nodeType":"462","messageId":"463","endLine":98,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":213,"column":48,"nodeType":"462","messageId":"463","endLine":240,"endColumn":10},{"ruleId":"431","severity":1,"message":"483","line":6,"column":43,"nodeType":"433","messageId":"484","endLine":6,"endColumn":45},{"ruleId":"431","severity":1,"message":"483","line":14,"column":43,"nodeType":"433","messageId":"484","endLine":14,"endColumn":45},{"ruleId":"460","severity":1,"message":"461","line":28,"column":48,"nodeType":"462","messageId":"463","endLine":30,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":39,"column":48,"nodeType":"462","messageId":"463","endLine":45,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":53,"column":48,"nodeType":"462","messageId":"463","endLine":55,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":61,"column":48,"nodeType":"462","messageId":"463","endLine":67,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":74,"column":48,"nodeType":"462","messageId":"463","endLine":83,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":91,"column":48,"nodeType":"462","messageId":"463","endLine":102,"endColumn":10},{"ruleId":"479","severity":1,"message":"480","line":92,"column":28,"nodeType":"490","messageId":"482","endLine":92,"endColumn":39},{"ruleId":"418","severity":1,"message":"457","line":3,"column":3,"nodeType":"420","messageId":"421","endLine":3,"endColumn":7},{"ruleId":"418","severity":1,"message":"458","line":4,"column":3,"nodeType":"420","messageId":"421","endLine":4,"endColumn":8},{"ruleId":"418","severity":1,"message":"456","line":9,"column":3,"nodeType":"420","messageId":"421","endLine":9,"endColumn":14},{"ruleId":"418","severity":1,"message":"491","line":53,"column":9,"nodeType":"420","messageId":"421","endLine":53,"endColumn":18},{"ruleId":"418","severity":1,"message":"492","line":53,"column":20,"nodeType":"420","messageId":"421","endLine":53,"endColumn":26},{"ruleId":"418","severity":1,"message":"493","line":53,"column":28,"nodeType":"420","messageId":"421","endLine":53,"endColumn":36},{"ruleId":"485","severity":1,"message":"486","line":63,"column":9,"nodeType":"481","messageId":"427","endLine":63,"endColumn":13,"fix":"494"},{"ruleId":"424","severity":1,"message":"428","line":72,"column":25,"nodeType":"426","messageId":"427","endLine":72,"endColumn":27},{"ruleId":"418","severity":1,"message":"495","line":85,"column":19,"nodeType":"420","messageId":"421","endLine":85,"endColumn":31},{"ruleId":"444","severity":1,"message":"445","line":137,"column":21,"nodeType":"446","endLine":137,"endColumn":51},{"ruleId":"447","severity":1,"message":"448","line":137,"column":29,"nodeType":"449","messageId":"450","endLine":137,"endColumn":50},{"ruleId":"418","severity":1,"message":"423","line":66,"column":60,"nodeType":"420","messageId":"421","endLine":66,"endColumn":65},{"ruleId":"424","severity":1,"message":"425","line":69,"column":44,"nodeType":"426","messageId":"427","endLine":69,"endColumn":46},{"ruleId":"418","severity":1,"message":"459","line":3,"column":8,"nodeType":"420","messageId":"421","endLine":3,"endColumn":12},{"ruleId":"418","severity":1,"message":"496","line":4,"column":8,"nodeType":"420","messageId":"421","endLine":4,"endColumn":9},{"ruleId":"424","severity":1,"message":"428","line":24,"column":38,"nodeType":"426","messageId":"427","endLine":24,"endColumn":40},{"ruleId":"460","severity":1,"message":"461","line":43,"column":48,"nodeType":"462","messageId":"463","endLine":48,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":121,"column":48,"nodeType":"462","messageId":"463","endLine":123,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":126,"column":48,"nodeType":"462","messageId":"463","endLine":128,"endColumn":10},{"ruleId":"418","severity":1,"message":"497","line":7,"column":7,"nodeType":"420","messageId":"421","endLine":7,"endColumn":13},{"ruleId":"418","severity":1,"message":"498","line":8,"column":7,"nodeType":"420","messageId":"421","endLine":8,"endColumn":15},{"ruleId":"418","severity":1,"message":"499","line":55,"column":5,"nodeType":"420","messageId":"421","endLine":55,"endColumn":12},{"ruleId":"444","severity":1,"message":"500","line":375,"column":13,"nodeType":"446","endLine":384,"endColumn":14},{"ruleId":"418","severity":1,"message":"501","line":7,"column":10,"nodeType":"420","messageId":"421","endLine":7,"endColumn":20},{"ruleId":"424","severity":1,"message":"428","line":137,"column":25,"nodeType":"426","messageId":"427","endLine":137,"endColumn":27},{"ruleId":"424","severity":1,"message":"428","line":439,"column":30,"nodeType":"426","messageId":"427","endLine":439,"endColumn":32},{"ruleId":"424","severity":1,"message":"428","line":616,"column":34,"nodeType":"426","messageId":"427","endLine":616,"endColumn":36},{"ruleId":"460","severity":1,"message":"461","line":31,"column":48,"nodeType":"462","messageId":"463","endLine":36,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":44,"column":48,"nodeType":"462","messageId":"463","endLine":46,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":55,"column":48,"nodeType":"462","messageId":"463","endLine":58,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":68,"column":48,"nodeType":"462","messageId":"463","endLine":70,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":91,"column":48,"nodeType":"462","messageId":"463","endLine":100,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":109,"column":48,"nodeType":"462","messageId":"463","endLine":111,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":119,"column":48,"nodeType":"462","messageId":"463","endLine":121,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":29,"column":48,"nodeType":"462","messageId":"463","endLine":31,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":40,"column":48,"nodeType":"462","messageId":"463","endLine":46,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":54,"column":48,"nodeType":"462","messageId":"463","endLine":56,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":62,"column":48,"nodeType":"462","messageId":"463","endLine":64,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":71,"column":48,"nodeType":"462","messageId":"463","endLine":78,"endColumn":10},{"ruleId":"460","severity":1,"message":"461","line":86,"column":48,"nodeType":"462","messageId":"463","endLine":95,"endColumn":10},{"ruleId":"479","severity":1,"message":"480","line":87,"column":28,"nodeType":"490","messageId":"482","endLine":87,"endColumn":39},{"ruleId":"418","severity":1,"message":"502","line":4,"column":10,"nodeType":"420","messageId":"421","endLine":4,"endColumn":16},{"ruleId":"418","severity":1,"message":"443","line":8,"column":7,"nodeType":"420","messageId":"421","endLine":8,"endColumn":13},{"ruleId":"418","severity":1,"message":"503","line":84,"column":24,"nodeType":"420","messageId":"421","endLine":84,"endColumn":33},{"ruleId":"418","severity":1,"message":"504","line":84,"column":35,"nodeType":"420","messageId":"421","endLine":84,"endColumn":41},{"ruleId":"418","severity":1,"message":"505","line":1,"column":8,"nodeType":"420","messageId":"421","endLine":1,"endColumn":19},"no-unused-vars","'userConfirmation' is assigned a value but never used.","Identifier","unusedVar","'step' is defined but never used.","'index' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'currentTourType' is assigned a value but never used.","'tourType' is assigned a value but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'trail' is assigned a value but never used.","'position' is assigned a value but never used.","'open' is assigned a value but never used.","'localStorageCount' is assigned a value but never used.","no-native-reassign",["506"],"no-negated-in-lhs",["507"],"'chrome' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-script-url","Script URL is a form of eval.","Literal","unexpectedScriptURL","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",["506"],["507"],"'Button' is defined but never used.","'ModalFooter' is defined but never used.","'Form' is defined but never used.","'Input' is defined but never used.","'Icon' is defined but never used.","require-yield","This generator function does not have 'yield'.","FunctionExpression","missingYield",["506"],["507"],"strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"508","text":"509"},"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","no-array-constructor","The array literal notation [] is preferable.","CallExpression","preferLiteral","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-extra-bind","The function binding is unnecessary.",{"range":"510","text":"509"},"'get' is defined but never used.","Array.prototype.map() expects a value to be returned at the end of arrow function.","NewExpression","'authToken' is defined but never used.","'reload' is defined but never used.","'userData' is defined but never used.",{"range":"511","text":"509"},"'followerList' is assigned a value but never used.","'$' is defined but never used.","'sender' is assigned a value but never used.","'receiver' is assigned a value but never used.","'draggie' is assigned a value but never used.","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'getBalance' is defined but never used.","'wallet' is defined but never used.","'toAddress' is assigned a value but never used.","'amount' is assigned a value but never used.","'ContractKit' is defined but never used.","no-global-assign","no-unsafe-negation",[0,13],"",[5026,5037],[1520,1531]]